
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package lexer;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class sintax extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public sintax() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u01ff\000\002\002\004\000\002\002\003\000\002\026" +
    "\003\000\002\026\003\000\002\003\004\000\002\003\004" +
    "\000\002\003\004\000\002\003\004\000\002\003\004\000" +
    "\002\003\004\000\002\003\004\000\002\003\004\000\002" +
    "\003\004\000\002\003\004\000\002\003\004\000\002\003" +
    "\004\000\002\003\004\000\002\003\004\000\002\003\004" +
    "\000\002\003\004\000\002\003\004\000\002\003\004\000" +
    "\002\003\004\000\002\003\004\000\002\003\004\000\002" +
    "\004\017\000\002\004\020\000\002\004\016\000\002\004" +
    "\017\000\002\004\016\000\002\004\017\000\002\004\015" +
    "\000\002\004\016\000\002\004\013\000\002\004\014\000" +
    "\002\004\015\000\002\004\013\000\002\004\014\000\002" +
    "\004\013\000\002\004\014\000\002\004\012\000\002\004" +
    "\011\000\002\004\004\000\002\005\005\000\002\005\005" +
    "\000\002\005\005\000\002\005\003\000\002\005\003\000" +
    "\002\005\003\000\002\012\012\000\002\012\011\000\002" +
    "\012\011\000\002\012\010\000\002\012\011\000\002\012" +
    "\010\000\002\012\010\000\002\012\007\000\002\012\010" +
    "\000\002\012\007\000\002\012\007\000\002\012\006\000" +
    "\002\012\004\000\002\021\012\000\002\021\011\000\002" +
    "\021\011\000\002\021\010\000\002\021\011\000\002\021" +
    "\010\000\002\021\010\000\002\021\007\000\002\021\011" +
    "\000\002\021\010\000\002\021\010\000\002\021\007\000" +
    "\002\021\010\000\002\021\007\000\002\021\007\000\002" +
    "\021\006\000\002\021\005\000\002\022\004\000\002\024" +
    "\007\000\002\024\007\000\002\024\007\000\002\024\005" +
    "\000\002\024\005\000\002\024\005\000\002\023\003\000" +
    "\002\023\003\000\002\023\005\000\002\023\005\000\002" +
    "\023\005\000\002\023\005\000\002\023\005\000\002\023" +
    "\005\000\002\030\014\000\002\030\014\000\002\030\013" +
    "\000\002\030\013\000\002\030\013\000\002\030\012\000" +
    "\002\030\013\000\002\030\013\000\002\030\012\000\002" +
    "\030\012\000\002\030\012\000\002\030\011\000\002\044" +
    "\003\000\002\044\003\000\002\044\004\000\002\044\003" +
    "\000\002\044\005\000\002\044\006\000\002\044\005\000" +
    "\002\044\004\000\002\047\007\000\002\047\006\000\002" +
    "\047\010\000\002\047\007\000\002\047\007\000\002\047" +
    "\006\000\002\047\007\000\002\047\006\000\002\047\007" +
    "\000\002\047\006\000\002\047\007\000\002\047\006\000" +
    "\002\047\007\000\002\047\006\000\002\047\003\000\002" +
    "\050\003\000\002\050\003\000\002\050\003\000\002\045" +
    "\006\000\002\045\003\000\002\031\004\000\002\031\003" +
    "\000\002\033\005\000\002\046\003\000\002\046\003\000" +
    "\002\046\003\000\002\032\005\000\002\032\003\000\002" +
    "\034\004\000\002\034\004\000\002\034\005\000\002\034" +
    "\007\000\002\034\004\000\002\034\003\000\002\213\003" +
    "\000\002\213\003\000\002\051\004\000\002\052\003\000" +
    "\002\052\003\000\002\052\003\000\002\052\003\000\002" +
    "\052\003\000\002\052\003\000\002\052\003\000\002\053" +
    "\004\000\002\054\005\000\002\055\004\000\002\056\005" +
    "\000\002\056\003\000\002\057\003\000\002\057\003\000" +
    "\002\060\005\000\002\060\003\000\002\061\014\000\002" +
    "\062\004\000\002\062\003\000\002\063\005\000\002\063" +
    "\003\000\002\064\003\000\002\064\003\000\002\064\003" +
    "\000\002\065\003\000\002\065\003\000\002\066\006\000" +
    "\002\067\005\000\002\070\003\000\002\070\003\000\002" +
    "\070\003\000\002\070\003\000\002\071\005\000\002\072" +
    "\004\000\002\072\003\000\002\073\006\000\002\074\003" +
    "\000\002\074\003\000\002\074\003\000\002\075\006\000" +
    "\002\076\014\000\002\077\003\000\002\077\003\000\002" +
    "\100\005\000\002\101\005\000\002\102\006\000\002\102" +
    "\003\000\002\103\006\000\002\103\003\000\002\104\007" +
    "\000\002\104\003\000\002\105\011\000\002\106\004\000" +
    "\002\106\003\000\002\107\004\000\002\107\003\000\002" +
    "\110\005\000\002\110\003\000\002\111\004\000\002\111" +
    "\003\000\002\112\003\000\002\112\003\000\002\112\003" +
    "\000\002\113\005\000\002\113\003\000\002\172\004\000" +
    "\002\173\006\000\002\173\005\000\002\173\012\000\002" +
    "\173\007\000\002\174\007\000\002\175\006\000\002\175" +
    "\003\000\002\176\006\000\002\177\005\000\002\177\003" +
    "\000\002\162\006\000\002\114\006\000\002\115\005\000" +
    "\002\115\003\000\002\115\003\000\002\116\010\000\002" +
    "\116\007\000\002\116\006\000\002\116\004\000\002\116" +
    "\004\000\002\117\003\000\002\117\003\000\002\215\007" +
    "\000\002\215\003\000\002\120\003\000\002\120\005\000" +
    "\002\121\004\000\002\121\003\000\002\121\003\000\002" +
    "\163\003\000\002\163\003\000\002\214\003\000\002\214" +
    "\003\000\002\122\004\000\002\122\003\000\002\123\003" +
    "\000\002\123\003\000\002\123\003\000\002\123\003\000" +
    "\002\123\003\000\002\124\004\000\002\124\003\000\002" +
    "\200\005\000\002\200\003\000\002\201\004\000\002\201" +
    "\003\000\002\202\005\000\002\202\010\000\002\202\004" +
    "\000\002\202\010\000\002\202\007\000\002\144\003\000" +
    "\002\144\003\000\002\144\003\000\002\203\004\000\002" +
    "\203\003\000\002\204\005\000\002\204\003\000\002\205" +
    "\005\000\002\205\003\000\002\206\004\000\002\206\004" +
    "\000\002\207\003\000\002\207\003\000\002\210\003\000" +
    "\002\210\004\000\002\211\005\000\002\211\004\000\002" +
    "\211\006\000\002\212\004\000\002\212\004\000\002\212" +
    "\003\000\002\125\007\000\002\126\003\000\002\126\003" +
    "\000\002\127\006\000\002\127\004\000\002\137\010\000" +
    "\002\137\007\000\002\137\006\000\002\137\012\000\002" +
    "\137\015\000\002\137\011\000\002\137\012\000\002\137" +
    "\011\000\002\137\010\000\002\137\011\000\002\130\005" +
    "\000\002\131\007\000\002\131\010\000\002\131\006\000" +
    "\002\131\005\000\002\131\006\000\002\131\004\000\002" +
    "\131\004\000\002\131\003\000\002\131\004\000\002\132" +
    "\004\000\002\132\003\000\002\132\005\000\002\132\005" +
    "\000\002\132\004\000\002\132\004\000\002\132\003\000" +
    "\002\133\003\000\002\133\004\000\002\134\007\000\002" +
    "\140\006\000\002\154\010\000\002\141\003\000\002\141" +
    "\003\000\002\142\010\000\002\142\011\000\002\143\005" +
    "\000\002\145\006\000\002\145\012\000\002\146\006\000" +
    "\002\146\012\000\002\147\006\000\002\147\012\000\002" +
    "\150\006\000\002\150\012\000\002\150\006\000\002\150" +
    "\012\000\002\151\011\000\002\151\005\000\002\152\006" +
    "\000\002\152\012\000\002\153\006\000\002\013\006\000" +
    "\002\013\005\000\002\013\005\000\002\013\004\000\002" +
    "\013\005\000\002\013\004\000\002\020\022\000\002\020" +
    "\021\000\002\020\021\000\002\020\020\000\002\020\021" +
    "\000\002\020\020\000\002\025\004\000\002\025\003\000" +
    "\002\015\010\000\002\015\011\000\002\016\005\000\002" +
    "\016\006\000\002\016\006\000\002\016\006\000\002\016" +
    "\004\000\002\016\005\000\002\016\005\000\002\016\005" +
    "\000\002\017\003\000\002\017\003\000\002\017\003\000" +
    "\002\017\003\000\002\014\004\000\002\014\003\000\002" +
    "\041\003\000\002\041\005\000\002\041\005\000\002\041" +
    "\003\000\002\042\005\000\002\042\005\000\002\042\003" +
    "\000\002\043\004\000\002\043\005\000\002\043\003\000" +
    "\002\036\005\000\002\036\004\000\002\036\004\000\002" +
    "\040\003\000\002\040\003\000\002\040\003\000\002\040" +
    "\003\000\002\037\005\000\002\037\003\000\002\037\003" +
    "\000\002\037\003\000\002\037\003\000\002\037\003\000" +
    "\002\037\003\000\002\037\004\000\002\037\003\000\002" +
    "\037\003\000\002\037\004\000\002\037\003\000\002\037" +
    "\004\000\002\037\003\000\002\037\004\000\002\037\003" +
    "\000\002\035\003\000\002\035\003\000\002\035\003\000" +
    "\002\035\004\000\002\035\004\000\002\155\006\000\002" +
    "\155\006\000\002\155\005\000\002\155\005\000\002\217" +
    "\006\000\002\217\006\000\002\217\005\000\002\217\005" +
    "\000\002\220\005\000\002\221\006\000\002\221\006\000" +
    "\002\156\015\000\002\157\003\000\002\157\003\000\002" +
    "\157\003\000\002\160\003\000\002\160\003\000\002\160" +
    "\003\000\002\161\003\000\002\161\003\000\002\161\003" +
    "\000\002\161\003\000\002\161\003\000\002\222\003\000" +
    "\002\222\003\000\002\222\003\000\002\222\003\000\002" +
    "\223\003\000\002\223\003\000\002\164\005\000\002\164" +
    "\003\000\002\165\004\000\002\165\003\000\002\166\004" +
    "\000\002\167\005\000\002\167\003\000\002\007\006\000" +
    "\002\007\007\000\002\007\004\000\002\007\005\000\002" +
    "\136\003\000\002\136\006\000\002\136\003\000\002\136" +
    "\006\000\002\136\003\000\002\136\006\000\002\136\003" +
    "\000\002\136\006\000\002\136\003\000\002\136\006\000" +
    "\002\136\003\000\002\136\006\000\002\136\003\000\002" +
    "\136\006\000\002\136\003\000\002\136\006\000\002\136" +
    "\006\000\002\136\003\000\002\136\006\000\002\136\003" +
    "\000\002\136\003\000\002\136\003\000\002\136\003\000" +
    "\002\136\003\000\002\136\003\000\002\136\003\000\002" +
    "\136\003\000\002\136\003\000\002\136\003\000\002\136" +
    "\003\000\002\136\004\000\002\136\004\000\002\136\004" +
    "\000\002\136\004\000\002\136\003\000\002\136\006\000" +
    "\002\136\006\000\002\135\006\000\002\135\005\000\002" +
    "\135\003\000\002\011\003\000\002\011\005\000\002\011" +
    "\007\000\002\011\004\000\002\011\004\000\002\011\004" +
    "\000\002\011\005\000\002\011\005\000\002\010\003\000" +
    "\002\010\003\000\002\010\003\000\002\010\003\000\002" +
    "\027\002\000\002\006\003\000\002\006\003\000\002\006" +
    "\004\000\002\006\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0487\000\040\002\ufe07\003\030\004\040\024\015\050" +
    "\012\061\024\140\041\145\042\203\016\204\010\207\022" +
    "\212\047\213\004\214\052\215\034\001\002\000\014\011" +
    "\055\013\062\036\061\205\060\206\056\001\002\000\040" +
    "\002\ufe07\003\030\004\040\024\015\050\012\061\024\140" +
    "\041\145\042\203\016\204\010\207\022\212\047\213\004" +
    "\214\052\215\034\001\002\000\040\002\ufe07\003\030\004" +
    "\040\024\015\050\012\061\024\140\041\145\042\203\016" +
    "\204\010\207\022\212\047\213\004\214\052\215\034\001" +
    "\002\000\040\002\ufe07\003\030\004\040\024\015\050\012" +
    "\061\024\140\041\145\042\203\016\204\010\207\022\212" +
    "\047\213\004\214\052\215\034\001\002\000\004\163\u0482" +
    "\001\002\000\004\002\u0481\001\002\000\020\003\u0440\006" +
    "\u023d\011\055\013\062\036\061\205\060\206\056\001\002" +
    "\000\040\002\ufe07\003\030\004\040\024\015\050\012\061" +
    "\024\140\041\145\042\203\016\204\010\207\022\212\047" +
    "\213\004\214\052\215\034\001\002\000\040\002\ufe07\003" +
    "\030\004\040\024\015\050\012\061\024\140\041\145\042" +
    "\203\016\204\010\207\022\212\047\213\004\214\052\215" +
    "\034\001\002\000\010\003\u0422\006\u023d\025\u0423\001\002" +
    "\000\014\124\u03bf\127\u03c0\137\u03c1\163\u03c2\172\u03c3\001" +
    "\002\000\040\002\ufe07\003\030\004\040\024\015\050\012" +
    "\061\024\140\041\145\042\203\016\204\010\207\022\212" +
    "\047\213\004\214\052\215\034\001\002\000\040\002\ufe07" +
    "\003\030\004\040\024\015\050\012\061\024\140\041\145" +
    "\042\203\016\204\010\207\022\212\047\213\004\214\052" +
    "\215\034\001\002\000\040\002\ufe07\003\030\004\040\024" +
    "\015\050\012\061\024\140\041\145\042\203\016\204\010" +
    "\207\022\212\047\213\004\214\052\215\034\001\002\000" +
    "\020\011\055\013\062\036\061\205\060\206\056\210\u03b4" +
    "\211\u03b5\001\002\000\040\002\ufe07\003\030\004\040\024" +
    "\015\050\012\061\024\140\041\145\042\203\016\204\010" +
    "\207\022\212\047\213\004\214\052\215\034\001\002\000" +
    "\046\005\ufe07\006\u023d\011\055\013\062\020\ufe07\025\ufe07" +
    "\036\061\054\u02e3\061\u02d9\062\u02db\063\u02dd\107\u02df\110" +
    "\u02e4\171\u02e2\205\060\206\056\244\u02e0\245\u02dc\001\002" +
    "\000\040\002\ufe07\003\030\004\040\024\015\050\012\061" +
    "\024\140\041\145\042\203\016\204\010\207\022\212\047" +
    "\213\004\214\052\215\034\001\002\000\004\002\ufffe\001" +
    "\002\000\040\002\ufe07\003\030\004\040\024\015\050\012" +
    "\061\024\140\041\145\042\203\016\204\010\207\022\212" +
    "\047\213\004\214\052\215\034\001\002\000\006\021\073" +
    "\022\075\001\002\000\040\002\ufe07\003\030\004\040\024" +
    "\015\050\012\061\024\140\041\145\042\203\016\204\010" +
    "\207\022\212\047\213\004\214\052\215\034\001\002\000" +
    "\004\002\000\001\002\000\040\002\ufe07\003\030\004\040" +
    "\024\015\050\012\061\024\140\041\145\042\203\016\204" +
    "\010\207\022\212\047\213\004\214\052\215\034\001\002" +
    "\000\014\011\055\013\062\036\061\205\060\206\056\001" +
    "\002\000\040\002\ufe07\003\030\004\040\024\015\050\012" +
    "\061\024\140\041\145\042\203\016\204\010\207\022\212" +
    "\047\213\004\214\052\215\034\001\002\000\040\002\ufe07" +
    "\003\030\004\040\024\015\050\012\061\024\140\041\145" +
    "\042\203\016\204\010\207\022\212\047\213\004\214\052" +
    "\215\034\001\002\000\040\002\ufe07\003\030\004\040\024" +
    "\015\050\012\061\024\140\041\145\042\203\016\204\010" +
    "\207\022\212\047\213\004\214\052\215\034\001\002\000" +
    "\006\005\u023e\006\u023d\001\002\000\022\115\ufe07\116\ufe07" +
    "\117\227\124\ufe07\127\225\137\233\163\234\172\226\001" +
    "\002\000\014\124\123\127\124\137\125\163\126\172\127" +
    "\001\002\000\040\002\ufe07\003\030\004\040\024\015\050" +
    "\012\061\024\140\041\145\042\203\016\204\010\207\022" +
    "\212\047\213\004\214\052\215\034\001\002\000\040\002" +
    "\ufe07\003\030\004\040\024\015\050\012\061\024\140\041" +
    "\145\042\203\016\204\010\207\022\212\047\213\004\214" +
    "\052\215\034\001\002\000\040\002\ufe07\003\030\004\040" +
    "\024\015\050\012\061\024\140\041\145\042\203\016\204" +
    "\010\207\022\212\047\213\004\214\052\215\034\001\002" +
    "\000\040\002\ufe07\003\030\004\040\024\015\050\012\061" +
    "\024\140\041\145\042\203\016\204\010\207\022\212\047" +
    "\213\004\214\052\215\034\001\002\000\020\011\055\013" +
    "\062\036\061\205\060\206\056\210\107\211\110\001\002" +
    "\000\040\002\ufe07\003\030\004\040\024\015\050\012\061" +
    "\024\140\041\145\042\203\016\204\010\207\022\212\047" +
    "\213\004\214\052\215\034\001\002\000\004\002\uffff\001" +
    "\002\000\006\210\053\211\054\001\002\000\014\011\055" +
    "\013\062\036\061\205\060\206\056\001\002\000\014\011" +
    "\055\013\062\036\061\205\060\206\056\001\002\000\014" +
    "\011\055\013\062\036\061\205\060\206\056\001\002\000" +
    "\004\013\100\001\002\000\006\021\073\022\075\001\002" +
    "\000\004\013\072\001\002\000\004\013\071\001\002\000" +
    "\310\002\ufe13\003\ufe13\004\ufe13\005\ufe13\007\ufe13\011\ufe13" +
    "\012\ufe13\013\ufe13\014\ufe13\015\ufe13\016\ufe13\017\064\020" +
    "\063\021\ufe13\022\ufe13\023\ufe13\024\ufe13\025\ufe13\027\ufe13" +
    "\031\ufe13\032\ufe13\033\ufe13\034\ufe13\035\ufe13\036\ufe13\037" +
    "\ufe13\044\ufe13\045\ufe13\046\ufe13\050\ufe13\051\ufe13\052\ufe13" +
    "\053\ufe13\054\ufe13\055\ufe13\056\ufe13\061\ufe13\064\ufe13\066" +
    "\ufe13\067\ufe13\070\ufe13\072\ufe13\073\ufe13\074\ufe13\075\ufe13" +
    "\076\ufe13\077\ufe13\100\ufe13\101\ufe13\102\ufe13\103\ufe13\104" +
    "\ufe13\105\ufe13\106\ufe13\111\ufe13\112\ufe13\113\ufe13\115\ufe13" +
    "\116\ufe13\117\ufe13\120\ufe13\121\ufe13\123\ufe13\134\ufe13\140" +
    "\ufe13\143\ufe13\145\ufe13\146\ufe13\147\ufe13\150\ufe13\151\ufe13" +
    "\152\ufe13\153\ufe13\154\ufe13\155\ufe13\156\ufe13\157\ufe13\160" +
    "\ufe13\161\ufe13\162\ufe13\163\ufe13\164\ufe13\165\ufe13\166\ufe13" +
    "\167\ufe13\170\ufe13\177\ufe13\201\ufe13\202\ufe13\203\ufe13\204" +
    "\ufe13\205\ufe13\206\ufe13\207\ufe13\212\ufe13\213\ufe13\214\ufe13" +
    "\215\ufe13\246\ufe13\001\002\000\014\011\055\013\062\036" +
    "\061\205\060\206\056\001\002\000\004\013\065\001\002" +
    "\000\310\002\ufe12\003\ufe12\004\ufe12\005\ufe12\007\ufe12\011" +
    "\ufe12\012\ufe12\013\ufe12\014\ufe12\015\ufe12\016\ufe12\017\066" +
    "\020\ufe12\021\ufe12\022\ufe12\023\ufe12\024\ufe12\025\ufe12\027" +
    "\ufe12\031\ufe12\032\ufe12\033\ufe12\034\ufe12\035\ufe12\036\ufe12" +
    "\037\ufe12\044\ufe12\045\ufe12\046\ufe12\050\ufe12\051\ufe12\052" +
    "\ufe12\053\ufe12\054\ufe12\055\ufe12\056\ufe12\061\ufe12\064\ufe12" +
    "\066\ufe12\067\ufe12\070\ufe12\072\ufe12\073\ufe12\074\ufe12\075" +
    "\ufe12\076\ufe12\077\ufe12\100\ufe12\101\ufe12\102\ufe12\103\ufe12" +
    "\104\ufe12\105\ufe12\106\ufe12\111\ufe12\112\ufe12\113\ufe12\115" +
    "\ufe12\116\ufe12\117\ufe12\120\ufe12\121\ufe12\123\ufe12\134\ufe12" +
    "\140\ufe12\143\ufe12\145\ufe12\146\ufe12\147\ufe12\150\ufe12\151" +
    "\ufe12\152\ufe12\153\ufe12\154\ufe12\155\ufe12\156\ufe12\157\ufe12" +
    "\160\ufe12\161\ufe12\162\ufe12\163\ufe12\164\ufe12\165\ufe12\166" +
    "\ufe12\167\ufe12\170\ufe12\177\ufe12\201\ufe12\202\ufe12\203\ufe12" +
    "\204\ufe12\205\ufe12\206\ufe12\207\ufe12\212\ufe12\213\ufe12\214" +
    "\ufe12\215\ufe12\246\ufe12\001\002\000\004\013\067\001\002" +
    "\000\306\002\ufe11\003\ufe11\004\ufe11\005\ufe11\007\ufe11\011" +
    "\ufe11\012\ufe11\013\ufe11\014\ufe11\015\ufe11\016\ufe11\020\ufe11" +
    "\021\ufe11\022\ufe11\023\ufe11\024\ufe11\025\ufe11\027\ufe11\031" +
    "\ufe11\032\ufe11\033\ufe11\034\ufe11\035\ufe11\036\ufe11\037\ufe11" +
    "\044\ufe11\045\ufe11\046\ufe11\050\ufe11\051\ufe11\052\ufe11\053" +
    "\ufe11\054\ufe11\055\ufe11\056\ufe11\061\ufe11\064\ufe11\066\ufe11" +
    "\067\ufe11\070\ufe11\072\ufe11\073\ufe11\074\ufe11\075\ufe11\076" +
    "\ufe11\077\ufe11\100\ufe11\101\ufe11\102\ufe11\103\ufe11\104\ufe11" +
    "\105\ufe11\106\ufe11\111\ufe11\112\ufe11\113\ufe11\115\ufe11\116" +
    "\ufe11\117\ufe11\120\ufe11\121\ufe11\123\ufe11\134\ufe11\140\ufe11" +
    "\143\ufe11\145\ufe11\146\ufe11\147\ufe11\150\ufe11\151\ufe11\152" +
    "\ufe11\153\ufe11\154\ufe11\155\ufe11\156\ufe11\157\ufe11\160\ufe11" +
    "\161\ufe11\162\ufe11\163\ufe11\164\ufe11\165\ufe11\166\ufe11\167" +
    "\ufe11\170\ufe11\177\ufe11\201\ufe11\202\ufe11\203\ufe11\204\ufe11" +
    "\205\ufe11\206\ufe11\207\ufe11\212\ufe11\213\ufe11\214\ufe11\215" +
    "\ufe11\246\ufe11\001\002\000\306\002\ufe0d\003\ufe0d\004\ufe0d" +
    "\005\ufe0d\007\ufe0d\011\ufe0d\012\ufe0d\013\ufe0d\014\ufe0d\015" +
    "\ufe0d\016\ufe0d\020\ufe0d\021\ufe0d\022\ufe0d\023\ufe0d\024\ufe0d" +
    "\025\ufe0d\027\ufe0d\031\ufe0d\032\ufe0d\033\ufe0d\034\ufe0d\035" +
    "\ufe0d\036\ufe0d\037\ufe0d\044\ufe0d\045\ufe0d\046\ufe0d\050\ufe0d" +
    "\051\ufe0d\052\ufe0d\053\ufe0d\054\ufe0d\055\ufe0d\056\ufe0d\061" +
    "\ufe0d\064\ufe0d\066\ufe0d\067\ufe0d\070\ufe0d\072\ufe0d\073\ufe0d" +
    "\074\ufe0d\075\ufe0d\076\ufe0d\077\ufe0d\100\ufe0d\101\ufe0d\102" +
    "\ufe0d\103\ufe0d\104\ufe0d\105\ufe0d\106\ufe0d\111\ufe0d\112\ufe0d" +
    "\113\ufe0d\115\ufe0d\116\ufe0d\117\ufe0d\120\ufe0d\121\ufe0d\123" +
    "\ufe0d\134\ufe0d\140\ufe0d\143\ufe0d\145\ufe0d\146\ufe0d\147\ufe0d" +
    "\150\ufe0d\151\ufe0d\152\ufe0d\153\ufe0d\154\ufe0d\155\ufe0d\156" +
    "\ufe0d\157\ufe0d\160\ufe0d\161\ufe0d\162\ufe0d\163\ufe0d\164\ufe0d" +
    "\165\ufe0d\166\ufe0d\167\ufe0d\170\ufe0d\177\ufe0d\201\ufe0d\202" +
    "\ufe0d\203\ufe0d\204\ufe0d\205\ufe0d\206\ufe0d\207\ufe0d\212\ufe0d" +
    "\213\ufe0d\214\ufe0d\215\ufe0d\246\ufe0d\001\002\000\306\002" +
    "\ufe10\003\ufe10\004\ufe10\005\ufe10\007\ufe10\011\ufe10\012\ufe10" +
    "\013\ufe10\014\ufe10\015\ufe10\016\ufe10\020\ufe10\021\ufe10\022" +
    "\ufe10\023\ufe10\024\ufe10\025\ufe10\027\ufe10\031\ufe10\032\ufe10" +
    "\033\ufe10\034\ufe10\035\ufe10\036\ufe10\037\ufe10\044\ufe10\045" +
    "\ufe10\046\ufe10\050\ufe10\051\ufe10\052\ufe10\053\ufe10\054\ufe10" +
    "\055\ufe10\056\ufe10\061\ufe10\064\ufe10\066\ufe10\067\ufe10\070" +
    "\ufe10\072\ufe10\073\ufe10\074\ufe10\075\ufe10\076\ufe10\077\ufe10" +
    "\100\ufe10\101\ufe10\102\ufe10\103\ufe10\104\ufe10\105\ufe10\106" +
    "\ufe10\111\ufe10\112\ufe10\113\ufe10\115\ufe10\116\ufe10\117\ufe10" +
    "\120\ufe10\121\ufe10\123\ufe10\134\ufe10\140\ufe10\143\ufe10\145" +
    "\ufe10\146\ufe10\147\ufe10\150\ufe10\151\ufe10\152\ufe10\153\ufe10" +
    "\154\ufe10\155\ufe10\156\ufe10\157\ufe10\160\ufe10\161\ufe10\162" +
    "\ufe10\163\ufe10\164\ufe10\165\ufe10\166\ufe10\167\ufe10\170\ufe10" +
    "\177\ufe10\201\ufe10\202\ufe10\203\ufe10\204\ufe10\205\ufe10\206" +
    "\ufe10\207\ufe10\212\ufe10\213\ufe10\214\ufe10\215\ufe10\246\ufe10" +
    "\001\002\000\306\002\ufe0f\003\ufe0f\004\ufe0f\005\ufe0f\007" +
    "\ufe0f\011\ufe0f\012\ufe0f\013\ufe0f\014\ufe0f\015\ufe0f\016\ufe0f" +
    "\020\ufe0f\021\ufe0f\022\ufe0f\023\ufe0f\024\ufe0f\025\ufe0f\027" +
    "\ufe0f\031\ufe0f\032\ufe0f\033\ufe0f\034\ufe0f\035\ufe0f\036\ufe0f" +
    "\037\ufe0f\044\ufe0f\045\ufe0f\046\ufe0f\050\ufe0f\051\ufe0f\052" +
    "\ufe0f\053\ufe0f\054\ufe0f\055\ufe0f\056\ufe0f\061\ufe0f\064\ufe0f" +
    "\066\ufe0f\067\ufe0f\070\ufe0f\072\ufe0f\073\ufe0f\074\ufe0f\075" +
    "\ufe0f\076\ufe0f\077\ufe0f\100\ufe0f\101\ufe0f\102\ufe0f\103\ufe0f" +
    "\104\ufe0f\105\ufe0f\106\ufe0f\111\ufe0f\112\ufe0f\113\ufe0f\115" +
    "\ufe0f\116\ufe0f\117\ufe0f\120\ufe0f\121\ufe0f\123\ufe0f\134\ufe0f" +
    "\140\ufe0f\143\ufe0f\145\ufe0f\146\ufe0f\147\ufe0f\150\ufe0f\151" +
    "\ufe0f\152\ufe0f\153\ufe0f\154\ufe0f\155\ufe0f\156\ufe0f\157\ufe0f" +
    "\160\ufe0f\161\ufe0f\162\ufe0f\163\ufe0f\164\ufe0f\165\ufe0f\166" +
    "\ufe0f\167\ufe0f\170\ufe0f\177\ufe0f\201\ufe0f\202\ufe0f\203\ufe0f" +
    "\204\ufe0f\205\ufe0f\206\ufe0f\207\ufe0f\212\ufe0f\213\ufe0f\214" +
    "\ufe0f\215\ufe0f\246\ufe0f\001\002\000\046\002\ufe06\003\ufe06" +
    "\004\ufe06\021\ufe06\022\ufe06\024\ufe06\046\ufe06\050\ufe06\061" +
    "\ufe06\140\ufe06\145\ufe06\203\ufe06\204\ufe06\207\ufe06\212\ufe06" +
    "\213\ufe06\214\ufe06\215\ufe06\001\002\000\040\002\ufe59\003" +
    "\ufe59\004\ufe59\024\ufe59\050\ufe59\061\ufe59\140\ufe59\145\ufe59" +
    "\203\ufe59\204\ufe59\207\ufe59\212\ufe59\213\ufe59\214\ufe59\215" +
    "\ufe59\001\002\000\046\002\ufe05\003\ufe05\004\ufe05\021\ufe05" +
    "\022\ufe05\024\ufe05\046\ufe05\050\ufe05\061\ufe05\140\ufe05\145" +
    "\ufe05\203\ufe05\204\ufe05\207\ufe05\212\ufe05\213\ufe05\214\ufe05" +
    "\215\ufe05\001\002\000\046\002\ufe04\003\ufe04\004\ufe04\021" +
    "\ufe04\022\ufe04\024\ufe04\046\ufe04\050\ufe04\061\ufe04\140\ufe04" +
    "\145\ufe04\203\ufe04\204\ufe04\207\ufe04\212\ufe04\213\ufe04\214" +
    "\ufe04\215\ufe04\001\002\000\046\002\ufe03\003\ufe03\004\ufe03" +
    "\021\ufe03\022\ufe03\024\ufe03\046\ufe03\050\ufe03\061\ufe03\140" +
    "\ufe03\145\ufe03\203\ufe03\204\ufe03\207\ufe03\212\ufe03\213\ufe03" +
    "\214\ufe03\215\ufe03\001\002\000\306\002\ufe0e\003\ufe0e\004" +
    "\ufe0e\005\ufe0e\007\ufe0e\011\ufe0e\012\ufe0e\013\ufe0e\014\ufe0e" +
    "\015\ufe0e\016\ufe0e\020\ufe0e\021\ufe0e\022\ufe0e\023\ufe0e\024" +
    "\ufe0e\025\ufe0e\027\ufe0e\031\ufe0e\032\ufe0e\033\ufe0e\034\ufe0e" +
    "\035\ufe0e\036\ufe0e\037\ufe0e\044\ufe0e\045\ufe0e\046\ufe0e\050" +
    "\ufe0e\051\ufe0e\052\ufe0e\053\ufe0e\054\ufe0e\055\ufe0e\056\ufe0e" +
    "\061\ufe0e\064\ufe0e\066\ufe0e\067\ufe0e\070\ufe0e\072\ufe0e\073" +
    "\ufe0e\074\ufe0e\075\ufe0e\076\ufe0e\077\ufe0e\100\ufe0e\101\ufe0e" +
    "\102\ufe0e\103\ufe0e\104\ufe0e\105\ufe0e\106\ufe0e\111\ufe0e\112" +
    "\ufe0e\113\ufe0e\115\ufe0e\116\ufe0e\117\ufe0e\120\ufe0e\121\ufe0e" +
    "\123\ufe0e\134\ufe0e\140\ufe0e\143\ufe0e\145\ufe0e\146\ufe0e\147" +
    "\ufe0e\150\ufe0e\151\ufe0e\152\ufe0e\153\ufe0e\154\ufe0e\155\ufe0e" +
    "\156\ufe0e\157\ufe0e\160\ufe0e\161\ufe0e\162\ufe0e\163\ufe0e\164" +
    "\ufe0e\165\ufe0e\166\ufe0e\167\ufe0e\170\ufe0e\177\ufe0e\201\ufe0e" +
    "\202\ufe0e\203\ufe0e\204\ufe0e\205\ufe0e\206\ufe0e\207\ufe0e\212" +
    "\ufe0e\213\ufe0e\214\ufe0e\215\ufe0e\246\ufe0e\001\002\000\004" +
    "\012\102\001\002\000\306\002\ufe0c\003\ufe0c\004\ufe0c\005" +
    "\ufe0c\007\ufe0c\011\ufe0c\012\ufe0c\013\ufe0c\014\ufe0c\015\ufe0c" +
    "\016\ufe0c\020\ufe0c\021\ufe0c\022\ufe0c\023\ufe0c\024\ufe0c\025" +
    "\ufe0c\027\ufe0c\031\ufe0c\032\ufe0c\033\ufe0c\034\ufe0c\035\ufe0c" +
    "\036\ufe0c\037\ufe0c\044\ufe0c\045\ufe0c\046\ufe0c\050\ufe0c\051" +
    "\ufe0c\052\ufe0c\053\ufe0c\054\ufe0c\055\ufe0c\056\ufe0c\061\ufe0c" +
    "\064\ufe0c\066\ufe0c\067\ufe0c\070\ufe0c\072\ufe0c\073\ufe0c\074" +
    "\ufe0c\075\ufe0c\076\ufe0c\077\ufe0c\100\ufe0c\101\ufe0c\102\ufe0c" +
    "\103\ufe0c\104\ufe0c\105\ufe0c\106\ufe0c\111\ufe0c\112\ufe0c\113" +
    "\ufe0c\115\ufe0c\116\ufe0c\117\ufe0c\120\ufe0c\121\ufe0c\123\ufe0c" +
    "\134\ufe0c\140\ufe0c\143\ufe0c\145\ufe0c\146\ufe0c\147\ufe0c\150" +
    "\ufe0c\151\ufe0c\152\ufe0c\153\ufe0c\154\ufe0c\155\ufe0c\156\ufe0c" +
    "\157\ufe0c\160\ufe0c\161\ufe0c\162\ufe0c\163\ufe0c\164\ufe0c\165" +
    "\ufe0c\166\ufe0c\167\ufe0c\170\ufe0c\177\ufe0c\201\ufe0c\202\ufe0c" +
    "\203\ufe0c\204\ufe0c\205\ufe0c\206\ufe0c\207\ufe0c\212\ufe0c\213" +
    "\ufe0c\214\ufe0c\215\ufe0c\246\ufe0c\001\002\000\006\021\073" +
    "\022\075\001\002\000\040\002\ufe5a\003\ufe5a\004\ufe5a\024" +
    "\ufe5a\050\ufe5a\061\ufe5a\140\ufe5a\145\ufe5a\203\ufe5a\204\ufe5a" +
    "\207\ufe5a\212\ufe5a\213\ufe5a\214\ufe5a\215\ufe5a\001\002\000" +
    "\004\002\uffed\001\002\000\006\021\073\022\075\001\002" +
    "\000\014\011\055\013\062\036\061\205\060\206\056\001" +
    "\002\000\020\011\055\013\062\021\073\022\075\036\061" +
    "\205\060\206\056\001\002\000\040\002\ufe5c\003\ufe5c\004" +
    "\ufe5c\024\ufe5c\050\ufe5c\061\ufe5c\140\ufe5c\145\ufe5c\203\ufe5c" +
    "\204\ufe5c\207\ufe5c\212\ufe5c\213\ufe5c\214\ufe5c\215\ufe5c\001" +
    "\002\000\006\021\073\022\075\001\002\000\040\002\ufe5e" +
    "\003\ufe5e\004\ufe5e\024\ufe5e\050\ufe5e\061\ufe5e\140\ufe5e\145" +
    "\ufe5e\203\ufe5e\204\ufe5e\207\ufe5e\212\ufe5e\213\ufe5e\214\ufe5e" +
    "\215\ufe5e\001\002\000\006\021\073\022\075\001\002\000" +
    "\040\002\ufe5f\003\ufe5f\004\ufe5f\024\ufe5f\050\ufe5f\061\ufe5f" +
    "\140\ufe5f\145\ufe5f\203\ufe5f\204\ufe5f\207\ufe5f\212\ufe5f\213" +
    "\ufe5f\214\ufe5f\215\ufe5f\001\002\000\040\002\ufe5d\003\ufe5d" +
    "\004\ufe5d\024\ufe5d\050\ufe5d\061\ufe5d\140\ufe5d\145\ufe5d\203" +
    "\ufe5d\204\ufe5d\207\ufe5d\212\ufe5d\213\ufe5d\214\ufe5d\215\ufe5d" +
    "\001\002\000\004\002\uffec\001\002\000\004\002\ufff6\001" +
    "\002\000\004\002\ufffb\001\002\000\004\002\uffef\001\002" +
    "\000\016\011\055\013\201\036\061\173\177\205\060\206" +
    "\056\001\002\000\016\011\055\013\062\036\061\173\166" +
    "\205\060\206\056\001\002\000\016\011\055\013\062\036" +
    "\061\173\156\205\060\206\056\001\002\000\016\011\055" +
    "\013\062\036\061\173\141\205\060\206\056\001\002\000" +
    "\006\013\131\173\130\001\002\000\004\175\133\001\002" +
    "\000\006\021\073\022\075\001\002\000\040\002\ufeb2\003" +
    "\ufeb2\004\ufeb2\024\ufeb2\050\ufeb2\061\ufeb2\140\ufeb2\145\ufeb2" +
    "\203\ufeb2\204\ufeb2\207\ufeb2\212\ufeb2\213\ufeb2\214\ufeb2\215" +
    "\ufeb2\001\002\000\004\176\134\001\002\000\004\174\135" +
    "\001\002\000\004\013\136\001\002\000\006\021\073\022" +
    "\075\001\002\000\040\002\ufeb1\003\ufeb1\004\ufeb1\024\ufeb1" +
    "\050\ufeb1\061\ufeb1\140\ufeb1\145\ufeb1\203\ufeb1\204\ufeb1\207" +
    "\ufeb1\212\ufeb1\213\ufeb1\214\ufeb1\215\ufeb1\001\002\000\022" +
    "\011\ufe14\013\ufe14\020\154\021\ufe14\022\ufe14\036\ufe14\205" +
    "\ufe14\206\ufe14\001\002\000\004\175\147\001\002\000\020" +
    "\011\055\013\062\021\073\022\075\036\061\205\060\206" +
    "\056\001\002\000\040\002\ufeb4\003\ufeb4\004\ufeb4\024\ufeb4" +
    "\050\ufeb4\061\ufeb4\140\ufeb4\145\ufeb4\203\ufeb4\204\ufeb4\207" +
    "\ufeb4\212\ufeb4\213\ufeb4\214\ufeb4\215\ufeb4\001\002\000\004" +
    "\020\145\001\002\000\014\011\055\013\062\036\061\205" +
    "\060\206\056\001\002\000\020\011\ufe16\013\ufe16\021\ufe16" +
    "\022\ufe16\036\ufe16\205\ufe16\206\ufe16\001\002\000\004\176" +
    "\150\001\002\000\004\174\151\001\002\000\014\011\055" +
    "\013\062\036\061\205\060\206\056\001\002\000\020\011" +
    "\055\013\062\021\073\022\075\036\061\205\060\206\056" +
    "\001\002\000\040\002\ufeb3\003\ufeb3\004\ufeb3\024\ufeb3\050" +
    "\ufeb3\061\ufeb3\140\ufeb3\145\ufeb3\203\ufeb3\204\ufeb3\207\ufeb3" +
    "\212\ufeb3\213\ufeb3\214\ufeb3\215\ufeb3\001\002\000\014\011" +
    "\055\013\062\036\061\205\060\206\056\001\002\000\020" +
    "\011\ufe15\013\ufe15\021\ufe15\022\ufe15\036\ufe15\205\ufe15\206" +
    "\ufe15\001\002\000\004\175\161\001\002\000\020\011\055" +
    "\013\062\021\073\022\075\036\061\205\060\206\056\001" +
    "\002\000\040\002\ufeaa\003\ufeaa\004\ufeaa\024\ufeaa\050\ufeaa" +
    "\061\ufeaa\140\ufeaa\145\ufeaa\203\ufeaa\204\ufeaa\207\ufeaa\212" +
    "\ufeaa\213\ufeaa\214\ufeaa\215\ufeaa\001\002\000\004\176\162" +
    "\001\002\000\004\174\163\001\002\000\014\011\055\013" +
    "\062\036\061\205\060\206\056\001\002\000\020\011\055" +
    "\013\062\021\073\022\075\036\061\205\060\206\056\001" +
    "\002\000\040\002\ufea9\003\ufea9\004\ufea9\024\ufea9\050\ufea9" +
    "\061\ufea9\140\ufea9\145\ufea9\203\ufea9\204\ufea9\207\ufea9\212" +
    "\ufea9\213\ufea9\214\ufea9\215\ufea9\001\002\000\004\175\171" +
    "\001\002\000\020\011\055\013\062\021\073\022\075\036" +
    "\061\205\060\206\056\001\002\000\040\002\ufeb6\003\ufeb6" +
    "\004\ufeb6\024\ufeb6\050\ufeb6\061\ufeb6\140\ufeb6\145\ufeb6\203" +
    "\ufeb6\204\ufeb6\207\ufeb6\212\ufeb6\213\ufeb6\214\ufeb6\215\ufeb6" +
    "\001\002\000\004\176\172\001\002\000\004\174\173\001" +
    "\002\000\014\011\055\013\062\036\061\205\060\206\056" +
    "\001\002\000\020\011\055\013\062\021\073\022\075\036" +
    "\061\205\060\206\056\001\002\000\040\002\ufeb5\003\ufeb5" +
    "\004\ufeb5\024\ufeb5\050\ufeb5\061\ufeb5\140\ufeb5\145\ufeb5\203" +
    "\ufeb5\204\ufeb5\207\ufeb5\212\ufeb5\213\ufeb5\214\ufeb5\215\ufeb5" +
    "\001\002\000\006\021\073\022\075\001\002\000\004\175" +
    "\211\001\002\000\006\021\073\022\075\001\002\000\014" +
    "\017\064\020\063\021\ufe13\022\ufe13\035\202\001\002\000" +
    "\014\011\055\013\062\036\061\205\060\206\056\001\002" +
    "\000\010\020\204\021\ufeab\022\ufeab\001\002\000\004\013" +
    "\205\001\002\000\004\035\206\001\002\000\014\011\055" +
    "\013\062\036\061\205\060\206\056\001\002\000\006\021" +
    "\ufeac\022\ufeac\001\002\000\040\002\ufeb0\003\ufeb0\004\ufeb0" +
    "\024\ufeb0\050\ufeb0\061\ufeb0\140\ufeb0\145\ufeb0\203\ufeb0\204" +
    "\ufeb0\207\ufeb0\212\ufeb0\213\ufeb0\214\ufeb0\215\ufeb0\001\002" +
    "\000\004\176\212\001\002\000\004\174\213\001\002\000" +
    "\014\011\055\013\201\036\061\205\060\206\056\001\002" +
    "\000\006\021\073\022\075\001\002\000\006\021\073\022" +
    "\075\001\002\000\040\002\ufeaf\003\ufeaf\004\ufeaf\024\ufeaf" +
    "\050\ufeaf\061\ufeaf\140\ufeaf\145\ufeaf\203\ufeaf\204\ufeaf\207" +
    "\ufeaf\212\ufeaf\213\ufeaf\214\ufeaf\215\ufeaf\001\002\000\040" +
    "\002\ufead\003\ufead\004\ufead\024\ufead\050\ufead\061\ufead\140" +
    "\ufead\145\ufead\203\ufead\204\ufead\207\ufead\212\ufead\213\ufead" +
    "\214\ufead\215\ufead\001\002\000\040\002\ufeae\003\ufeae\004" +
    "\ufeae\024\ufeae\050\ufeae\061\ufeae\140\ufeae\145\ufeae\203\ufeae" +
    "\204\ufeae\207\ufeae\212\ufeae\213\ufeae\214\ufeae\215\ufeae\001" +
    "\002\000\040\002\uff64\003\uff64\004\uff64\024\uff64\050\uff64" +
    "\061\uff64\140\uff64\145\uff64\203\uff64\204\uff64\207\uff64\212" +
    "\uff64\213\uff64\214\uff64\215\uff64\001\002\000\040\002\uff66" +
    "\003\uff66\004\uff66\024\uff66\050\uff66\061\uff66\140\uff66\145" +
    "\uff66\203\uff66\204\uff66\207\uff66\212\uff66\213\uff66\214\uff66" +
    "\215\uff66\001\002\000\040\002\uff6a\003\uff6a\004\uff6a\024" +
    "\uff6a\050\uff6a\061\uff6a\140\uff6a\145\uff6a\203\uff6a\204\uff6a" +
    "\207\uff6a\212\uff6a\213\uff6a\214\uff6a\215\uff6a\001\002\000" +
    "\040\002\uff65\003\uff65\004\uff65\024\uff65\050\uff65\061\uff65" +
    "\140\uff65\145\uff65\203\uff65\204\uff65\207\uff65\212\uff65\213" +
    "\uff65\214\uff65\215\uff65\001\002\000\004\013\u0204\001\002" +
    "\000\004\013\u0203\001\002\000\010\115\uff41\116\uff41\124" +
    "\uff41\001\002\000\010\115\uff40\116\uff40\124\uff40\001\002" +
    "\000\040\002\uff69\003\uff69\004\uff69\024\uff69\050\uff69\061" +
    "\uff69\140\uff69\145\uff69\203\uff69\204\uff69\207\uff69\212\uff69" +
    "\213\uff69\214\uff69\215\uff69\001\002\000\040\002\uff6b\003" +
    "\uff6b\004\uff6b\024\uff6b\050\uff6b\061\uff6b\140\uff6b\145\uff6b" +
    "\203\uff6b\204\uff6b\207\uff6b\212\uff6b\213\uff6b\214\uff6b\215" +
    "\uff6b\001\002\000\014\011\055\013\062\036\061\205\060" +
    "\206\056\001\002\000\014\011\055\013\062\036\061\205" +
    "\060\206\056\001\002\000\040\002\uff68\003\uff68\004\uff68" +
    "\024\uff68\050\uff68\061\uff68\140\uff68\145\uff68\203\uff68\204" +
    "\uff68\207\uff68\212\uff68\213\uff68\214\uff68\215\uff68\001\002" +
    "\000\040\002\uff67\003\uff67\004\uff67\024\uff67\050\uff67\061" +
    "\uff67\140\uff67\145\uff67\203\uff67\204\uff67\207\uff67\212\uff67" +
    "\213\uff67\214\uff67\215\uff67\001\002\000\010\115\241\116" +
    "\242\124\ufe07\001\002\000\026\011\ufef3\012\ufef3\020\ufef3" +
    "\111\ufef3\113\ufef3\117\ufef3\120\ufef3\121\ufef3\123\ufef3\124" +
    "\ufef3\001\002\000\026\011\ufef5\012\ufef5\020\ufef5\111\ufef5" +
    "\113\ufef5\117\ufef5\120\ufef5\121\ufef5\123\ufef5\124\ufef5\001" +
    "\002\000\026\011\ufef4\012\ufef4\020\ufef4\111\ufef4\113\ufef4" +
    "\117\ufef4\120\ufef4\121\ufef4\123\ufef4\124\ufef4\001\002\000" +
    "\004\124\244\001\002\000\004\013\245\001\002\000\004" +
    "\035\246\001\002\000\014\011\055\013\062\036\061\205" +
    "\060\206\056\001\002\000\004\011\250\001\002\000\004" +
    "\013\354\001\002\000\046\002\ufe07\003\ufe07\004\ufe07\024" +
    "\ufe07\035\ufe07\050\ufe07\061\ufe07\106\ufe07\136\253\140\ufe07" +
    "\145\ufe07\203\ufe07\204\ufe07\207\ufe07\212\ufe07\213\ufe07\214" +
    "\ufe07\215\ufe07\001\002\000\044\002\uff3a\003\uff3a\004\uff3a" +
    "\024\uff3a\035\uff3a\050\uff3a\061\uff3a\106\uff3a\140\uff3a\145" +
    "\uff3a\203\uff3a\204\uff3a\207\uff3a\212\uff3a\213\uff3a\214\uff3a" +
    "\215\uff3a\001\002\000\004\011\350\001\002\000\044\002" +
    "\ufe07\003\ufe07\004\ufe07\024\ufe07\035\ufe07\050\ufe07\061\ufe07" +
    "\106\256\140\ufe07\145\ufe07\203\ufe07\204\ufe07\207\ufe07\212" +
    "\ufe07\213\ufe07\214\ufe07\215\ufe07\001\002\000\052\002\ufe8a" +
    "\003\ufe8a\004\ufe8a\021\ufe8a\022\ufe8a\024\ufe8a\035\ufe8a\050" +
    "\ufe8a\061\ufe8a\064\ufe8a\066\ufe8a\140\ufe8a\145\ufe8a\203\ufe8a" +
    "\204\ufe8a\207\ufe8a\212\ufe8a\213\ufe8a\214\ufe8a\215\ufe8a\001" +
    "\002\000\102\002\ufe07\003\ufe07\004\ufe07\011\303\013\062" +
    "\021\ufe07\022\ufe07\024\ufe07\035\ufe07\036\061\050\ufe07\057" +
    "\305\060\274\061\ufe07\064\ufe07\066\ufe07\070\270\071\301" +
    "\101\275\105\272\140\ufe07\145\ufe07\203\ufe07\204\ufe07\205" +
    "\060\206\056\207\ufe07\212\ufe07\213\ufe07\214\ufe07\215\ufe07" +
    "\247\276\001\002\000\042\002\ufe07\003\ufe07\004\ufe07\024" +
    "\ufe07\035\261\050\ufe07\061\ufe07\140\ufe07\145\ufe07\203\ufe07" +
    "\204\ufe07\207\ufe07\212\ufe07\213\ufe07\214\ufe07\215\ufe07\001" +
    "\002\000\040\002\uff38\003\uff38\004\uff38\024\uff38\050\uff38" +
    "\061\uff38\140\uff38\145\uff38\203\uff38\204\uff38\207\uff38\212" +
    "\uff38\213\uff38\214\uff38\215\uff38\001\002\000\014\011\055" +
    "\013\062\036\061\205\060\206\056\001\002\000\040\002" +
    "\uff42\003\uff42\004\uff42\024\uff42\050\uff42\061\uff42\140\uff42" +
    "\145\uff42\203\uff42\204\uff42\207\uff42\212\uff42\213\uff42\214" +
    "\uff42\215\uff42\001\002\000\004\011\264\001\002\000\014" +
    "\011\055\013\062\036\061\205\060\206\056\001\002\000" +
    "\004\012\266\001\002\000\040\002\uff39\003\uff39\004\uff39" +
    "\024\uff39\050\uff39\061\uff39\140\uff39\145\uff39\203\uff39\204" +
    "\uff39\207\uff39\212\uff39\213\uff39\214\uff39\215\uff39\001\002" +
    "\000\064\002\ufe80\003\ufe80\004\ufe80\012\ufe80\020\ufe80\021" +
    "\ufe80\022\ufe80\024\ufe80\035\ufe80\050\ufe80\061\ufe80\064\ufe80" +
    "\066\ufe80\070\270\101\275\105\272\140\ufe80\145\ufe80\203" +
    "\ufe80\204\ufe80\207\ufe80\212\ufe80\213\ufe80\214\ufe80\215\ufe80" +
    "\001\002\000\026\011\ufe68\013\ufe68\036\ufe68\057\ufe68\060" +
    "\ufe68\071\ufe68\101\345\205\ufe68\206\ufe68\247\ufe68\001\002" +
    "\000\060\002\ufe83\003\ufe83\004\ufe83\020\343\021\ufe83\022" +
    "\ufe83\024\ufe83\035\ufe83\050\ufe83\061\ufe83\064\ufe83\066\ufe83" +
    "\070\ufe83\105\ufe83\140\ufe83\145\ufe83\203\ufe83\204\ufe83\207" +
    "\ufe83\212\ufe83\213\ufe83\214\ufe83\215\ufe83\001\002\000\026" +
    "\011\ufe67\013\ufe67\036\ufe67\057\ufe67\060\ufe67\071\ufe67\101" +
    "\342\205\ufe67\206\ufe67\247\ufe67\001\002\000\024\011\055" +
    "\013\062\036\061\057\305\060\274\071\301\205\060\206" +
    "\056\247\276\001\002\000\110\002\ufe7a\003\ufe7a\004\ufe7a" +
    "\012\ufe7a\016\ufe7a\020\ufe7a\021\ufe7a\022\ufe7a\024\ufe7a\035" +
    "\ufe7a\037\ufe7a\050\ufe7a\061\ufe7a\064\ufe7a\066\ufe7a\070\ufe7a" +
    "\072\ufe7a\073\ufe7a\074\ufe7a\075\ufe7a\076\ufe7a\101\ufe7a\102" +
    "\ufe7a\103\ufe7a\104\ufe7a\105\ufe7a\140\ufe7a\145\ufe7a\203\ufe7a" +
    "\204\ufe7a\207\ufe7a\212\ufe7a\213\ufe7a\214\ufe7a\215\ufe7a\001" +
    "\002\000\024\011\ufe66\013\ufe66\036\ufe66\057\ufe66\060\ufe66" +
    "\071\ufe66\205\ufe66\206\ufe66\247\ufe66\001\002\000\110\002" +
    "\ufe7b\003\ufe7b\004\ufe7b\012\ufe7b\016\ufe7b\020\ufe7b\021\ufe7b" +
    "\022\ufe7b\024\ufe7b\035\ufe7b\037\ufe7b\050\ufe7b\061\ufe7b\064" +
    "\ufe7b\066\ufe7b\070\ufe7b\072\ufe7b\073\ufe7b\074\ufe7b\075\ufe7b" +
    "\076\ufe7b\101\ufe7b\102\ufe7b\103\ufe7b\104\ufe7b\105\ufe7b\140" +
    "\ufe7b\145\ufe7b\203\ufe7b\204\ufe7b\207\ufe7b\212\ufe7b\213\ufe7b" +
    "\214\ufe7b\215\ufe7b\001\002\000\056\002\ufe89\003\ufe89\004" +
    "\ufe89\021\ufe89\022\ufe89\024\ufe89\035\ufe89\050\ufe89\061\ufe89" +
    "\064\ufe89\066\ufe89\070\335\105\336\140\ufe89\145\ufe89\203" +
    "\ufe89\204\ufe89\207\ufe89\212\ufe89\213\ufe89\214\ufe89\215\ufe89" +
    "\001\002\000\052\002\ufe8b\003\ufe8b\004\ufe8b\021\ufe8b\022" +
    "\ufe8b\024\ufe8b\035\ufe8b\050\ufe8b\061\ufe8b\064\ufe8b\066\ufe8b" +
    "\140\ufe8b\145\ufe8b\203\ufe8b\204\ufe8b\207\ufe8b\212\ufe8b\213" +
    "\ufe8b\214\ufe8b\215\ufe8b\001\002\000\004\057\334\001\002" +
    "\000\052\002\ufe86\003\ufe86\004\ufe86\021\ufe86\022\ufe86\024" +
    "\ufe86\035\ufe86\050\ufe86\061\ufe86\064\ufe86\066\ufe86\140\ufe86" +
    "\145\ufe86\203\ufe86\204\ufe86\207\ufe86\212\ufe86\213\ufe86\214" +
    "\ufe86\215\ufe86\001\002\000\032\011\055\013\062\036\061" +
    "\057\305\060\274\070\270\071\301\101\275\105\272\205" +
    "\060\206\056\247\276\001\002\000\030\016\310\037\315" +
    "\072\316\073\320\074\312\075\314\076\307\101\317\102" +
    "\321\103\313\104\322\001\002\000\110\002\ufe79\003\ufe79" +
    "\004\ufe79\012\ufe79\016\ufe79\020\ufe79\021\ufe79\022\ufe79\024" +
    "\ufe79\035\ufe79\037\ufe79\050\ufe79\061\ufe79\064\ufe79\066\ufe79" +
    "\070\ufe79\072\ufe79\073\ufe79\074\ufe79\075\ufe79\076\ufe79\101" +
    "\ufe79\102\ufe79\103\ufe79\104\ufe79\105\ufe79\140\ufe79\145\ufe79" +
    "\203\ufe79\204\ufe79\207\ufe79\212\ufe79\213\ufe79\214\ufe79\215" +
    "\ufe79\001\002\000\110\002\ufe7c\003\ufe7c\004\ufe7c\012\ufe7c" +
    "\016\ufe7c\020\ufe7c\021\ufe7c\022\ufe7c\024\ufe7c\035\ufe7c\037" +
    "\ufe7c\050\ufe7c\061\ufe7c\064\ufe7c\066\ufe7c\070\ufe7c\072\ufe7c" +
    "\073\ufe7c\074\ufe7c\075\ufe7c\076\ufe7c\101\ufe7c\102\ufe7c\103" +
    "\ufe7c\104\ufe7c\105\ufe7c\140\ufe7c\145\ufe7c\203\ufe7c\204\ufe7c" +
    "\207\ufe7c\212\ufe7c\213\ufe7c\214\ufe7c\215\ufe7c\001\002\000" +
    "\104\002\ufe75\003\ufe75\004\ufe75\011\ufe75\012\ufe75\013\ufe75" +
    "\020\ufe75\021\ufe75\022\ufe75\024\ufe75\035\ufe75\036\ufe75\050" +
    "\ufe75\057\ufe75\060\ufe75\061\ufe75\064\ufe75\066\ufe75\070\ufe75" +
    "\101\ufe75\105\ufe75\140\ufe75\145\ufe75\203\ufe75\204\ufe75\205" +
    "\ufe75\206\ufe75\207\ufe75\212\ufe75\213\ufe75\214\ufe75\215\ufe75" +
    "\247\ufe75\001\002\000\104\002\ufe6d\003\ufe6d\004\ufe6d\011" +
    "\ufe6d\012\ufe6d\013\ufe6d\020\ufe6d\021\ufe6d\022\ufe6d\024\ufe6d" +
    "\035\ufe6d\036\ufe6d\050\ufe6d\057\ufe6d\060\ufe6d\061\ufe6d\064" +
    "\ufe6d\066\ufe6d\070\ufe6d\101\ufe6d\105\ufe6d\140\ufe6d\145\ufe6d" +
    "\203\ufe6d\204\ufe6d\205\ufe6d\206\ufe6d\207\ufe6d\212\ufe6d\213" +
    "\ufe6d\214\ufe6d\215\ufe6d\247\ufe6d\001\002\000\104\002\ufe7d" +
    "\003\ufe7d\004\ufe7d\011\055\012\ufe7d\013\062\020\ufe7d\021" +
    "\ufe7d\022\ufe7d\024\ufe7d\035\ufe7d\036\061\050\ufe7d\057\305" +
    "\060\274\061\ufe7d\064\ufe7d\066\ufe7d\070\ufe7d\101\ufe7d\105" +
    "\ufe7d\140\ufe7d\145\ufe7d\203\ufe7d\204\ufe7d\205\060\206\056" +
    "\207\ufe7d\212\ufe7d\213\ufe7d\214\ufe7d\215\ufe7d\247\276\001" +
    "\002\000\104\002\ufe72\003\ufe72\004\ufe72\011\ufe72\012\ufe72" +
    "\013\ufe72\020\ufe72\021\ufe72\022\ufe72\024\ufe72\035\ufe72\036" +
    "\ufe72\050\ufe72\057\ufe72\060\ufe72\061\ufe72\064\ufe72\066\ufe72" +
    "\070\ufe72\101\ufe72\105\ufe72\140\ufe72\145\ufe72\203\ufe72\204" +
    "\ufe72\205\ufe72\206\ufe72\207\ufe72\212\ufe72\213\ufe72\214\ufe72" +
    "\215\ufe72\247\ufe72\001\002\000\104\002\ufe6f\003\ufe6f\004" +
    "\ufe6f\011\ufe6f\012\ufe6f\013\ufe6f\020\ufe6f\021\ufe6f\022\ufe6f" +
    "\024\ufe6f\035\ufe6f\036\ufe6f\050\ufe6f\057\ufe6f\060\ufe6f\061" +
    "\ufe6f\064\ufe6f\066\ufe6f\070\ufe6f\101\ufe6f\105\ufe6f\140\ufe6f" +
    "\145\ufe6f\203\ufe6f\204\ufe6f\205\ufe6f\206\ufe6f\207\ufe6f\212" +
    "\ufe6f\213\ufe6f\214\ufe6f\215\ufe6f\247\ufe6f\001\002\000\104" +
    "\002\ufe76\003\ufe76\004\ufe76\011\ufe76\012\ufe76\013\ufe76\020" +
    "\ufe76\021\ufe76\022\ufe76\024\ufe76\035\ufe76\036\ufe76\050\ufe76" +
    "\057\ufe76\060\ufe76\061\ufe76\064\ufe76\066\ufe76\070\ufe76\101" +
    "\ufe76\105\ufe76\140\ufe76\145\ufe76\203\ufe76\204\ufe76\205\ufe76" +
    "\206\ufe76\207\ufe76\212\ufe76\213\ufe76\214\ufe76\215\ufe76\247" +
    "\ufe76\001\002\000\104\002\ufe77\003\ufe77\004\ufe77\011\ufe77" +
    "\012\ufe77\013\ufe77\020\ufe77\021\ufe77\022\ufe77\024\ufe77\035" +
    "\ufe77\036\ufe77\050\ufe77\057\ufe77\060\ufe77\061\ufe77\064\ufe77" +
    "\066\ufe77\070\ufe77\101\ufe77\105\ufe77\140\ufe77\145\ufe77\203" +
    "\ufe77\204\ufe77\205\ufe77\206\ufe77\207\ufe77\212\ufe77\213\ufe77" +
    "\214\ufe77\215\ufe77\247\ufe77\001\002\000\104\002\ufe74\003" +
    "\ufe74\004\ufe74\011\ufe74\012\ufe74\013\ufe74\020\ufe74\021\ufe74" +
    "\022\ufe74\024\ufe74\035\ufe74\036\ufe74\050\ufe74\057\ufe74\060" +
    "\ufe74\061\ufe74\064\ufe74\066\ufe74\070\ufe74\101\ufe74\105\ufe74" +
    "\140\ufe74\145\ufe74\203\ufe74\204\ufe74\205\ufe74\206\ufe74\207" +
    "\ufe74\212\ufe74\213\ufe74\214\ufe74\215\ufe74\247\ufe74\001\002" +
    "\000\110\002\ufe69\003\ufe69\004\ufe69\011\ufe69\012\ufe69\013" +
    "\ufe69\020\ufe69\021\ufe69\022\ufe69\024\ufe69\035\ufe69\036\ufe69" +
    "\050\ufe69\057\ufe69\060\ufe69\061\ufe69\064\ufe69\066\ufe69\070" +
    "\ufe69\101\ufe69\102\326\103\327\105\ufe69\140\ufe69\145\ufe69" +
    "\203\ufe69\204\ufe69\205\ufe69\206\ufe69\207\ufe69\212\ufe69\213" +
    "\ufe69\214\ufe69\215\ufe69\247\ufe69\001\002\000\104\002\ufe73" +
    "\003\ufe73\004\ufe73\011\ufe73\012\ufe73\013\ufe73\020\ufe73\021" +
    "\ufe73\022\ufe73\024\ufe73\035\ufe73\036\ufe73\050\ufe73\057\ufe73" +
    "\060\ufe73\061\ufe73\064\ufe73\066\ufe73\070\ufe73\101\ufe73\105" +
    "\ufe73\140\ufe73\145\ufe73\203\ufe73\204\ufe73\205\ufe73\206\ufe73" +
    "\207\ufe73\212\ufe73\213\ufe73\214\ufe73\215\ufe73\247\ufe73\001" +
    "\002\000\104\002\ufe70\003\ufe70\004\ufe70\011\ufe70\012\ufe70" +
    "\013\ufe70\020\ufe70\021\ufe70\022\ufe70\024\ufe70\035\ufe70\036" +
    "\ufe70\050\ufe70\057\ufe70\060\ufe70\061\ufe70\064\ufe70\066\ufe70" +
    "\070\ufe70\101\ufe70\105\ufe70\140\ufe70\145\ufe70\203\ufe70\204" +
    "\ufe70\205\ufe70\206\ufe70\207\ufe70\212\ufe70\213\ufe70\214\ufe70" +
    "\215\ufe70\247\ufe70\001\002\000\106\002\ufe6b\003\ufe6b\004" +
    "\ufe6b\011\ufe6b\012\ufe6b\013\ufe6b\016\324\020\ufe6b\021\ufe6b" +
    "\022\ufe6b\024\ufe6b\035\ufe6b\036\ufe6b\050\ufe6b\057\ufe6b\060" +
    "\ufe6b\061\ufe6b\064\ufe6b\066\ufe6b\070\ufe6b\101\ufe6b\105\ufe6b" +
    "\140\ufe6b\145\ufe6b\203\ufe6b\204\ufe6b\205\ufe6b\206\ufe6b\207" +
    "\ufe6b\212\ufe6b\213\ufe6b\214\ufe6b\215\ufe6b\247\ufe6b\001\002" +
    "\000\106\002\ufe6a\003\ufe6a\004\ufe6a\011\ufe6a\012\ufe6a\013" +
    "\ufe6a\016\325\020\ufe6a\021\ufe6a\022\ufe6a\024\ufe6a\035\ufe6a" +
    "\036\ufe6a\050\ufe6a\057\ufe6a\060\ufe6a\061\ufe6a\064\ufe6a\066" +
    "\ufe6a\070\ufe6a\101\ufe6a\105\ufe6a\140\ufe6a\145\ufe6a\203\ufe6a" +
    "\204\ufe6a\205\ufe6a\206\ufe6a\207\ufe6a\212\ufe6a\213\ufe6a\214" +
    "\ufe6a\215\ufe6a\247\ufe6a\001\002\000\104\002\ufe6c\003\ufe6c" +
    "\004\ufe6c\011\ufe6c\012\ufe6c\013\ufe6c\020\ufe6c\021\ufe6c\022" +
    "\ufe6c\024\ufe6c\035\ufe6c\036\ufe6c\050\ufe6c\057\ufe6c\060\ufe6c" +
    "\061\ufe6c\064\ufe6c\066\ufe6c\070\ufe6c\101\ufe6c\105\ufe6c\140" +
    "\ufe6c\145\ufe6c\203\ufe6c\204\ufe6c\205\ufe6c\206\ufe6c\207\ufe6c" +
    "\212\ufe6c\213\ufe6c\214\ufe6c\215\ufe6c\247\ufe6c\001\002\000" +
    "\104\002\ufe78\003\ufe78\004\ufe78\011\ufe78\012\ufe78\013\ufe78" +
    "\020\ufe78\021\ufe78\022\ufe78\024\ufe78\035\ufe78\036\ufe78\050" +
    "\ufe78\057\ufe78\060\ufe78\061\ufe78\064\ufe78\066\ufe78\070\ufe78" +
    "\101\ufe78\105\ufe78\140\ufe78\145\ufe78\203\ufe78\204\ufe78\205" +
    "\ufe78\206\ufe78\207\ufe78\212\ufe78\213\ufe78\214\ufe78\215\ufe78" +
    "\247\ufe78\001\002\000\104\002\ufe71\003\ufe71\004\ufe71\011" +
    "\ufe71\012\ufe71\013\ufe71\020\ufe71\021\ufe71\022\ufe71\024\ufe71" +
    "\035\ufe71\036\ufe71\050\ufe71\057\ufe71\060\ufe71\061\ufe71\064" +
    "\ufe71\066\ufe71\070\ufe71\101\ufe71\105\ufe71\140\ufe71\145\ufe71" +
    "\203\ufe71\204\ufe71\205\ufe71\206\ufe71\207\ufe71\212\ufe71\213" +
    "\ufe71\214\ufe71\215\ufe71\247\ufe71\001\002\000\104\002\ufe6e" +
    "\003\ufe6e\004\ufe6e\011\ufe6e\012\ufe6e\013\ufe6e\020\ufe6e\021" +
    "\ufe6e\022\ufe6e\024\ufe6e\035\ufe6e\036\ufe6e\050\ufe6e\057\ufe6e" +
    "\060\ufe6e\061\ufe6e\064\ufe6e\066\ufe6e\070\ufe6e\101\ufe6e\105" +
    "\ufe6e\140\ufe6e\145\ufe6e\203\ufe6e\204\ufe6e\205\ufe6e\206\ufe6e" +
    "\207\ufe6e\212\ufe6e\213\ufe6e\214\ufe6e\215\ufe6e\247\ufe6e\001" +
    "\002\000\064\002\ufe7f\003\ufe7f\004\ufe7f\012\ufe7f\020\ufe7f" +
    "\021\ufe7f\022\ufe7f\024\ufe7f\035\ufe7f\050\ufe7f\061\ufe7f\064" +
    "\ufe7f\066\ufe7f\070\ufe7f\101\ufe7f\105\ufe7f\140\ufe7f\145\ufe7f" +
    "\203\ufe7f\204\ufe7f\207\ufe7f\212\ufe7f\213\ufe7f\214\ufe7f\215" +
    "\ufe7f\001\002\000\004\012\333\001\002\000\032\012\102" +
    "\016\ufe7c\037\ufe7c\072\ufe7c\073\ufe7c\074\ufe7c\075\ufe7c\076" +
    "\ufe7c\101\ufe7c\102\ufe7c\103\ufe7c\104\ufe7c\001\002\000\056" +
    "\002\ufe85\003\ufe85\004\ufe85\021\ufe85\022\ufe85\024\ufe85\035" +
    "\ufe85\050\ufe85\061\ufe85\064\ufe85\066\ufe85\070\ufe85\105\ufe85" +
    "\140\ufe85\145\ufe85\203\ufe85\204\ufe85\207\ufe85\212\ufe85\213" +
    "\ufe85\214\ufe85\215\ufe85\001\002\000\064\002\ufe7e\003\ufe7e" +
    "\004\ufe7e\012\ufe7e\020\ufe7e\021\ufe7e\022\ufe7e\024\ufe7e\035" +
    "\ufe7e\050\ufe7e\061\ufe7e\064\ufe7e\066\ufe7e\070\ufe7e\101\ufe7e" +
    "\105\ufe7e\140\ufe7e\145\ufe7e\203\ufe7e\204\ufe7e\207\ufe7e\212" +
    "\ufe7e\213\ufe7e\214\ufe7e\215\ufe7e\001\002\000\032\011\303" +
    "\013\062\036\061\057\305\060\274\070\270\071\301\101" +
    "\275\105\272\205\060\206\056\247\276\001\002\000\032" +
    "\011\303\013\062\036\061\057\305\060\274\070\270\071" +
    "\301\101\275\105\272\205\060\206\056\247\276\001\002" +
    "\000\052\002\ufe87\003\ufe87\004\ufe87\021\ufe87\022\ufe87\024" +
    "\ufe87\035\ufe87\050\ufe87\061\ufe87\064\ufe87\066\ufe87\140\ufe87" +
    "\145\ufe87\203\ufe87\204\ufe87\207\ufe87\212\ufe87\213\ufe87\214" +
    "\ufe87\215\ufe87\001\002\000\052\002\ufe88\003\ufe88\004\ufe88" +
    "\021\ufe88\022\ufe88\024\ufe88\035\ufe88\050\ufe88\061\ufe88\064" +
    "\ufe88\066\ufe88\140\ufe88\145\ufe88\203\ufe88\204\ufe88\207\ufe88" +
    "\212\ufe88\213\ufe88\214\ufe88\215\ufe88\001\002\000\062\002" +
    "\ufe82\003\ufe82\004\ufe82\012\ufe82\020\ufe82\021\ufe82\022\ufe82" +
    "\024\ufe82\035\ufe82\050\ufe82\061\ufe82\064\ufe82\066\ufe82\070" +
    "\ufe82\105\ufe82\140\ufe82\145\ufe82\203\ufe82\204\ufe82\207\ufe82" +
    "\212\ufe82\213\ufe82\214\ufe82\215\ufe82\001\002\000\024\011" +
    "\ufe64\013\ufe64\036\ufe64\057\ufe64\060\ufe64\071\ufe64\205\ufe64" +
    "\206\ufe64\247\ufe64\001\002\000\032\011\055\013\062\036" +
    "\061\057\305\060\274\070\270\071\301\101\275\105\272" +
    "\205\060\206\056\247\276\001\002\000\056\002\ufe84\003" +
    "\ufe84\004\ufe84\021\ufe84\022\ufe84\024\ufe84\035\ufe84\050\ufe84" +
    "\061\ufe84\064\ufe84\066\ufe84\070\ufe84\105\ufe84\140\ufe84\145" +
    "\ufe84\203\ufe84\204\ufe84\207\ufe84\212\ufe84\213\ufe84\214\ufe84" +
    "\215\ufe84\001\002\000\024\011\ufe65\013\ufe65\036\ufe65\057" +
    "\ufe65\060\ufe65\071\ufe65\205\ufe65\206\ufe65\247\ufe65\001\002" +
    "\000\024\011\055\013\062\036\061\057\305\060\274\071" +
    "\301\205\060\206\056\247\276\001\002\000\062\002\ufe81" +
    "\003\ufe81\004\ufe81\012\ufe81\020\ufe81\021\ufe81\022\ufe81\024" +
    "\ufe81\035\ufe81\050\ufe81\061\ufe81\064\ufe81\066\ufe81\070\ufe81" +
    "\105\ufe81\140\ufe81\145\ufe81\203\ufe81\204\ufe81\207\ufe81\212" +
    "\ufe81\213\ufe81\214\ufe81\215\ufe81\001\002\000\014\011\055" +
    "\013\062\036\061\205\060\206\056\001\002\000\004\012" +
    "\352\001\002\000\044\002\uff3b\003\uff3b\004\uff3b\024\uff3b" +
    "\035\uff3b\050\uff3b\061\uff3b\106\uff3b\140\uff3b\145\uff3b\203" +
    "\uff3b\204\uff3b\207\uff3b\212\uff3b\213\uff3b\214\uff3b\215\uff3b" +
    "\001\002\000\004\012\u0103\001\002\000\010\012\ufe07\020" +
    "\ufe07\066\356\001\002\000\012\012\uff74\020\uff74\021\uff74" +
    "\022\uff74\001\002\000\004\065\366\001\002\000\006\012" +
    "\ufe07\020\362\001\002\000\004\012\uff3c\001\002\000\004" +
    "\012\uff3e\001\002\000\004\013\363\001\002\000\010\012" +
    "\ufe07\020\ufe07\066\356\001\002\000\006\012\ufe07\020\362" +
    "\001\002\000\004\012\uff3d\001\002\000\010\013\372\077" +
    "\367\100\370\001\002\000\020\012\uff6d\013\uff6d\020\uff6d" +
    "\021\uff6d\022\uff6d\077\uff6d\100\uff6d\001\002\000\020\012" +
    "\uff6c\013\uff6c\020\uff6c\021\uff6c\022\uff6c\077\uff6c\100\uff6c" +
    "\001\002\000\016\012\uff75\020\375\021\uff75\022\uff75\077" +
    "\367\100\370\001\002\000\020\012\uff6e\017\377\020\uff6e" +
    "\021\uff6e\022\uff6e\077\uff6e\100\uff6e\001\002\000\010\013" +
    "\372\077\367\100\370\001\002\000\016\012\uff73\020\375" +
    "\021\uff73\022\uff73\077\367\100\370\001\002\000\016\012" +
    "\uff6f\020\uff6f\021\uff6f\022\uff6f\077\uff6f\100\uff6f\001\002" +
    "\000\016\012\uff72\020\uff72\021\uff72\022\uff72\077\uff72\100" +
    "\uff72\001\002\000\004\013\u0100\001\002\000\020\012\uff71" +
    "\017\u0101\020\uff71\021\uff71\022\uff71\077\uff71\100\uff71\001" +
    "\002\000\004\013\u0102\001\002\000\016\012\uff70\020\uff70" +
    "\021\uff70\022\uff70\077\uff70\100\uff70\001\002\000\046\002" +
    "\uff3f\003\uff3f\004\uff3f\024\uff3f\035\uff3f\050\uff3f\061\uff3f" +
    "\106\uff3f\136\uff3f\140\uff3f\145\uff3f\203\uff3f\204\uff3f\207" +
    "\uff3f\212\uff3f\213\uff3f\214\uff3f\215\uff3f\001\002\000\004" +
    "\011\u0105\001\002\000\030\011\055\013\062\036\061\111" +
    "\u010b\113\ufe07\117\ufe07\120\ufe07\123\ufe07\124\u0106\205\060" +
    "\206\056\001\002\000\014\011\055\013\062\036\061\205" +
    "\060\206\056\001\002\000\012\113\ufefb\117\ufefb\120\ufefb" +
    "\123\ufefb\001\002\000\006\012\uff2d\020\uff2d\001\002\000" +
    "\006\012\uff2e\020\uff2e\001\002\000\006\012\ufe07\020\u01f4" +
    "\001\002\000\014\011\055\013\062\036\061\205\060\206" +
    "\056\001\002\000\012\113\u01cd\117\u01cf\120\u01cc\123\u01cb" +
    "\001\002\000\006\012\uff2c\020\uff2c\001\002\000\064\112" +
    "\u0110\134\u011d\146\u0115\147\u0111\150\u0119\151\u011e\152\u011c" +
    "\153\u011b\154\u0116\155\u0122\156\u0113\157\u0126\160\u0120\161" +
    "\u0124\162\u0117\163\u011a\164\u0125\165\u0114\166\u010f\167\u0128" +
    "\170\u0118\177\u0112\201\u0123\202\u011f\246\u0127\001\002\000" +
    "\064\112\u0110\134\u011d\146\u0115\147\u0111\150\u0119\151\u011e" +
    "\152\u011c\153\u011b\154\u0116\155\u0122\156\u0113\157\u0126\160" +
    "\u0120\161\u0124\162\u0117\163\u011a\164\u0125\165\u0114\166\u010f" +
    "\167\u0128\170\u0118\177\u0112\201\u0123\202\u011f\246\u0127\001" +
    "\002\000\064\112\u0110\134\u011d\146\u0115\147\u0111\150\u0119" +
    "\151\u011e\152\u011c\153\u011b\154\u0116\155\u0122\156\u0113\157" +
    "\u0126\160\u0120\161\u0124\162\u0117\163\u011a\164\u0125\165\u0114" +
    "\166\u010f\167\u0128\170\u0118\177\u0112\201\u0123\202\u011f\246" +
    "\u0127\001\002\000\044\011\u01c6\012\ufe39\013\ufe39\015\ufe39" +
    "\016\ufe39\020\ufe39\023\ufe39\046\ufe39\101\ufe39\111\ufe39\112" +
    "\ufe39\113\ufe39\117\ufe39\120\ufe39\121\ufe39\123\ufe39\131\ufe39" +
    "\001\002\000\044\011\u01c3\012\ufe31\013\ufe31\015\ufe31\016" +
    "\ufe31\020\ufe31\023\ufe31\046\ufe31\101\ufe31\111\ufe31\112\ufe31" +
    "\113\ufe31\117\ufe31\120\ufe31\121\ufe31\123\ufe31\131\ufe31\001" +
    "\002\000\042\012\ufe25\013\ufe25\015\ufe25\016\ufe25\020\ufe25" +
    "\023\ufe25\046\ufe25\101\ufe25\111\ufe25\112\ufe25\113\ufe25\117" +
    "\ufe25\120\ufe25\121\ufe25\123\ufe25\131\ufe25\001\002\000\042" +
    "\012\ufe1e\013\ufe1e\015\ufe1e\016\ufe1e\020\ufe1e\023\ufe1e\046" +
    "\ufe1e\101\ufe1e\111\ufe1e\112\ufe1e\113\ufe1e\117\ufe1e\120\ufe1e" +
    "\121\ufe1e\123\ufe1e\131\ufe1e\001\002\000\044\011\u01c0\012" +
    "\ufe3b\013\ufe3b\015\ufe3b\016\ufe3b\020\ufe3b\023\ufe3b\046\ufe3b" +
    "\101\ufe3b\111\ufe3b\112\ufe3b\113\ufe3b\117\ufe3b\120\ufe3b\121" +
    "\ufe3b\123\ufe3b\131\ufe3b\001\002\000\042\012\ufe27\013\ufe27" +
    "\015\ufe27\016\ufe27\020\ufe27\023\ufe27\046\ufe27\101\ufe27\111" +
    "\ufe27\112\ufe27\113\ufe27\117\ufe27\120\ufe27\121\ufe27\123\ufe27" +
    "\131\ufe27\001\002\000\042\012\ufe21\013\ufe21\015\ufe21\016" +
    "\ufe21\020\ufe21\023\ufe21\046\ufe21\101\ufe21\111\ufe21\112\ufe21" +
    "\113\ufe21\117\ufe21\120\ufe21\121\ufe21\123\ufe21\131\ufe21\001" +
    "\002\000\064\112\u0110\134\u011d\146\u0115\147\u0111\150\u0119" +
    "\151\u011e\152\u011c\153\u011b\154\u0116\155\u0122\156\u0113\157" +
    "\u0126\160\u0120\161\u0124\162\u0117\163\u011a\164\u0125\165\u0114" +
    "\166\u010f\167\u0128\170\u0118\177\u0112\201\u0123\202\u011f\246" +
    "\u0127\001\002\000\044\011\u01bc\012\ufe37\013\ufe37\015\ufe37" +
    "\016\ufe37\020\ufe37\023\ufe37\046\ufe37\101\ufe37\111\ufe37\112" +
    "\ufe37\113\ufe37\117\ufe37\120\ufe37\121\ufe37\123\ufe37\131\ufe37" +
    "\001\002\000\042\012\ufe20\013\ufe20\015\ufe20\016\ufe20\020" +
    "\ufe20\023\ufe20\046\ufe20\101\ufe20\111\ufe20\112\ufe20\113\ufe20" +
    "\117\ufe20\120\ufe20\121\ufe20\123\ufe20\131\ufe20\001\002\000" +
    "\042\012\ufe28\013\ufe28\015\ufe28\016\ufe28\020\ufe28\023\ufe28" +
    "\046\ufe28\101\ufe28\111\ufe28\112\ufe28\113\ufe28\117\ufe28\120" +
    "\ufe28\121\ufe28\123\ufe28\131\ufe28\001\002\000\044\011\u01b7" +
    "\012\ufe2d\013\ufe2d\015\ufe2d\016\ufe2d\020\ufe2d\023\ufe2d\046" +
    "\ufe2d\101\ufe2d\111\ufe2d\112\ufe2d\113\ufe2d\117\ufe2d\120\ufe2d" +
    "\121\ufe2d\123\ufe2d\131\ufe2d\001\002\000\044\011\u01b4\012" +
    "\ufe2a\013\ufe2a\015\ufe2a\016\ufe2a\020\ufe2a\023\ufe2a\046\ufe2a" +
    "\101\ufe2a\111\ufe2a\112\ufe2a\113\ufe2a\117\ufe2a\120\ufe2a\121" +
    "\ufe2a\123\ufe2a\131\ufe2a\001\002\000\044\011\u01b1\012\ufe35" +
    "\013\ufe35\015\ufe35\016\ufe35\020\ufe35\023\ufe35\046\ufe35\101" +
    "\ufe35\111\ufe35\112\ufe35\113\ufe35\117\ufe35\120\ufe35\121\ufe35" +
    "\123\ufe35\131\ufe35\001\002\000\044\011\u01ae\012\ufe33\013" +
    "\ufe33\015\ufe33\016\ufe33\020\ufe33\023\ufe33\046\ufe33\101\ufe33" +
    "\111\ufe33\112\ufe33\113\ufe33\117\ufe33\120\ufe33\121\ufe33\123" +
    "\ufe33\131\ufe33\001\002\000\042\012\ufe23\013\ufe23\015\ufe23" +
    "\016\ufe23\020\ufe23\023\ufe23\046\ufe23\101\ufe23\111\ufe23\112" +
    "\ufe23\113\ufe23\117\ufe23\120\ufe23\121\ufe23\123\ufe23\131\ufe23" +
    "\001\002\000\040\012\ufe07\015\ufe07\016\ufe07\020\ufe07\023" +
    "\ufe07\046\ufe07\101\ufe07\111\ufe07\112\ufe07\113\ufe07\117\ufe07" +
    "\120\ufe07\121\ufe07\123\ufe07\131\u0133\001\002\000\042\012" +
    "\ufe26\013\ufe26\015\ufe26\016\ufe26\020\ufe26\023\ufe26\046\ufe26" +
    "\101\ufe26\111\ufe26\112\ufe26\113\ufe26\117\ufe26\120\ufe26\121" +
    "\ufe26\123\ufe26\131\ufe26\001\002\000\044\011\u012f\012\ufe2f" +
    "\013\ufe2f\015\ufe2f\016\ufe2f\020\ufe2f\023\ufe2f\046\ufe2f\101" +
    "\ufe2f\111\ufe2f\112\ufe2f\113\ufe2f\117\ufe2f\120\ufe2f\121\ufe2f" +
    "\123\ufe2f\131\ufe2f\001\002\000\042\012\ufe22\013\ufe22\015" +
    "\ufe22\016\ufe22\020\ufe22\023\ufe22\046\ufe22\101\ufe22\111\ufe22" +
    "\112\ufe22\113\ufe22\117\ufe22\120\ufe22\121\ufe22\123\ufe22\131" +
    "\ufe22\001\002\000\042\012\ufe1f\013\ufe1f\015\ufe1f\016\ufe1f" +
    "\020\ufe1f\023\ufe1f\046\ufe1f\101\ufe1f\111\ufe1f\112\ufe1f\113" +
    "\ufe1f\117\ufe1f\120\ufe1f\121\ufe1f\123\ufe1f\131\ufe1f\001\002" +
    "\000\042\012\ufe24\013\ufe24\015\ufe24\016\ufe24\020\ufe24\023" +
    "\ufe24\046\ufe24\101\ufe24\111\ufe24\112\ufe24\113\ufe24\117\ufe24" +
    "\120\ufe24\121\ufe24\123\ufe24\131\ufe24\001\002\000\044\011" +
    "\u012a\012\ufe19\013\ufe19\015\ufe19\016\ufe19\020\ufe19\023\ufe19" +
    "\046\ufe19\101\ufe19\111\ufe19\112\ufe19\113\ufe19\117\ufe19\120" +
    "\ufe19\121\ufe19\123\ufe19\131\ufe19\001\002\000\064\112\u0110" +
    "\134\u011d\146\u0115\147\u0111\150\u0119\151\u011e\152\u011c\153" +
    "\u011b\154\u0116\155\u0122\156\u0113\157\u0126\160\u0120\161\u0124" +
    "\162\u0117\163\u011a\164\u0125\165\u0114\166\u010f\167\u0128\170" +
    "\u0118\177\u0112\201\u0123\202\u011f\246\u0127\001\002\000\042" +
    "\012\ufe1c\013\ufe1c\015\ufe1c\016\ufe1c\020\ufe1c\023\ufe1c\046" +
    "\ufe1c\101\ufe1c\111\ufe1c\112\ufe1c\113\ufe1c\117\ufe1c\120\ufe1c" +
    "\121\ufe1c\123\ufe1c\131\ufe1c\001\002\000\006\171\u012b\247" +
    "\u012c\001\002\000\004\012\u012e\001\002\000\004\012\u012d" +
    "\001\002\000\042\012\ufe18\013\ufe18\015\ufe18\016\ufe18\020" +
    "\ufe18\023\ufe18\046\ufe18\101\ufe18\111\ufe18\112\ufe18\113\ufe18" +
    "\117\ufe18\120\ufe18\121\ufe18\123\ufe18\131\ufe18\001\002\000" +
    "\042\012\ufe17\013\ufe17\015\ufe17\016\ufe17\020\ufe17\023\ufe17" +
    "\046\ufe17\101\ufe17\111\ufe17\112\ufe17\113\ufe17\117\ufe17\120" +
    "\ufe17\121\ufe17\123\ufe17\131\ufe17\001\002\000\004\247\u0130" +
    "\001\002\000\004\012\u0131\001\002\000\042\012\ufe2e\013" +
    "\ufe2e\015\ufe2e\016\ufe2e\020\ufe2e\023\ufe2e\046\ufe2e\101\ufe2e" +
    "\111\ufe2e\112\ufe2e\113\ufe2e\117\ufe2e\120\ufe2e\121\ufe2e\123" +
    "\ufe2e\131\ufe2e\001\002\000\036\012\uff06\015\uff06\016\uff06" +
    "\020\uff06\023\uff06\046\uff06\101\uff06\111\uff06\112\uff06\113" +
    "\uff06\117\uff06\120\uff06\121\uff06\123\uff06\001\002\000\014" +
    "\011\055\013\062\036\061\205\060\206\056\001\002\000" +
    "\036\012\ufe07\015\u013b\016\ufe07\020\ufe07\023\u013d\046\ufe07" +
    "\101\u0141\111\u013c\112\u0135\113\u0142\117\u0139\120\u0143\121" +
    "\ufe07\123\u0140\001\002\000\030\011\u0197\012\ufe07\020\ufe07" +
    "\023\ufe07\101\ufe07\111\ufe07\113\ufe07\117\ufe07\120\ufe07\121" +
    "\ufe07\123\ufe07\001\002\000\006\012\uff1d\020\uff1d\001\002" +
    "\000\006\012\uff1b\020\uff1b\001\002\000\006\016\u019f\046" +
    "\u019e\001\002\000\026\012\ufe07\020\ufe07\111\ufe07\113\ufe07" +
    "\115\241\116\242\117\ufe07\120\ufe07\121\ufe07\123\ufe07\001" +
    "\002\000\014\012\uff1a\016\uff13\020\uff1a\046\uff13\121\ufef1" +
    "\001\002\000\014\016\u018b\057\u0188\060\u0189\247\u018d\250" +
    "\u018a\001\002\000\014\011\055\013\062\036\061\205\060" +
    "\206\056\001\002\000\022\012\ufe07\020\ufe07\111\u010b\113" +
    "\ufe07\117\ufe07\120\ufe07\121\ufe07\123\ufe07\001\002\000\004" +
    "\121\u016e\001\002\000\022\012\ufe07\020\ufe07\111\u010b\113" +
    "\ufe07\117\ufe07\120\ufe07\121\ufe07\123\ufe07\001\002\000\006" +
    "\011\ufe07\101\u014b\001\002\000\006\016\uff14\046\uff14\001" +
    "\002\000\004\114\u0145\001\002\000\004\114\u0144\001\002" +
    "\000\004\121\ufef2\001\002\000\030\011\ufe07\012\ufe07\020" +
    "\ufe07\111\ufe07\113\ufe07\115\241\116\242\117\ufe07\120\ufe07" +
    "\121\ufe07\123\ufe07\001\002\000\024\011\u0147\012\ufefa\020" +
    "\ufefa\111\ufefa\113\ufefa\117\ufefa\120\ufefa\121\ufefa\123\ufefa" +
    "\001\002\000\014\011\055\013\062\036\061\205\060\206" +
    "\056\001\002\000\004\012\u0149\001\002\000\022\012\ufef9" +
    "\020\ufef9\111\ufef9\113\ufef9\117\ufef9\120\ufef9\121\ufef9\123" +
    "\ufef9\001\002\000\026\011\uff33\012\uff33\020\uff33\023\uff33" +
    "\111\uff33\113\uff33\117\uff33\120\uff33\121\uff33\123\uff33\001" +
    "\002\000\006\016\u0160\046\u015e\001\002\000\004\011\u014d" +
    "\001\002\000\006\011\u0150\101\u0151\001\002\000\010\012" +
    "\ufe07\070\u0154\105\u0155\001\002\000\004\012\u015c\001\002" +
    "\000\006\011\u0150\101\u0151\001\002\000\002\001\002\000" +
    "\010\012\ufe07\070\u0154\105\u0155\001\002\000\004\012\ufee1" +
    "\001\002\000\006\011\u0150\101\u0151\001\002\000\006\011" +
    "\u0150\101\u0151\001\002\000\004\012\ufee6\001\002\000\004" +
    "\012\ufee2\001\002\000\004\012\ufee3\001\002\000\004\012" +
    "\u015a\001\002\000\010\012\ufe07\070\u0154\105\u0155\001\002" +
    "\000\004\012\ufee4\001\002\000\022\012\ufef6\020\ufef6\111" +
    "\ufef6\113\ufef6\117\ufef6\120\ufef6\121\ufef6\123\ufef6\001\002" +
    "\000\004\012\ufee5\001\002\000\004\122\u0161\001\002\000" +
    "\026\011\uff34\012\uff34\020\uff34\023\uff34\111\uff34\113\uff34" +
    "\117\uff34\120\uff34\121\uff34\123\uff34\001\002\000\026\011" +
    "\uff31\012\uff31\020\uff31\023\uff31\111\uff31\113\uff31\117\uff31" +
    "\120\uff31\121\uff31\123\uff31\001\002\000\030\011\ufe07\012" +
    "\ufe07\020\ufe07\023\ufe07\101\u0163\111\ufe07\113\ufe07\117\ufe07" +
    "\120\ufe07\121\ufe07\123\ufe07\001\002\000\026\011\uff2f\012" +
    "\uff2f\020\uff2f\023\uff2f\111\uff2f\113\uff2f\117\uff2f\120\uff2f" +
    "\121\uff2f\123\uff2f\001\002\000\030\011\ufe07\012\ufe07\016" +
    "\u0167\020\ufe07\023\ufe07\111\ufe07\113\ufe07\117\ufe07\120\ufe07" +
    "\121\ufe07\123\ufe07\001\002\000\026\011\uff32\012\uff32\020" +
    "\uff32\023\uff32\111\uff32\113\uff32\117\uff32\120\uff32\121\uff32" +
    "\123\uff32\001\002\000\026\011\uff0a\012\uff0a\020\uff0a\023" +
    "\uff0a\111\uff0a\113\uff0a\117\uff0a\120\uff0a\121\uff0a\123\uff0a" +
    "\001\002\000\026\011\uff30\012\uff30\020\uff30\023\uff30\111" +
    "\uff30\113\uff30\117\uff30\120\uff30\121\uff30\123\uff30\001\002" +
    "\000\026\011\uff0b\012\uff0b\020\uff0b\023\uff0b\111\uff0b\113" +
    "\uff0b\117\uff0b\120\uff0b\121\uff0b\123\uff0b\001\002\000\020" +
    "\012\ufefd\020\ufefd\113\ufefb\117\ufefb\120\ufefb\121\ufefb\123" +
    "\ufefb\001\002\000\006\012\uff15\020\uff15\001\002\000\014" +
    "\113\u0142\117\u0139\120\u0143\121\ufe07\123\u0140\001\002\000" +
    "\004\121\ufef1\001\002\000\022\012\ufe07\020\ufe07\111\u010b" +
    "\113\ufe07\117\ufe07\120\ufe07\121\ufe07\123\ufe07\001\002\000" +
    "\006\012\ufefe\020\ufefe\001\002\000\014\011\055\013\062" +
    "\036\061\205\060\206\056\001\002\000\030\011\u0171\012" +
    "\ufe07\020\ufe07\035\ufe07\101\ufe07\111\ufe07\113\ufe07\117\ufe07" +
    "\120\ufe07\121\ufe07\123\ufe07\001\002\000\026\012\ufeef\020" +
    "\ufeef\035\ufeef\101\ufeef\111\ufeef\113\ufeef\117\ufeef\120\ufeef" +
    "\121\ufeef\123\ufeef\001\002\000\014\011\055\013\062\036" +
    "\061\205\060\206\056\001\002\000\026\012\ufe07\020\ufe07" +
    "\035\u0174\101\ufe07\111\ufe07\113\ufe07\117\ufe07\120\ufe07\121" +
    "\ufe07\123\ufe07\001\002\000\024\012\ufeed\020\ufeed\101\ufeed" +
    "\111\ufeed\113\ufeed\117\ufeed\120\ufeed\121\ufeed\123\ufeed\001" +
    "\002\000\006\024\u0178\050\u0179\001\002\000\024\012\ufe07" +
    "\020\ufe07\101\u014b\111\ufe07\113\ufe07\117\ufe07\120\ufe07\121" +
    "\ufe07\123\ufe07\001\002\000\022\012\ufef7\020\ufef7\111\ufef7" +
    "\113\ufef7\117\ufef7\120\ufef7\121\ufef7\123\ufef7\001\002\000" +
    "\026\012\ufe07\020\ufe07\035\u0174\101\ufe07\111\ufe07\113\ufe07" +
    "\117\ufe07\120\ufe07\121\ufe07\123\ufe07\001\002\000\006\051" +
    "\u017b\126\u017c\001\002\000\006\051\u017b\126\u017c\001\002" +
    "\000\026\012\ufeeb\020\ufeeb\035\ufeeb\101\ufeeb\111\ufeeb\113" +
    "\ufeeb\117\ufeeb\120\ufeeb\121\ufeeb\123\ufeeb\001\002\000\006" +
    "\015\u017d\016\u017f\001\002\000\026\012\ufee8\020\ufee8\035" +
    "\ufee8\101\ufee8\111\ufee8\113\ufee8\117\ufee8\120\ufee8\121\ufee8" +
    "\123\ufee8\001\002\000\026\012\ufee9\020\ufee9\035\ufee9\101" +
    "\ufee9\111\ufee9\113\ufee9\117\ufee9\120\ufee9\121\ufee9\123\ufee9" +
    "\001\002\000\026\012\ufee7\020\ufee7\035\ufee7\101\ufee7\111" +
    "\ufee7\113\ufee7\117\ufee7\120\ufee7\121\ufee7\123\ufee7\001\002" +
    "\000\026\012\ufeea\020\ufeea\035\ufeea\101\ufeea\111\ufeea\113" +
    "\ufeea\117\ufeea\120\ufeea\121\ufeea\123\ufeea\001\002\000\026" +
    "\012\ufeec\020\ufeec\035\ufeec\101\ufeec\111\ufeec\113\ufeec\117" +
    "\ufeec\120\ufeec\121\ufeec\123\ufeec\001\002\000\024\012\ufeee" +
    "\020\ufeee\101\ufeee\111\ufeee\113\ufeee\117\ufeee\120\ufeee\121" +
    "\ufeee\123\ufeee\001\002\000\004\012\u0183\001\002\000\026" +
    "\012\ufef0\020\ufef0\035\ufef0\101\ufef0\111\ufef0\113\ufef0\117" +
    "\ufef0\120\ufef0\121\ufef0\123\ufef0\001\002\000\006\012\uff16" +
    "\020\uff16\001\002\000\030\015\u013b\016\ufe07\023\u013d\046" +
    "\ufe07\101\u0141\112\u0135\113\u0142\117\u0139\120\u0143\121\ufe07" +
    "\123\u0140\001\002\000\006\012\uff1c\020\uff1c\001\002\000" +
    "\010\016\uff13\046\uff13\121\ufef1\001\002\000\030\012\uff03" +
    "\020\uff03\023\uff03\101\uff03\111\uff03\112\uff03\113\uff03\117" +
    "\uff03\120\uff03\121\uff03\123\uff03\001\002\000\030\012\uff04" +
    "\020\uff04\023\uff04\101\uff04\111\uff04\112\uff04\113\uff04\117" +
    "\uff04\120\uff04\121\uff04\123\uff04\001\002\000\030\012\uff02" +
    "\020\uff02\023\uff02\101\uff02\111\uff02\112\uff02\113\uff02\117" +
    "\uff02\120\uff02\121\uff02\123\uff02\001\002\000\030\012\uff01" +
    "\020\uff01\023\uff01\101\uff01\111\uff01\112\uff01\113\uff01\117" +
    "\uff01\120\uff01\121\uff01\123\uff01\001\002\000\030\012\ufe07" +
    "\020\ufe07\023\ufe07\101\ufe07\111\ufe07\112\u018e\113\ufe07\117" +
    "\ufe07\120\ufe07\121\ufe07\123\ufe07\001\002\000\030\012\uff05" +
    "\020\uff05\023\uff05\101\uff05\111\uff05\112\uff05\113\uff05\117" +
    "\uff05\120\uff05\121\uff05\123\uff05\001\002\000\030\011\u0197" +
    "\012\ufe07\020\ufe07\023\ufe07\101\ufe07\111\ufe07\113\ufe07\117" +
    "\ufe07\120\ufe07\121\ufe07\123\ufe07\001\002\000\026\012\ufeff" +
    "\020\ufeff\023\ufeff\101\ufeff\111\ufeff\113\ufeff\117\ufeff\120" +
    "\ufeff\121\ufeff\123\ufeff\001\002\000\026\012\ufe07\020\ufe07" +
    "\023\ufe07\101\u014b\111\ufe07\113\ufe07\117\ufe07\120\ufe07\121" +
    "\ufe07\123\ufe07\001\002\000\024\012\ufe07\020\ufe07\023\u0193" +
    "\111\ufe07\113\ufe07\117\ufe07\120\ufe07\121\ufe07\123\ufe07\001" +
    "\002\000\022\012\uff08\020\uff08\111\uff08\113\uff08\117\uff08" +
    "\120\uff08\121\uff08\123\uff08\001\002\000\022\012\uff09\020" +
    "\uff09\111\uff09\113\uff09\117\uff09\120\uff09\121\uff09\123\uff09" +
    "\001\002\000\022\012\ufe07\020\ufe07\111\u010b\113\ufe07\117" +
    "\ufe07\120\ufe07\121\ufe07\123\ufe07\001\002\000\006\012\uff19" +
    "\020\uff19\001\002\000\026\012\uff11\020\uff11\023\uff11\101" +
    "\uff11\111\uff11\113\uff11\117\uff11\120\uff11\121\uff11\123\uff11" +
    "\001\002\000\004\247\u0199\001\002\000\026\012\uff00\020" +
    "\uff00\023\uff00\101\uff00\111\uff00\113\uff00\117\uff00\120\uff00" +
    "\121\uff00\123\uff00\001\002\000\004\020\u019a\001\002\000" +
    "\004\247\u019b\001\002\000\004\012\u019c\001\002\000\026" +
    "\012\uff12\020\uff12\023\uff12\101\uff12\111\uff12\113\uff12\117" +
    "\uff12\120\uff12\121\uff12\123\uff12\001\002\000\022\012\ufef8" +
    "\020\ufef8\111\ufef8\113\ufef8\117\ufef8\120\ufef8\121\ufef8\123" +
    "\ufef8\001\002\000\004\122\u01a3\001\002\000\024\012\uff10" +
    "\020\uff10\023\uff10\111\uff10\113\uff10\117\uff10\120\uff10\121" +
    "\uff10\123\uff10\001\002\000\024\012\ufe07\020\ufe07\023\u0193" +
    "\111\ufe07\113\ufe07\117\ufe07\120\ufe07\121\ufe07\123\ufe07\001" +
    "\002\000\022\012\ufe07\020\ufe07\111\u010b\113\ufe07\117\ufe07" +
    "\120\ufe07\121\ufe07\123\ufe07\001\002\000\006\012\uff17\020" +
    "\uff17\001\002\000\030\012\ufe07\016\u01a7\020\ufe07\023\ufe07" +
    "\101\u01a6\111\ufe07\113\ufe07\117\ufe07\120\ufe07\121\ufe07\123" +
    "\ufe07\001\002\000\024\012\uff0c\020\uff0c\023\uff0c\111\uff0c" +
    "\113\uff0c\117\uff0c\120\uff0c\121\uff0c\123\uff0c\001\002\000" +
    "\024\012\uff0f\020\uff0f\023\uff0f\111\uff0f\113\uff0f\117\uff0f" +
    "\120\uff0f\121\uff0f\123\uff0f\001\002\000\004\016\u01a8\001" +
    "\002\000\024\012\uff0d\020\uff0d\023\uff0d\111\uff0d\113\uff0d" +
    "\117\uff0d\120\uff0d\121\uff0d\123\uff0d\001\002\000\024\012" +
    "\uff0e\020\uff0e\023\uff0e\111\uff0e\113\uff0e\117\uff0e\120\uff0e" +
    "\121\uff0e\123\uff0e\001\002\000\026\012\ufe07\020\ufe07\023" +
    "\ufe07\101\u014b\111\ufe07\113\ufe07\117\ufe07\120\ufe07\121\ufe07" +
    "\123\ufe07\001\002\000\024\012\ufe07\020\ufe07\023\u0193\111" +
    "\ufe07\113\ufe07\117\ufe07\120\ufe07\121\ufe07\123\ufe07\001\002" +
    "\000\022\012\ufe07\020\ufe07\111\u010b\113\ufe07\117\ufe07\120" +
    "\ufe07\121\ufe07\123\ufe07\001\002\000\006\012\uff18\020\uff18" +
    "\001\002\000\036\012\uff07\015\uff07\016\uff07\020\uff07\023" +
    "\uff07\046\uff07\101\uff07\111\uff07\112\uff07\113\uff07\117\uff07" +
    "\120\uff07\121\uff07\123\uff07\001\002\000\004\247\u01af\001" +
    "\002\000\004\012\u01b0\001\002\000\042\012\ufe32\013\ufe32" +
    "\015\ufe32\016\ufe32\020\ufe32\023\ufe32\046\ufe32\101\ufe32\111" +
    "\ufe32\112\ufe32\113\ufe32\117\ufe32\120\ufe32\121\ufe32\123\ufe32" +
    "\131\ufe32\001\002\000\004\247\u01b2\001\002\000\004\012" +
    "\u01b3\001\002\000\042\012\ufe34\013\ufe34\015\ufe34\016\ufe34" +
    "\020\ufe34\023\ufe34\046\ufe34\101\ufe34\111\ufe34\112\ufe34\113" +
    "\ufe34\117\ufe34\120\ufe34\121\ufe34\123\ufe34\131\ufe34\001\002" +
    "\000\004\247\u01b5\001\002\000\004\012\u01b6\001\002\000" +
    "\042\012\ufe29\013\ufe29\015\ufe29\016\ufe29\020\ufe29\023\ufe29" +
    "\046\ufe29\101\ufe29\111\ufe29\112\ufe29\113\ufe29\117\ufe29\120" +
    "\ufe29\121\ufe29\123\ufe29\131\ufe29\001\002\000\006\171\u01b8" +
    "\247\u01b9\001\002\000\004\012\u01bb\001\002\000\004\012" +
    "\u01ba\001\002\000\042\012\ufe2c\013\ufe2c\015\ufe2c\016\ufe2c" +
    "\020\ufe2c\023\ufe2c\046\ufe2c\101\ufe2c\111\ufe2c\112\ufe2c\113" +
    "\ufe2c\117\ufe2c\120\ufe2c\121\ufe2c\123\ufe2c\131\ufe2c\001\002" +
    "\000\042\012\ufe2b\013\ufe2b\015\ufe2b\016\ufe2b\020\ufe2b\023" +
    "\ufe2b\046\ufe2b\101\ufe2b\111\ufe2b\112\ufe2b\113\ufe2b\117\ufe2b" +
    "\120\ufe2b\121\ufe2b\123\ufe2b\131\ufe2b\001\002\000\004\247" +
    "\u01bd\001\002\000\004\012\u01be\001\002\000\042\012\ufe36" +
    "\013\ufe36\015\ufe36\016\ufe36\020\ufe36\023\ufe36\046\ufe36\101" +
    "\ufe36\111\ufe36\112\ufe36\113\ufe36\117\ufe36\120\ufe36\121\ufe36" +
    "\123\ufe36\131\ufe36\001\002\000\042\012\ufe1b\013\ufe1b\015" +
    "\ufe1b\016\ufe1b\020\ufe1b\023\ufe1b\046\ufe1b\101\ufe1b\111\ufe1b" +
    "\112\ufe1b\113\ufe1b\117\ufe1b\120\ufe1b\121\ufe1b\123\ufe1b\131" +
    "\ufe1b\001\002\000\004\247\u01c1\001\002\000\004\012\u01c2" +
    "\001\002\000\042\012\ufe3a\013\ufe3a\015\ufe3a\016\ufe3a\020" +
    "\ufe3a\023\ufe3a\046\ufe3a\101\ufe3a\111\ufe3a\112\ufe3a\113\ufe3a" +
    "\117\ufe3a\120\ufe3a\121\ufe3a\123\ufe3a\131\ufe3a\001\002\000" +
    "\004\247\u01c4\001\002\000\004\012\u01c5\001\002\000\042" +
    "\012\ufe30\013\ufe30\015\ufe30\016\ufe30\020\ufe30\023\ufe30\046" +
    "\ufe30\101\ufe30\111\ufe30\112\ufe30\113\ufe30\117\ufe30\120\ufe30" +
    "\121\ufe30\123\ufe30\131\ufe30\001\002\000\004\247\u01c7\001" +
    "\002\000\004\012\u01c8\001\002\000\042\012\ufe38\013\ufe38" +
    "\015\ufe38\016\ufe38\020\ufe38\023\ufe38\046\ufe38\101\ufe38\111" +
    "\ufe38\112\ufe38\113\ufe38\117\ufe38\120\ufe38\121\ufe38\123\ufe38" +
    "\131\ufe38\001\002\000\042\012\ufe1a\013\ufe1a\015\ufe1a\016" +
    "\ufe1a\020\ufe1a\023\ufe1a\046\ufe1a\101\ufe1a\111\ufe1a\112\ufe1a" +
    "\113\ufe1a\117\ufe1a\120\ufe1a\121\ufe1a\123\ufe1a\131\ufe1a\001" +
    "\002\000\042\012\ufe1d\013\ufe1d\015\ufe1d\016\ufe1d\020\ufe1d" +
    "\023\ufe1d\046\ufe1d\101\ufe1d\111\ufe1d\112\ufe1d\113\ufe1d\117" +
    "\ufe1d\120\ufe1d\121\ufe1d\123\ufe1d\131\ufe1d\001\002\000\006" +
    "\011\ufe07\101\u014b\001\002\000\004\114\u01df\001\002\000" +
    "\004\114\u01dc\001\002\000\006\012\uff29\020\uff29\001\002" +
    "\000\010\011\ufe07\115\241\116\242\001\002\000\004\011" +
    "\u01d1\001\002\000\014\011\055\013\062\036\061\205\060" +
    "\206\056\001\002\000\006\012\uff27\020\uff27\001\002\000" +
    "\006\077\367\100\370\001\002\000\006\012\ufe07\020\u01d7" +
    "\001\002\000\004\012\uff22\001\002\000\004\012\u01db\001" +
    "\002\000\014\011\055\013\062\036\061\205\060\206\056" +
    "\001\002\000\006\077\367\100\370\001\002\000\006\012" +
    "\ufe07\020\u01d7\001\002\000\004\012\uff23\001\002\000\006" +
    "\012\uff24\020\uff24\001\002\000\010\011\ufe07\115\241\116" +
    "\242\001\002\000\004\011\u01d1\001\002\000\006\012\uff28" +
    "\020\uff28\001\002\000\004\011\u01e1\001\002\000\004\121" +
    "\u01e9\001\002\000\014\011\055\013\062\036\061\205\060" +
    "\206\056\001\002\000\006\012\ufe07\020\u01e5\001\002\000" +
    "\004\012\uff1f\001\002\000\004\012\u01e8\001\002\000\014" +
    "\011\055\013\062\036\061\205\060\206\056\001\002\000" +
    "\006\012\ufe07\020\u01e5\001\002\000\004\012\uff20\001\002" +
    "\000\004\121\uff21\001\002\000\014\011\055\013\062\036" +
    "\061\205\060\206\056\001\002\000\014\011\u0171\012\ufe07" +
    "\020\ufe07\035\ufe07\101\ufe07\001\002\000\012\012\ufe07\020" +
    "\ufe07\035\u0174\101\ufe07\001\002\000\010\012\ufe07\020\ufe07" +
    "\101\u014b\001\002\000\006\012\uff26\020\uff26\001\002\000" +
    "\004\011\u01ef\001\002\000\006\011\u0150\101\u0151\001\002" +
    "\000\004\012\u01f1\001\002\000\006\012\uff25\020\uff25\001" +
    "\002\000\014\113\ufefc\117\ufefc\120\ufefc\121\ufefc\123\ufefc" +
    "\001\002\000\004\012\uff2a\001\002\000\030\011\055\013" +
    "\062\036\061\111\u010b\113\ufe07\117\ufe07\120\ufe07\123\ufe07" +
    "\124\u0106\205\060\206\056\001\002\000\004\012\u01f6\001" +
    "\002\000\042\002\ufe07\003\ufe07\004\ufe07\024\ufe07\035\u01f9" +
    "\050\ufe07\061\ufe07\140\ufe07\145\ufe07\203\ufe07\204\ufe07\207" +
    "\ufe07\212\ufe07\213\ufe07\214\ufe07\215\ufe07\001\002\000\040" +
    "\002\uff35\003\uff35\004\uff35\024\uff35\050\uff35\061\uff35\140" +
    "\uff35\145\uff35\203\uff35\204\uff35\207\uff35\212\uff35\213\uff35" +
    "\214\uff35\215\uff35\001\002\000\040\002\uff37\003\uff37\004" +
    "\uff37\024\uff37\050\uff37\061\uff37\140\uff37\145\uff37\203\uff37" +
    "\204\uff37\207\uff37\212\uff37\213\uff37\214\uff37\215\uff37\001" +
    "\002\000\004\113\u01fa\001\002\000\040\002\uff36\003\uff36" +
    "\004\uff36\024\uff36\050\uff36\061\uff36\140\uff36\145\uff36\203" +
    "\uff36\204\uff36\207\uff36\212\uff36\213\uff36\214\uff36\215\uff36" +
    "\001\002\000\006\012\ufe07\020\u01f4\001\002\000\004\012" +
    "\uff2b\001\002\000\010\011\ufe07\115\241\116\242\001\002" +
    "\000\004\011\u01d1\001\002\000\006\012\uff1e\020\uff1e\001" +
    "\002\000\004\034\u0201\001\002\000\004\061\024\001\002" +
    "\000\040\002\uff43\003\uff43\004\uff43\024\uff43\050\uff43\061" +
    "\uff43\140\uff43\145\uff43\203\uff43\204\uff43\207\uff43\212\uff43" +
    "\213\uff43\214\uff43\215\uff43\001\002\000\040\002\uff63\003" +
    "\uff63\004\uff63\024\uff63\050\uff63\061\uff63\140\uff63\145\uff63" +
    "\203\uff63\204\uff63\207\uff63\212\uff63\213\uff63\214\uff63\215" +
    "\uff63\001\002\000\044\002\ufe07\003\ufe07\004\ufe07\024\ufe07" +
    "\035\u0207\050\ufe07\061\ufe07\131\ufe07\140\ufe07\145\ufe07\203" +
    "\ufe07\204\ufe07\207\ufe07\212\ufe07\213\ufe07\214\ufe07\215\ufe07" +
    "\001\002\000\042\002\uff5f\003\uff5f\004\uff5f\024\uff5f\050" +
    "\uff5f\061\uff5f\131\uff5f\140\uff5f\145\uff5f\203\uff5f\204\uff5f" +
    "\207\uff5f\212\uff5f\213\uff5f\214\uff5f\215\uff5f\001\002\000" +
    "\042\002\ufe07\003\ufe07\004\ufe07\024\ufe07\050\ufe07\061\ufe07" +
    "\131\u0239\140\ufe07\145\ufe07\203\ufe07\204\ufe07\207\ufe07\212" +
    "\ufe07\213\ufe07\214\ufe07\215\ufe07\001\002\000\006\011\ufe07" +
    "\113\u020a\001\002\000\040\002\uff62\003\uff62\004\uff62\024" +
    "\uff62\050\uff62\061\uff62\140\uff62\145\uff62\203\uff62\204\uff62" +
    "\207\uff62\212\uff62\213\uff62\214\uff62\215\uff62\001\002\000" +
    "\004\011\uff5d\001\002\000\004\011\uff5e\001\002\000\004" +
    "\011\u020d\001\002\000\042\002\uff60\003\uff60\004\uff60\024" +
    "\uff60\050\uff60\061\uff60\131\uff60\140\uff60\145\uff60\203\uff60" +
    "\204\uff60\207\uff60\212\uff60\213\uff60\214\uff60\215\uff60\001" +
    "\002\000\004\130\u0211\001\002\000\044\002\uff5b\003\uff5b" +
    "\004\uff5b\020\u020f\024\uff5b\050\uff5b\061\uff5b\131\uff5b\140" +
    "\uff5b\145\uff5b\203\uff5b\204\uff5b\207\uff5b\212\uff5b\213\uff5b" +
    "\214\uff5b\215\uff5b\001\002\000\004\011\u020d\001\002\000" +
    "\042\002\uff5c\003\uff5c\004\uff5c\024\uff5c\050\uff5c\061\uff5c" +
    "\131\uff5c\140\uff5c\145\uff5c\203\uff5c\204\uff5c\207\uff5c\212" +
    "\uff5c\213\uff5c\214\uff5c\215\uff5c\001\002\000\004\037\u0212" +
    "\001\002\000\004\057\u0213\001\002\000\004\020\u0214\001" +
    "\002\000\004\242\u0215\001\002\000\004\037\u0216\001\002" +
    "\000\004\057\u0217\001\002\000\006\012\ufe07\020\u021a\001" +
    "\002\000\004\012\uff56\001\002\000\004\012\u0237\001\002" +
    "\000\010\135\u0223\233\u0221\235\u0222\001\002\000\006\012" +
    "\uff51\020\uff51\001\002\000\006\012\uff54\020\uff54\001\002" +
    "\000\006\012\uff55\020\uff55\001\002\000\006\012\ufe07\020" +
    "\u021a\001\002\000\006\012\uff53\020\uff53\001\002\000\006" +
    "\012\uff52\020\uff52\001\002\000\004\037\u0230\001\002\000" +
    "\004\037\u022b\001\002\000\004\037\u0224\001\002\000\004" +
    "\247\u0225\001\002\000\016\012\uff4f\020\uff4f\236\u0228\237" +
    "\u022a\240\u0229\241\u0226\001\002\000\006\012\uff4b\020\uff4b" +
    "\001\002\000\006\012\uff50\020\uff50\001\002\000\006\012" +
    "\uff4e\020\uff4e\001\002\000\006\012\uff4c\020\uff4c\001\002" +
    "\000\006\012\uff4d\020\uff4d\001\002\000\006\234\u022e\247" +
    "\u022d\001\002\000\006\012\uff4a\020\uff4a\001\002\000\012" +
    "\236\u0228\237\u022a\240\u0229\241\u0226\001\002\000\006\012" +
    "\uff48\020\uff48\001\002\000\006\012\uff49\020\uff49\001\002" +
    "\000\004\247\u0231\001\002\000\020\012\ufe07\020\ufe07\232" +
    "\u0234\236\u0228\237\u022a\240\u0229\241\u0226\001\002\000\006" +
    "\012\uff44\020\uff44\001\002\000\006\012\uff46\020\uff46\001" +
    "\002\000\006\012\uff45\020\uff45\001\002\000\006\012\uff47" +
    "\020\uff47\001\002\000\004\012\uff57\001\002\000\044\002" +
    "\uff5a\003\uff5a\004\uff5a\020\uff5a\024\uff5a\050\uff5a\061\uff5a" +
    "\131\uff5a\140\uff5a\145\uff5a\203\uff5a\204\uff5a\207\uff5a\212" +
    "\uff5a\213\uff5a\214\uff5a\215\uff5a\001\002\000\040\002\uff58" +
    "\003\uff58\004\uff58\024\uff58\050\uff58\061\uff58\140\uff58\145" +
    "\uff58\203\uff58\204\uff58\207\uff58\212\uff58\213\uff58\214\uff58" +
    "\215\uff58\001\002\000\004\013\u023b\001\002\000\040\002" +
    "\uff61\003\uff61\004\uff61\024\uff61\050\uff61\061\uff61\140\uff61" +
    "\145\uff61\203\uff61\204\uff61\207\uff61\212\uff61\213\uff61\214" +
    "\uff61\215\uff61\001\002\000\040\002\uff59\003\uff59\004\uff59" +
    "\024\uff59\050\uff59\061\uff59\140\uff59\145\uff59\203\uff59\204" +
    "\uff59\207\uff59\212\uff59\213\uff59\214\uff59\215\uff59\001\002" +
    "\000\004\005\u027e\001\002\000\006\011\u0278\247\u0279\001" +
    "\002\000\014\011\055\013\062\036\061\205\060\206\056" +
    "\001\002\000\010\007\u0240\011\u0242\014\u0241\001\002\000" +
    "\006\011\u0272\015\u0271\001\002\000\004\007\u0268\001\002" +
    "\000\014\011\055\013\062\036\061\205\060\206\056\001" +
    "\002\000\004\012\u0244\001\002\000\010\007\u0247\014\u0246" +
    "\015\u0245\001\002\000\004\007\u0266\001\002\000\004\007" +
    "\u025d\001\002\000\004\011\u0248\001\002\000\016\015\u024a" +
    "\016\u024f\057\u024b\060\u024d\247\u0250\250\u024e\001\002\000" +
    "\006\012\uffd1\020\u025b\001\002\000\010\007\u0258\012\uffd3" +
    "\020\u0254\001\002\000\034\012\ufe0a\014\ufe0a\020\ufe0a\021" +
    "\ufe0a\022\ufe0a\025\ufe0a\052\ufe0a\053\ufe0a\054\ufe0a\055\ufe0a" +
    "\056\ufe0a\066\ufe0a\106\ufe0a\001\002\000\004\012\u0256\001" +
    "\002\000\034\012\ufe08\014\ufe08\020\ufe08\021\ufe08\022\ufe08" +
    "\025\ufe08\052\ufe08\053\ufe08\054\ufe08\055\ufe08\056\ufe08\066" +
    "\ufe08\106\ufe08\001\002\000\034\012\ufe09\014\ufe09\020\ufe09" +
    "\021\ufe09\022\ufe09\025\ufe09\052\ufe09\053\ufe09\054\ufe09\055" +
    "\ufe09\056\ufe09\066\ufe09\106\ufe09\001\002\000\006\012\uffd2" +
    "\020\u0251\001\002\000\034\012\ufe0b\014\ufe0b\020\ufe0b\021" +
    "\ufe0b\022\ufe0b\025\ufe0b\052\ufe0b\053\ufe0b\054\ufe0b\055\ufe0b" +
    "\056\ufe0b\066\ufe0b\106\ufe0b\001\002\000\016\015\u0252\016" +
    "\u024f\057\u024b\060\u024d\247\u0250\250\u024e\001\002\000\006" +
    "\012\uffd3\020\u0254\001\002\000\004\012\uffd5\001\002\000" +
    "\016\015\u0252\016\u024f\057\u024b\060\u024d\247\u0250\250\u024e" +
    "\001\002\000\004\012\uffd6\001\002\000\006\021\073\022" +
    "\075\001\002\000\040\002\uffe2\003\uffe2\004\uffe2\024\uffe2" +
    "\050\uffe2\061\uffe2\140\uffe2\145\uffe2\203\uffe2\204\uffe2\207" +
    "\uffe2\212\uffe2\213\uffe2\214\uffe2\215\uffe2\001\002\000\004" +
    "\012\u0259\001\002\000\006\021\073\022\075\001\002\000" +
    "\040\002\uffe1\003\uffe1\004\uffe1\024\uffe1\050\uffe1\061\uffe1" +
    "\140\uffe1\145\uffe1\203\uffe1\204\uffe1\207\uffe1\212\uffe1\213" +
    "\uffe1\214\uffe1\215\uffe1\001\002\000\016\015\u0252\016\u024f" +
    "\057\u024b\060\u024d\247\u0250\250\u024e\001\002\000\004\012" +
    "\uffd4\001\002\000\004\011\u025e\001\002\000\016\015\u025f" +
    "\016\u024f\057\u024b\060\u024d\247\u0250\250\u024e\001\002\000" +
    "\010\007\u0263\012\uffd3\020\u0254\001\002\000\004\012\u0261" +
    "\001\002\000\006\021\073\022\075\001\002\000\040\002" +
    "\uffe4\003\uffe4\004\uffe4\024\uffe4\050\uffe4\061\uffe4\140\uffe4" +
    "\145\uffe4\203\uffe4\204\uffe4\207\uffe4\212\uffe4\213\uffe4\214" +
    "\uffe4\215\uffe4\001\002\000\004\012\u0264\001\002\000\006" +
    "\021\073\022\075\001\002\000\040\002\uffe3\003\uffe3\004" +
    "\uffe3\024\uffe3\050\uffe3\061\uffe3\140\uffe3\145\uffe3\203\uffe3" +
    "\204\uffe3\207\uffe3\212\uffe3\213\uffe3\214\uffe3\215\uffe3\001" +
    "\002\000\006\021\073\022\075\001\002\000\040\002\uffe0" +
    "\003\uffe0\004\uffe0\024\uffe0\050\uffe0\061\uffe0\140\uffe0\145" +
    "\uffe0\203\uffe0\204\uffe0\207\uffe0\212\uffe0\213\uffe0\214\uffe0" +
    "\215\uffe0\001\002\000\004\011\u0269\001\002\000\016\015" +
    "\u026a\016\u024f\057\u024b\060\u024d\247\u0250\250\u024e\001\002" +
    "\000\010\007\u026e\012\uffd3\020\u0254\001\002\000\004\012" +
    "\u026c\001\002\000\006\021\073\022\075\001\002\000\040" +
    "\002\uffdb\003\uffdb\004\uffdb\024\uffdb\050\uffdb\061\uffdb\140" +
    "\uffdb\145\uffdb\203\uffdb\204\uffdb\207\uffdb\212\uffdb\213\uffdb" +
    "\214\uffdb\215\uffdb\001\002\000\004\012\u026f\001\002\000" +
    "\006\021\073\022\075\001\002\000\040\002\uffda\003\uffda" +
    "\004\uffda\024\uffda\050\uffda\061\uffda\140\uffda\145\uffda\203" +
    "\uffda\204\uffda\207\uffda\212\uffda\213\uffda\214\uffda\215\uffda" +
    "\001\002\000\004\007\u0276\001\002\000\016\015\u0252\016" +
    "\u024f\057\u024b\060\u024d\247\u0250\250\u024e\001\002\000\004" +
    "\012\u0274\001\002\000\006\021\073\022\075\001\002\000" +
    "\040\002\uffd9\003\uffd9\004\uffd9\024\uffd9\050\uffd9\061\uffd9" +
    "\140\uffd9\145\uffd9\203\uffd9\204\uffd9\207\uffd9\212\uffd9\213" +
    "\uffd9\214\uffd9\215\uffd9\001\002\000\006\021\073\022\075" +
    "\001\002\000\040\002\uffd8\003\uffd8\004\uffd8\024\uffd8\050" +
    "\uffd8\061\uffd8\140\uffd8\145\uffd8\203\uffd8\204\uffd8\207\uffd8" +
    "\212\uffd8\213\uffd8\214\uffd8\215\uffd8\001\002\000\004\247" +
    "\u027b\001\002\000\042\005\ufe3d\010\u027a\011\ufe3d\013\ufe3d" +
    "\020\ufe3d\025\ufe3d\036\ufe3d\054\ufe3d\061\ufe3d\107\ufe3d\110" +
    "\ufe3d\171\ufe3d\205\ufe3d\206\ufe3d\244\ufe3d\245\ufe3d\001\002" +
    "\000\040\005\ufe3c\011\ufe3c\013\ufe3c\020\ufe3c\025\ufe3c\036" +
    "\ufe3c\054\ufe3c\061\ufe3c\107\ufe3c\110\ufe3c\171\ufe3c\205\ufe3c" +
    "\206\ufe3c\244\ufe3c\245\ufe3c\001\002\000\004\012\u027c\001" +
    "\002\000\042\005\ufe3f\010\u027d\011\ufe3f\013\ufe3f\020\ufe3f" +
    "\025\ufe3f\036\ufe3f\054\ufe3f\061\ufe3f\107\ufe3f\110\ufe3f\171" +
    "\ufe3f\205\ufe3f\206\ufe3f\244\ufe3f\245\ufe3f\001\002\000\040" +
    "\005\ufe3e\011\ufe3e\013\ufe3e\020\ufe3e\025\ufe3e\036\ufe3e\054" +
    "\ufe3e\061\ufe3e\107\ufe3e\110\ufe3e\171\ufe3e\205\ufe3e\206\ufe3e" +
    "\244\ufe3e\245\ufe3e\001\002\000\014\011\055\013\062\036" +
    "\061\205\060\206\056\001\002\000\010\007\u0281\011\u0282" +
    "\014\u0280\001\002\000\004\007\u02a0\001\002\000\004\011" +
    "\u0298\001\002\000\014\011\055\013\062\036\061\205\060" +
    "\206\056\001\002\000\004\012\u0284\001\002\000\006\007" +
    "\u0286\014\u0285\001\002\000\004\007\u028f\001\002\000\004" +
    "\011\u0287\001\002\000\016\015\u0288\016\u024f\057\u024b\060" +
    "\u024d\247\u0250\250\u024e\001\002\000\010\007\u028c\012\uffd3" +
    "\020\u0254\001\002\000\004\012\u028a\001\002\000\006\021" +
    "\073\022\075\001\002\000\040\002\uffe6\003\uffe6\004\uffe6" +
    "\024\uffe6\050\uffe6\061\uffe6\140\uffe6\145\uffe6\203\uffe6\204" +
    "\uffe6\207\uffe6\212\uffe6\213\uffe6\214\uffe6\215\uffe6\001\002" +
    "\000\004\012\u028d\001\002\000\006\021\073\022\075\001" +
    "\002\000\040\002\uffe5\003\uffe5\004\uffe5\024\uffe5\050\uffe5" +
    "\061\uffe5\140\uffe5\145\uffe5\203\uffe5\204\uffe5\207\uffe5\212" +
    "\uffe5\213\uffe5\214\uffe5\215\uffe5\001\002\000\004\011\u0290" +
    "\001\002\000\016\015\u0291\016\u024f\057\u024b\060\u024d\247" +
    "\u0250\250\u024e\001\002\000\010\007\u0295\012\uffd3\020\u0254" +
    "\001\002\000\004\012\u0293\001\002\000\006\021\073\022" +
    "\075\001\002\000\040\002\uffe8\003\uffe8\004\uffe8\024\uffe8" +
    "\050\uffe8\061\uffe8\140\uffe8\145\uffe8\203\uffe8\204\uffe8\207" +
    "\uffe8\212\uffe8\213\uffe8\214\uffe8\215\uffe8\001\002\000\004" +
    "\012\u0296\001\002\000\006\021\073\022\075\001\002\000" +
    "\040\002\uffe7\003\uffe7\004\uffe7\024\uffe7\050\uffe7\061\uffe7" +
    "\140\uffe7\145\uffe7\203\uffe7\204\uffe7\207\uffe7\212\uffe7\213" +
    "\uffe7\214\uffe7\215\uffe7\001\002\000\016\015\u0299\016\u024f" +
    "\057\u024b\060\u024d\247\u0250\250\u024e\001\002\000\010\007" +
    "\u029d\012\uffd3\020\u0254\001\002\000\004\012\u029b\001\002" +
    "\000\006\021\073\022\075\001\002\000\040\002\uffdd\003" +
    "\uffdd\004\uffdd\024\uffdd\050\uffdd\061\uffdd\140\uffdd\145\uffdd" +
    "\203\uffdd\204\uffdd\207\uffdd\212\uffdd\213\uffdd\214\uffdd\215" +
    "\uffdd\001\002\000\004\012\u029e\001\002\000\006\021\073" +
    "\022\075\001\002\000\040\002\uffdc\003\uffdc\004\uffdc\024" +
    "\uffdc\050\uffdc\061\uffdc\140\uffdc\145\uffdc\203\uffdc\204\uffdc" +
    "\207\uffdc\212\uffdc\213\uffdc\214\uffdc\215\uffdc\001\002\000" +
    "\004\011\u02a1\001\002\000\016\015\u02a2\016\u024f\057\u024b" +
    "\060\u024d\247\u0250\250\u024e\001\002\000\010\007\u02a6\012" +
    "\uffd3\020\u0254\001\002\000\004\012\u02a4\001\002\000\006" +
    "\021\073\022\075\001\002\000\040\002\uffdf\003\uffdf\004" +
    "\uffdf\024\uffdf\050\uffdf\061\uffdf\140\uffdf\145\uffdf\203\uffdf" +
    "\204\uffdf\207\uffdf\212\uffdf\213\uffdf\214\uffdf\215\uffdf\001" +
    "\002\000\004\012\u02a7\001\002\000\006\021\073\022\075" +
    "\001\002\000\040\002\uffde\003\uffde\004\uffde\024\uffde\050" +
    "\uffde\061\uffde\140\uffde\145\uffde\203\uffde\204\uffde\207\uffde" +
    "\212\uffde\213\uffde\214\uffde\215\uffde\001\002\000\004\002" +
    "\uffea\001\002\000\004\002\ufff3\001\002\000\004\002\ufff4" +
    "\001\002\000\004\162\u02ad\001\002\000\034\046\ufe07\216" +
    "\u02b0\217\u02af\220\ufe07\221\ufe07\222\ufe07\223\ufe07\224\ufe07" +
    "\225\ufe07\226\ufe07\227\ufe07\230\ufe07\231\ufe07\001\002\000" +
    "\030\046\ufe55\220\ufe55\221\ufe55\222\ufe55\223\ufe55\224\ufe55" +
    "\225\ufe55\226\ufe55\227\ufe55\230\ufe55\231\ufe55\001\002\000" +
    "\030\046\ufe56\220\ufe56\221\ufe56\222\ufe56\223\ufe56\224\ufe56" +
    "\225\ufe56\226\ufe56\227\ufe56\230\ufe56\231\ufe56\001\002\000" +
    "\030\046\ufe57\220\ufe57\221\ufe57\222\ufe57\223\ufe57\224\ufe57" +
    "\225\ufe57\226\ufe57\227\ufe57\230\ufe57\231\ufe57\001\002\000" +
    "\030\046\ufe07\220\u02b5\221\u02b2\222\ufe07\223\ufe07\224\ufe07" +
    "\225\ufe07\226\ufe07\227\ufe07\230\ufe07\231\ufe07\001\002\000" +
    "\024\046\ufe53\222\ufe53\223\ufe53\224\ufe53\225\ufe53\226\ufe53" +
    "\227\ufe53\230\ufe53\231\ufe53\001\002\000\024\046\ufe52\222" +
    "\ufe52\223\ufe52\224\ufe52\225\ufe52\226\ufe52\227\ufe52\230\ufe52" +
    "\231\ufe52\001\002\000\024\046\ufe07\222\u02b7\223\u02b8\224" +
    "\u02bb\225\u02ba\226\ufe07\227\ufe07\230\ufe07\231\ufe07\001\002" +
    "\000\024\046\ufe54\222\ufe54\223\ufe54\224\ufe54\225\ufe54\226" +
    "\ufe54\227\ufe54\230\ufe54\231\ufe54\001\002\000\014\046\ufe4d" +
    "\226\ufe4d\227\ufe4d\230\ufe4d\231\ufe4d\001\002\000\014\046" +
    "\ufe51\226\ufe51\227\ufe51\230\ufe51\231\ufe51\001\002\000\014" +
    "\046\ufe50\226\ufe50\227\ufe50\230\ufe50\231\ufe50\001\002\000" +
    "\014\046\ufe07\226\u02c0\227\u02be\230\u02bf\231\ufe07\001\002" +
    "\000\014\046\ufe4e\226\ufe4e\227\ufe4e\230\ufe4e\231\ufe4e\001" +
    "\002\000\014\046\ufe4f\226\ufe4f\227\ufe4f\230\ufe4f\231\ufe4f" +
    "\001\002\000\006\046\ufe49\231\ufe49\001\002\000\006\046" +
    "\ufe07\231\u02c3\001\002\000\006\046\ufe4b\231\ufe4b\001\002" +
    "\000\006\046\ufe4a\231\ufe4a\001\002\000\006\046\ufe4c\231" +
    "\ufe4c\001\002\000\004\046\ufe47\001\002\000\004\046\u02c4" +
    "\001\002\000\004\046\ufe48\001\002\000\004\061\024\001" +
    "\002\000\042\002\ufe07\003\ufe07\004\ufe07\024\ufe07\046\u02c8" +
    "\050\ufe07\061\ufe07\140\ufe07\145\ufe07\203\ufe07\204\ufe07\207" +
    "\ufe07\212\ufe07\213\ufe07\214\ufe07\215\ufe07\001\002\000\040" +
    "\002\ufe45\003\ufe45\004\ufe45\024\ufe45\050\ufe45\061\ufe45\140" +
    "\ufe45\145\ufe45\203\ufe45\204\ufe45\207\ufe45\212\ufe45\213\ufe45" +
    "\214\ufe45\215\ufe45\001\002\000\040\002\ufe58\003\ufe58\004" +
    "\ufe58\024\ufe58\050\ufe58\061\ufe58\140\ufe58\145\ufe58\203\ufe58" +
    "\204\ufe58\207\ufe58\212\ufe58\213\ufe58\214\ufe58\215\ufe58\001" +
    "\002\000\004\050\u02c9\001\002\000\042\002\ufe07\003\ufe07" +
    "\004\ufe07\024\ufe07\050\ufe07\061\ufe07\140\ufe07\145\ufe07\203" +
    "\ufe07\204\ufe07\207\ufe07\212\ufe07\213\ufe07\214\ufe07\215\ufe07" +
    "\243\u02cc\001\002\000\040\002\ufe43\003\ufe43\004\ufe43\024" +
    "\ufe43\050\ufe43\061\ufe43\140\ufe43\145\ufe43\203\ufe43\204\ufe43" +
    "\207\ufe43\212\ufe43\213\ufe43\214\ufe43\215\ufe43\001\002\000" +
    "\040\002\ufe46\003\ufe46\004\ufe46\024\ufe46\050\ufe46\061\ufe46" +
    "\140\ufe46\145\ufe46\203\ufe46\204\ufe46\207\ufe46\212\ufe46\213" +
    "\ufe46\214\ufe46\215\ufe46\001\002\000\004\013\u02ce\001\002" +
    "\000\040\002\ufe44\003\ufe44\004\ufe44\024\ufe44\050\ufe44\061" +
    "\ufe44\140\ufe44\145\ufe44\203\ufe44\204\ufe44\207\ufe44\212\ufe44" +
    "\213\ufe44\214\ufe44\215\ufe44\001\002\000\042\002\ufe07\003" +
    "\ufe07\004\ufe07\020\u02d1\024\ufe07\050\ufe07\061\ufe07\140\ufe07" +
    "\145\ufe07\203\ufe07\204\ufe07\207\ufe07\212\ufe07\213\ufe07\214" +
    "\ufe07\215\ufe07\001\002\000\040\002\ufe40\003\ufe40\004\ufe40" +
    "\024\ufe40\050\ufe40\061\ufe40\140\ufe40\145\ufe40\203\ufe40\204" +
    "\ufe40\207\ufe40\212\ufe40\213\ufe40\214\ufe40\215\ufe40\001\002" +
    "\000\040\002\ufe42\003\ufe42\004\ufe42\024\ufe42\050\ufe42\061" +
    "\ufe42\140\ufe42\145\ufe42\203\ufe42\204\ufe42\207\ufe42\212\ufe42" +
    "\213\ufe42\214\ufe42\215\ufe42\001\002\000\004\013\u02d2\001" +
    "\002\000\042\002\ufe07\003\ufe07\004\ufe07\020\u02d1\024\ufe07" +
    "\050\ufe07\061\ufe07\140\ufe07\145\ufe07\203\ufe07\204\ufe07\207" +
    "\ufe07\212\ufe07\213\ufe07\214\ufe07\215\ufe07\001\002\000\040" +
    "\002\ufe41\003\ufe41\004\ufe41\024\ufe41\050\ufe41\061\ufe41\140" +
    "\ufe41\145\ufe41\203\ufe41\204\ufe41\207\ufe41\212\ufe41\213\ufe41" +
    "\214\ufe41\215\ufe41\001\002\000\004\002\ufff0\001\002\000" +
    "\004\002\ufffc\001\002\000\040\002\uffd7\003\uffd7\004\uffd7" +
    "\024\uffd7\050\uffd7\061\uffd7\140\uffd7\145\uffd7\203\uffd7\204" +
    "\uffd7\207\uffd7\212\uffd7\213\uffd7\214\uffd7\215\uffd7\001\002" +
    "\000\004\002\ufff7\001\002\000\004\002\ufff5\001\002\000" +
    "\004\003\u03b1\001\002\000\006\005\u03a7\025\u030c\001\002" +
    "\000\042\005\ufe07\006\u023d\011\055\013\062\020\ufe07\025" +
    "\ufe07\036\061\054\u02e3\061\u02d9\107\u02df\110\u02e4\171\u02e2" +
    "\205\060\206\056\244\u02e0\245\u02dc\001\002\000\004\011" +
    "\u0389\001\002\000\042\005\ufe07\006\u023d\011\055\013\062" +
    "\020\ufe07\025\ufe07\036\061\054\u02e3\061\u02d9\107\u02df\110" +
    "\u02e4\171\u02e2\205\060\206\056\244\u02e0\245\u02dc\001\002" +
    "\000\040\005\ufe07\011\055\013\062\020\ufe07\025\ufe07\036" +
    "\061\054\u02e3\061\u02d9\107\u02df\110\u02e4\171\u02e2\205\060" +
    "\206\056\244\u02e0\245\u02dc\001\002\000\004\011\u0307\001" +
    "\002\000\004\011\u0303\001\002\000\010\005\uff81\020\uff81" +
    "\025\uff81\001\002\000\004\011\u02ff\001\002\000\006\005" +
    "\uff97\025\uff97\001\002\000\004\011\u02f1\001\002\000\010" +
    "\005\uff94\020\u02ef\025\uff94\001\002\000\014\005\uff96\013" +
    "\u02e9\020\u02e8\025\uff96\034\u02e7\001\002\000\004\013\u02ee" +
    "\001\002\000\040\005\ufe07\011\055\013\062\020\ufe07\025" +
    "\ufe07\036\061\054\u02e3\061\u02d9\107\u02df\110\u02e4\171\u02e2" +
    "\205\060\206\056\244\u02e0\245\u02dc\001\002\000\042\005" +
    "\ufe9a\013\ufe9a\020\ufe9a\021\ufe9a\022\ufe9a\025\ufe9a\027\ufe9a" +
    "\031\ufe9a\032\ufe9a\033\ufe9a\034\ufe9a\035\ufe9a\044\ufe9a\064" +
    "\ufe9a\066\ufe9a\106\ufe9a\001\002\000\010\005\uff95\020\u02eb" +
    "\025\uff95\001\002\000\040\005\ufe07\011\055\013\062\020" +
    "\ufe07\025\ufe07\036\061\054\u02e3\061\u02d9\107\u02df\110\u02e4" +
    "\171\u02e2\205\060\206\056\244\u02e0\245\u02dc\001\002\000" +
    "\006\005\uff92\025\uff92\001\002\000\006\005\uff93\025\uff93" +
    "\001\002\000\042\005\ufe9b\013\ufe9b\020\ufe9b\021\ufe9b\022" +
    "\ufe9b\025\ufe9b\027\ufe9b\031\ufe9b\032\ufe9b\033\ufe9b\034\ufe9b" +
    "\035\ufe9b\044\ufe9b\064\ufe9b\066\ufe9b\106\ufe9b\001\002\000" +
    "\040\005\ufe07\011\055\013\062\020\ufe07\025\ufe07\036\061" +
    "\054\u02e3\061\u02d9\107\u02df\110\u02e4\171\u02e2\205\060\206" +
    "\056\244\u02e0\245\u02dc\001\002\000\006\005\uff91\025\uff91" +
    "\001\002\000\024\011\ufe07\013\ufe07\036\ufe07\054\u02f6\062" +
    "\u02f4\063\u02f2\205\ufe07\206\ufe07\247\u02f7\001\002\000\014" +
    "\011\uff7f\013\uff7f\036\uff7f\205\uff7f\206\uff7f\001\002\000" +
    "\014\011\uff7e\013\uff7e\036\uff7e\205\uff7e\206\uff7e\001\002" +
    "\000\014\011\uff80\013\uff80\036\uff80\205\uff80\206\uff80\001" +
    "\002\000\014\011\055\013\062\036\061\205\060\206\056" +
    "\001\002\000\004\012\u02fa\001\002\000\004\012\u02f8\001" +
    "\002\000\014\005\uff88\013\u02e9\020\uff88\025\uff88\034\u02e7" +
    "\001\002\000\010\005\uff89\020\uff89\025\uff89\001\002\000" +
    "\014\005\uff8a\013\u02e9\020\uff8a\025\uff8a\034\u02e7\001\002" +
    "\000\010\005\uff8b\020\uff8b\025\uff8b\001\002\000\004\012" +
    "\u02fd\001\002\000\014\005\uff8c\013\u02e9\020\uff8c\025\uff8c" +
    "\034\u02e7\001\002\000\010\005\uff8d\020\uff8d\025\uff8d\001" +
    "\002\000\014\011\055\013\062\036\061\205\060\206\056" +
    "\001\002\000\004\012\u0301\001\002\000\014\005\uff84\013" +
    "\u02e9\020\uff84\025\uff84\034\u02e7\001\002\000\010\005\uff85" +
    "\020\uff85\025\uff85\001\002\000\014\011\055\013\062\036" +
    "\061\205\060\206\056\001\002\000\004\012\u0305\001\002" +
    "\000\014\005\uff86\013\u02e9\020\uff86\025\uff86\034\u02e7\001" +
    "\002\000\010\005\uff87\020\uff87\025\uff87\001\002\000\014" +
    "\011\055\013\062\036\061\205\060\206\056\001\002\000" +
    "\004\012\u0309\001\002\000\014\005\uff8e\013\u02e9\020\uff8e" +
    "\025\uff8e\034\u02e7\001\002\000\010\005\uff8f\020\uff8f\025" +
    "\uff8f\001\002\000\006\005\u030e\025\u030c\001\002\000\014" +
    "\011\055\013\062\036\061\205\060\206\056\001\002\000" +
    "\014\021\ufe07\022\ufe07\064\ufe07\066\ufe07\106\256\001\002" +
    "\000\004\025\u030c\001\002\000\014\021\ufe07\022\ufe07\064" +
    "\ufe07\066\ufe07\106\256\001\002\000\012\021\ufe07\022\ufe07" +
    "\064\u0313\066\ufe07\001\002\000\010\021\uff7c\022\uff7c\066" +
    "\uff7c\001\002\000\010\021\ufe07\022\ufe07\066\356\001\002" +
    "\000\004\065\u0314\001\002\000\014\011\055\013\062\036" +
    "\061\205\060\206\056\001\002\000\012\021\ufe07\022\ufe07" +
    "\066\ufe07\067\u0318\001\002\000\010\021\uff7a\022\uff7a\066" +
    "\uff7a\001\002\000\010\021\uff7d\022\uff7d\066\uff7d\001\002" +
    "\000\014\011\055\013\062\036\061\205\060\206\056\001" +
    "\002\000\010\021\uff7b\022\uff7b\066\uff7b\001\002\000\010" +
    "\037\u031e\075\u031c\076\u031b\001\002\000\012\057\uff77\060" +
    "\uff77\247\uff77\250\uff77\001\002\000\012\057\uff78\060\uff78" +
    "\247\uff78\250\uff78\001\002\000\012\057\u024b\060\u024d\247" +
    "\u0250\250\u024e\001\002\000\012\057\uff76\060\uff76\247\uff76" +
    "\250\uff76\001\002\000\010\021\uff79\022\uff79\066\uff79\001" +
    "\002\000\006\021\073\022\075\001\002\000\046\002\uffa1" +
    "\003\uffa1\004\uffa1\021\uffa1\022\uffa1\024\uffa1\046\uffa1\050" +
    "\uffa1\061\uffa1\140\uffa1\145\uffa1\203\uffa1\204\uffa1\207\uffa1" +
    "\212\uffa1\213\uffa1\214\uffa1\215\uffa1\001\002\000\012\021" +
    "\ufe07\022\ufe07\064\u0313\066\ufe07\001\002\000\010\021\ufe07" +
    "\022\ufe07\066\356\001\002\000\006\021\073\022\075\001" +
    "\002\000\046\002\uff9b\003\uff9b\004\uff9b\021\uff9b\022\uff9b" +
    "\024\uff9b\046\uff9b\050\uff9b\061\uff9b\140\uff9b\145\uff9b\203" +
    "\uff9b\204\uff9b\207\uff9b\212\uff9b\213\uff9b\214\uff9b\215\uff9b" +
    "\001\002\000\034\013\u02e9\021\ufea4\022\ufea4\027\u032e\031" +
    "\u0329\032\u032b\033\u032a\034\u02e7\044\u032c\045\u032d\064\ufea4" +
    "\066\ufea4\106\ufea4\001\002\000\020\013\u02e9\021\ufea2\022" +
    "\ufea2\034\u02e7\064\ufea2\066\ufea2\106\ufea2\001\002\000\014" +
    "\021\ufea3\022\ufea3\064\ufea3\066\ufea3\106\ufea3\001\002\000" +
    "\004\030\u036d\001\002\000\004\030\u036a\001\002\000\004" +
    "\030\u0367\001\002\000\004\011\u035a\001\002\000\004\011" +
    "\u034d\001\002\000\004\026\u0347\001\002\000\006\013\u02e9" +
    "\034\u02e7\001\002\000\014\021\ufea5\022\ufea5\064\ufea5\066" +
    "\ufea5\106\ufea5\001\002\000\026\021\ufea6\022\ufea6\027\u032e" +
    "\031\u0329\032\u032b\033\u032a\044\u0333\064\ufea6\066\ufea6\106" +
    "\ufea6\001\002\000\014\021\ufea7\022\ufea7\064\ufea7\066\ufea7" +
    "\106\ufea7\001\002\000\004\011\u0334\001\002\000\014\011" +
    "\055\013\062\036\061\205\060\206\056\001\002\000\004" +
    "\011\u0336\001\002\000\014\011\055\013\062\036\061\205" +
    "\060\206\056\001\002\000\004\012\u0338\001\002\000\004" +
    "\046\u0339\001\002\000\004\013\u033a\001\002\000\004\047" +
    "\u033b\001\002\000\004\011\u033c\001\002\000\014\011\055" +
    "\013\062\036\061\205\060\206\056\001\002\000\004\012" +
    "\u033e\001\002\000\004\012\u033f\001\002\000\020\013\ufe9f" +
    "\021\ufe9f\022\ufe9f\034\ufe9f\064\ufe9f\066\ufe9f\106\ufe9f\001" +
    "\002\000\020\013\ufea1\021\ufea1\022\ufea1\034\ufea1\064\ufea1" +
    "\066\ufea1\106\ufea1\001\002\000\004\035\u0342\001\002\000" +
    "\014\011\055\013\062\036\061\205\060\206\056\001\002" +
    "\000\004\037\u0344\001\002\000\014\011\055\013\062\036" +
    "\061\205\060\206\056\001\002\000\024\021\ufe99\022\ufe99" +
    "\027\u032e\031\u0329\032\u032b\033\u032a\064\ufe99\066\ufe99\106" +
    "\ufe99\001\002\000\014\021\ufe98\022\ufe98\064\ufe98\066\ufe98" +
    "\106\ufe98\001\002\000\016\013\ufe93\034\ufe93\040\u034a\041" +
    "\u0348\042\u034c\043\u034b\001\002\000\006\013\ufe8e\034\ufe8e" +
    "\001\002\000\006\013\ufe97\034\ufe97\001\002\000\006\013" +
    "\ufe8f\034\ufe8f\001\002\000\006\013\ufe8c\034\ufe8c\001\002" +
    "\000\006\013\ufe8d\034\ufe8d\001\002\000\014\011\055\013" +
    "\062\036\061\205\060\206\056\001\002\000\004\011\u034f" +
    "\001\002\000\014\011\055\013\062\036\061\205\060\206" +
    "\056\001\002\000\004\012\u0351\001\002\000\004\046\u0352" +
    "\001\002\000\004\013\u0353\001\002\000\004\047\u0354\001" +
    "\002\000\004\011\u0355\001\002\000\014\011\055\013\062" +
    "\036\061\205\060\206\056\001\002\000\004\012\u0357\001" +
    "\002\000\004\012\u0358\001\002\000\020\013\ufe9c\021\ufe9c" +
    "\022\ufe9c\034\ufe9c\064\ufe9c\066\ufe9c\106\ufe9c\001\002\000" +
    "\020\013\ufe9d\021\ufe9d\022\ufe9d\034\ufe9d\064\ufe9d\066\ufe9d" +
    "\106\ufe9d\001\002\000\014\011\055\013\062\036\061\205" +
    "\060\206\056\001\002\000\004\011\u035c\001\002\000\014" +
    "\011\055\013\062\036\061\205\060\206\056\001\002\000" +
    "\004\012\u035e\001\002\000\004\046\u035f\001\002\000\004" +
    "\013\u0360\001\002\000\004\047\u0361\001\002\000\004\011" +
    "\u0362\001\002\000\014\011\055\013\062\036\061\205\060" +
    "\206\056\001\002\000\004\012\u0364\001\002\000\004\012" +
    "\u0365\001\002\000\020\013\ufe9e\021\ufe9e\022\ufe9e\034\ufe9e" +
    "\064\ufe9e\066\ufe9e\106\ufe9e\001\002\000\020\013\ufea0\021" +
    "\ufea0\022\ufea0\034\ufea0\064\ufea0\066\ufea0\106\ufea0\001\002" +
    "\000\004\026\u0368\001\002\000\016\013\ufe90\034\ufe90\040" +
    "\u034a\041\u0348\042\u034c\043\u034b\001\002\000\006\013\ufe94" +
    "\034\ufe94\001\002\000\004\026\u036b\001\002\000\016\013" +
    "\ufe92\034\ufe92\040\u034a\041\u0348\042\u034c\043\u034b\001\002" +
    "\000\006\013\ufe96\034\ufe96\001\002\000\004\026\u036e\001" +
    "\002\000\016\013\ufe91\034\ufe91\040\u034a\041\u0348\042\u034c" +
    "\043\u034b\001\002\000\006\013\ufe95\034\ufe95\001\002\000" +
    "\006\005\u037f\025\u030c\001\002\000\040\005\ufe07\011\055" +
    "\013\062\020\ufe07\025\ufe07\036\061\054\u02e3\061\u02d9\107" +
    "\u02df\110\u02e4\171\u02e2\205\060\206\056\244\u02e0\245\u02dc" +
    "\001\002\000\006\005\u0374\025\u030c\001\002\000\014\021" +
    "\ufe07\022\ufe07\064\ufe07\066\ufe07\106\256\001\002\000\004" +
    "\025\u030c\001\002\000\014\021\ufe07\022\ufe07\064\ufe07\066" +
    "\ufe07\106\256\001\002\000\012\021\ufe07\022\ufe07\064\u0313" +
    "\066\ufe07\001\002\000\010\021\ufe07\022\ufe07\066\356\001" +
    "\002\000\006\021\073\022\075\001\002\000\046\002\uffa2" +
    "\003\uffa2\004\uffa2\021\uffa2\022\uffa2\024\uffa2\046\uffa2\050" +
    "\uffa2\061\uffa2\140\uffa2\145\uffa2\203\uffa2\204\uffa2\207\uffa2" +
    "\212\uffa2\213\uffa2\214\uffa2\215\uffa2\001\002\000\012\021" +
    "\ufe07\022\ufe07\064\u0313\066\ufe07\001\002\000\010\021\ufe07" +
    "\022\ufe07\066\356\001\002\000\006\021\073\022\075\001" +
    "\002\000\046\002\uff9c\003\uff9c\004\uff9c\021\uff9c\022\uff9c" +
    "\024\uff9c\046\uff9c\050\uff9c\061\uff9c\140\uff9c\145\uff9c\203" +
    "\uff9c\204\uff9c\207\uff9c\212\uff9c\213\uff9c\214\uff9c\215\uff9c" +
    "\001\002\000\014\021\ufe07\022\ufe07\064\ufe07\066\ufe07\106" +
    "\256\001\002\000\004\025\u030c\001\002\000\014\021\ufe07" +
    "\022\ufe07\064\ufe07\066\ufe07\106\256\001\002\000\012\021" +
    "\ufe07\022\ufe07\064\u0313\066\ufe07\001\002\000\010\021\ufe07" +
    "\022\ufe07\066\356\001\002\000\006\021\073\022\075\001" +
    "\002\000\046\002\uff9f\003\uff9f\004\uff9f\021\uff9f\022\uff9f" +
    "\024\uff9f\046\uff9f\050\uff9f\061\uff9f\140\uff9f\145\uff9f\203" +
    "\uff9f\204\uff9f\207\uff9f\212\uff9f\213\uff9f\214\uff9f\215\uff9f" +
    "\001\002\000\012\021\ufe07\022\ufe07\064\u0313\066\ufe07\001" +
    "\002\000\010\021\ufe07\022\ufe07\066\356\001\002\000\006" +
    "\021\073\022\075\001\002\000\046\002\uff99\003\uff99\004" +
    "\uff99\021\uff99\022\uff99\024\uff99\046\uff99\050\uff99\061\uff99" +
    "\140\uff99\145\uff99\203\uff99\204\uff99\207\uff99\212\uff99\213" +
    "\uff99\214\uff99\215\uff99\001\002\000\014\011\055\013\062" +
    "\036\061\205\060\206\056\001\002\000\004\012\u038b\001" +
    "\002\000\014\005\uff82\013\u02e9\020\uff82\025\uff82\034\u02e7" +
    "\001\002\000\010\005\uff83\020\uff83\025\uff83\001\002\000" +
    "\006\005\u039c\025\u030c\001\002\000\040\005\ufe07\011\055" +
    "\013\062\020\ufe07\025\ufe07\036\061\054\u02e3\061\u02d9\107" +
    "\u02df\110\u02e4\171\u02e2\205\060\206\056\244\u02e0\245\u02dc" +
    "\001\002\000\006\005\u0391\025\u030c\001\002\000\014\021" +
    "\ufe07\022\ufe07\064\ufe07\066\ufe07\106\256\001\002\000\004" +
    "\025\u030c\001\002\000\014\021\ufe07\022\ufe07\064\ufe07\066" +
    "\ufe07\106\256\001\002\000\012\021\ufe07\022\ufe07\064\u0313" +
    "\066\ufe07\001\002\000\010\021\ufe07\022\ufe07\066\356\001" +
    "\002\000\006\021\073\022\075\001\002\000\046\002\uffa3" +
    "\003\uffa3\004\uffa3\021\uffa3\022\uffa3\024\uffa3\046\uffa3\050" +
    "\uffa3\061\uffa3\140\uffa3\145\uffa3\203\uffa3\204\uffa3\207\uffa3" +
    "\212\uffa3\213\uffa3\214\uffa3\215\uffa3\001\002\000\012\021" +
    "\ufe07\022\ufe07\064\u0313\066\ufe07\001\002\000\010\021\ufe07" +
    "\022\ufe07\066\356\001\002\000\006\021\073\022\075\001" +
    "\002\000\046\002\uff9d\003\uff9d\004\uff9d\021\uff9d\022\uff9d" +
    "\024\uff9d\046\uff9d\050\uff9d\061\uff9d\140\uff9d\145\uff9d\203" +
    "\uff9d\204\uff9d\207\uff9d\212\uff9d\213\uff9d\214\uff9d\215\uff9d" +
    "\001\002\000\014\021\ufe07\022\ufe07\064\ufe07\066\ufe07\106" +
    "\256\001\002\000\004\025\u030c\001\002\000\014\021\ufe07" +
    "\022\ufe07\064\ufe07\066\ufe07\106\256\001\002\000\012\021" +
    "\ufe07\022\ufe07\064\u0313\066\ufe07\001\002\000\010\021\ufe07" +
    "\022\ufe07\066\356\001\002\000\006\021\073\022\075\001" +
    "\002\000\046\002\uffa0\003\uffa0\004\uffa0\021\uffa0\022\uffa0" +
    "\024\uffa0\046\uffa0\050\uffa0\061\uffa0\140\uffa0\145\uffa0\203" +
    "\uffa0\204\uffa0\207\uffa0\212\uffa0\213\uffa0\214\uffa0\215\uffa0" +
    "\001\002\000\012\021\ufe07\022\ufe07\064\u0313\066\ufe07\001" +
    "\002\000\010\021\ufe07\022\ufe07\066\356\001\002\000\006" +
    "\021\073\022\075\001\002\000\046\002\uff9a\003\uff9a\004" +
    "\uff9a\021\uff9a\022\uff9a\024\uff9a\046\uff9a\050\uff9a\061\uff9a" +
    "\140\uff9a\145\uff9a\203\uff9a\204\uff9a\207\uff9a\212\uff9a\213" +
    "\uff9a\214\uff9a\215\uff9a\001\002\000\014\021\ufe07\022\ufe07" +
    "\064\ufe07\066\ufe07\106\256\001\002\000\004\025\u030c\001" +
    "\002\000\014\021\ufe07\022\ufe07\064\ufe07\066\ufe07\106\256" +
    "\001\002\000\012\021\ufe07\022\ufe07\064\u0313\066\ufe07\001" +
    "\002\000\010\021\ufe07\022\ufe07\066\356\001\002\000\006" +
    "\021\073\022\075\001\002\000\046\002\uff9e\003\uff9e\004" +
    "\uff9e\021\uff9e\022\uff9e\024\uff9e\046\uff9e\050\uff9e\061\uff9e" +
    "\140\uff9e\145\uff9e\203\uff9e\204\uff9e\207\uff9e\212\uff9e\213" +
    "\uff9e\214\uff9e\215\uff9e\001\002\000\012\021\ufe07\022\ufe07" +
    "\064\u0313\066\ufe07\001\002\000\010\021\ufe07\022\ufe07\066" +
    "\356\001\002\000\006\021\073\022\075\001\002\000\046" +
    "\002\uff98\003\uff98\004\uff98\021\uff98\022\uff98\024\uff98\046" +
    "\uff98\050\uff98\061\uff98\140\uff98\145\uff98\203\uff98\204\uff98" +
    "\207\uff98\212\uff98\213\uff98\214\uff98\215\uff98\001\002\000" +
    "\006\005\uff90\025\uff90\001\002\000\004\002\ufff2\001\002" +
    "\000\006\021\073\022\075\001\002\000\014\011\055\013" +
    "\062\036\061\205\060\206\056\001\002\000\020\011\055" +
    "\013\062\021\073\022\075\036\061\205\060\206\056\001" +
    "\002\000\040\002\ufe60\003\ufe60\004\ufe60\024\ufe60\050\ufe60" +
    "\061\ufe60\140\ufe60\145\ufe60\203\ufe60\204\ufe60\207\ufe60\212" +
    "\ufe60\213\ufe60\214\ufe60\215\ufe60\001\002\000\006\021\073" +
    "\022\075\001\002\000\040\002\ufe62\003\ufe62\004\ufe62\024" +
    "\ufe62\050\ufe62\061\ufe62\140\ufe62\145\ufe62\203\ufe62\204\ufe62" +
    "\207\ufe62\212\ufe62\213\ufe62\214\ufe62\215\ufe62\001\002\000" +
    "\006\021\073\022\075\001\002\000\040\002\ufe63\003\ufe63" +
    "\004\ufe63\024\ufe63\050\ufe63\061\ufe63\140\ufe63\145\ufe63\203" +
    "\ufe63\204\ufe63\207\ufe63\212\ufe63\213\ufe63\214\ufe63\215\ufe63" +
    "\001\002\000\040\002\ufe61\003\ufe61\004\ufe61\024\ufe61\050" +
    "\ufe61\061\ufe61\140\ufe61\145\ufe61\203\ufe61\204\ufe61\207\ufe61" +
    "\212\ufe61\213\ufe61\214\ufe61\215\ufe61\001\002\000\004\002" +
    "\uffee\001\002\000\004\002\uffeb\001\002\000\004\002\ufff1" +
    "\001\002\000\006\013\u041d\062\u041b\001\002\000\006\013" +
    "\u0412\142\u0411\001\002\000\014\011\055\013\062\036\061" +
    "\205\060\206\056\001\002\000\014\011\055\013\062\036" +
    "\061\205\060\206\056\001\002\000\004\013\u03c4\001\002" +
    "\000\006\021\073\022\075\001\002\000\040\002\ufebd\003" +
    "\ufebd\004\ufebd\024\ufebd\050\ufebd\061\ufebd\140\ufebd\145\ufebd" +
    "\203\ufebd\204\ufebd\207\ufebd\212\ufebd\213\ufebd\214\ufebd\215" +
    "\ufebd\001\002\000\014\021\073\022\075\143\u03c9\145\u03cb" +
    "\203\u03c8\001\002\000\076\016\u03f7\021\073\022\075\101" +
    "\u03f4\112\u0110\131\u03f3\134\u011d\146\u0115\147\u0111\150\u0119" +
    "\151\u011e\152\u011c\153\u011b\154\u0116\155\u0122\156\u0113\157" +
    "\u0126\160\u0120\161\u0124\162\u0117\163\u011a\164\u0125\165\u0114" +
    "\166\u010f\167\u0128\170\u0118\177\u0112\201\u0123\202\u011f\246" +
    "\u0127\001\002\000\004\144\u03f1\001\002\000\006\013\u03d5" +
    "\111\u03d4\001\002\000\040\002\ufed9\003\ufed9\004\ufed9\024" +
    "\ufed9\050\ufed9\061\ufed9\140\ufed9\145\ufed9\203\ufed9\204\ufed9" +
    "\207\ufed9\212\ufed9\213\ufed9\214\ufed9\215\ufed9\001\002\000" +
    "\010\013\u03ce\111\u03cc\144\u03cd\001\002\000\004\013\u03d2" +
    "\001\002\000\004\013\u03d0\001\002\000\006\021\073\022" +
    "\075\001\002\000\040\002\ufed3\003\ufed3\004\ufed3\024\ufed3" +
    "\050\ufed3\061\ufed3\140\ufed3\145\ufed3\203\ufed3\204\ufed3\207" +
    "\ufed3\212\ufed3\213\ufed3\214\ufed3\215\ufed3\001\002\000\006" +
    "\021\073\022\075\001\002\000\040\002\ufed4\003\ufed4\004" +
    "\ufed4\024\ufed4\050\ufed4\061\ufed4\140\ufed4\145\ufed4\203\ufed4" +
    "\204\ufed4\207\ufed4\212\ufed4\213\ufed4\214\ufed4\215\ufed4\001" +
    "\002\000\006\021\073\022\075\001\002\000\040\002\ufed2" +
    "\003\ufed2\004\ufed2\024\ufed2\050\ufed2\061\ufed2\140\ufed2\145" +
    "\ufed2\203\ufed2\204\ufed2\207\ufed2\212\ufed2\213\ufed2\214\ufed2" +
    "\215\ufed2\001\002\000\004\013\u03ed\001\002\000\064\112" +
    "\u0110\134\u011d\146\u0115\147\u0111\150\u0119\151\u011e\152\u011c" +
    "\153\u011b\154\u0116\155\u0122\156\u0113\157\u0126\160\u0120\161" +
    "\u0124\162\u0117\163\u011a\164\u0125\165\u0114\166\u010f\167\u0128" +
    "\170\u0118\177\u0112\201\u0123\202\u011f\246\u0127\001\002\000" +
    "\006\016\u03d9\101\u03d7\001\002\000\004\016\u03ec\001\002" +
    "\000\010\021\073\022\075\111\u03da\001\002\000\010\021" +
    "\ufec0\022\ufec0\111\ufec0\001\002\000\004\013\u03dc\001\002" +
    "\000\040\002\ufed8\003\ufed8\004\ufed8\024\ufed8\050\ufed8\061" +
    "\ufed8\140\ufed8\145\ufed8\203\ufed8\204\ufed8\207\ufed8\212\ufed8" +
    "\213\ufed8\214\ufed8\215\ufed8\001\002\000\010\113\u03de\117" +
    "\u03e0\120\u03dd\001\002\000\004\114\u03e8\001\002\000\004" +
    "\114\u03e5\001\002\000\006\021\073\022\075\001\002\000" +
    "\012\021\ufec6\022\ufec6\115\u03e3\116\u03e2\001\002\000\006" +
    "\021\ufec1\022\ufec1\001\002\000\006\021\ufec2\022\ufec2\001" +
    "\002\000\006\021\ufec3\022\ufec3\001\002\000\040\002\ufed7" +
    "\003\ufed7\004\ufed7\024\ufed7\050\ufed7\061\ufed7\140\ufed7\145" +
    "\ufed7\203\ufed7\204\ufed7\207\ufed7\212\ufed7\213\ufed7\214\ufed7" +
    "\215\ufed7\001\002\000\012\021\ufec7\022\ufec7\115\u03e6\116" +
    "\u03e7\001\002\000\006\021\ufec5\022\ufec5\001\002\000\006" +
    "\021\ufec4\022\ufec4\001\002\000\004\011\u03e9\001\002\000" +
    "\004\013\u03ea\001\002\000\004\012\u03eb\001\002\000\006" +
    "\021\ufebe\022\ufebe\001\002\000\010\021\ufebf\022\ufebf\111" +
    "\ufebf\001\002\000\014\021\073\022\075\113\u03de\117\u03e0" +
    "\120\u03dd\001\002\000\006\021\073\022\075\001\002\000" +
    "\040\002\ufed6\003\ufed6\004\ufed6\024\ufed6\050\ufed6\061\ufed6" +
    "\140\ufed6\145\ufed6\203\ufed6\204\ufed6\207\ufed6\212\ufed6\213" +
    "\ufed6\214\ufed6\215\ufed6\001\002\000\040\002\ufed5\003\ufed5" +
    "\004\ufed5\024\ufed5\050\ufed5\061\ufed5\140\ufed5\145\ufed5\203" +
    "\ufed5\204\ufed5\207\ufed5\212\ufed5\213\ufed5\214\ufed5\215\ufed5" +
    "\001\002\000\004\013\u03f2\001\002\000\100\012\ufed1\016" +
    "\ufed1\021\ufed1\022\ufed1\101\ufed1\112\ufed1\131\ufed1\134\ufed1" +
    "\146\ufed1\147\ufed1\150\ufed1\151\ufed1\152\ufed1\153\ufed1\154" +
    "\ufed1\155\ufed1\156\ufed1\157\ufed1\160\ufed1\161\ufed1\162\ufed1" +
    "\163\ufed1\164\ufed1\165\ufed1\166\ufed1\167\ufed1\170\ufed1\177" +
    "\ufed1\201\ufed1\202\ufed1\246\ufed1\001\002\000\004\013\u0401" +
    "\001\002\000\004\016\u0400\001\002\000\006\021\073\022" +
    "\075\001\002\000\004\013\u03f9\001\002\000\006\021\ufec9" +
    "\022\ufec9\001\002\000\040\002\ufeda\003\ufeda\004\ufeda\024" +
    "\ufeda\050\ufeda\061\ufeda\140\ufeda\145\ufeda\203\ufeda\204\ufeda" +
    "\207\ufeda\212\ufeda\213\ufeda\214\ufeda\215\ufeda\001\002\000" +
    "\010\021\ufeca\022\ufeca\131\u03fa\001\002\000\004\013\u03fb" +
    "\001\002\000\012\016\u03fd\021\ufece\022\ufece\101\u03fc\001" +
    "\002\000\004\016\u03fe\001\002\000\006\021\ufed0\022\ufed0" +
    "\001\002\000\006\021\ufecf\022\ufecf\001\002\000\040\002" +
    "\ufedb\003\ufedb\004\ufedb\024\ufedb\050\ufedb\061\ufedb\140\ufedb" +
    "\145\ufedb\203\ufedb\204\ufedb\207\ufedb\212\ufedb\213\ufedb\214" +
    "\ufedb\215\ufedb\001\002\000\006\021\ufec8\022\ufec8\001\002" +
    "\000\012\016\u0403\021\ufecb\022\ufecb\101\u0402\001\002\000" +
    "\004\016\u0404\001\002\000\006\021\ufecd\022\ufecd\001\002" +
    "\000\006\021\ufecc\022\ufecc\001\002\000\006\011\u0408\034" +
    "\u0406\001\002\000\004\061\024\001\002\000\004\034\u040b" +
    "\001\002\000\004\203\u03c8\001\002\000\004\012\u040a\001" +
    "\002\000\004\034\ufeb7\001\002\000\004\061\024\001\002" +
    "\000\006\021\073\022\075\001\002\000\040\002\ufeb8\003" +
    "\ufeb8\004\ufeb8\024\ufeb8\050\ufeb8\061\ufeb8\140\ufeb8\145\ufeb8" +
    "\203\ufeb8\204\ufeb8\207\ufeb8\212\ufeb8\213\ufeb8\214\ufeb8\215" +
    "\ufeb8\001\002\000\006\021\073\022\075\001\002\000\040" +
    "\002\ufeb9\003\ufeb9\004\ufeb9\024\ufeb9\050\ufeb9\061\ufeb9\140" +
    "\ufeb9\145\ufeb9\203\ufeb9\204\ufeb9\207\ufeb9\212\ufeb9\213\ufeb9" +
    "\214\ufeb9\215\ufeb9\001\002\000\006\131\u0413\141\u0415\001" +
    "\002\000\006\131\ufede\141\ufede\001\002\000\006\131\ufedf" +
    "\141\ufedf\001\002\000\004\013\u041a\001\002\000\006\021" +
    "\073\022\075\001\002\000\004\130\u0416\001\002\000\004" +
    "\037\u0417\001\002\000\004\013\u0418\001\002\000\006\021" +
    "\ufedd\022\ufedd\001\002\000\040\002\ufee0\003\ufee0\004\ufee0" +
    "\024\ufee0\050\ufee0\061\ufee0\140\ufee0\145\ufee0\203\ufee0\204" +
    "\ufee0\207\ufee0\212\ufee0\213\ufee0\214\ufee0\215\ufee0\001\002" +
    "\000\006\021\ufedc\022\ufedc\001\002\000\004\035\ufeba\001" +
    "\002\000\004\035\u041e\001\002\000\004\035\ufebb\001\002" +
    "\000\014\011\055\013\062\036\061\205\060\206\056\001" +
    "\002\000\006\021\073\022\075\001\002\000\040\002\ufebc" +
    "\003\ufebc\004\ufebc\024\ufebc\050\ufebc\061\ufebc\140\ufebc\145" +
    "\ufebc\203\ufebc\204\ufebc\207\ufebc\212\ufebc\213\ufebc\214\ufebc" +
    "\215\ufebc\001\002\000\004\025\u0430\001\002\000\040\002" +
    "\uffc4\003\uffc4\004\uffc4\024\uffc4\050\uffc4\061\uffc4\140\uffc4" +
    "\145\uffc4\203\uffc4\204\uffc4\207\uffc4\212\uffc4\213\uffc4\214" +
    "\uffc4\215\uffc4\001\002\000\014\011\055\013\062\036\061" +
    "\205\060\206\056\001\002\000\012\014\u0425\021\073\022" +
    "\075\025\u030c\001\002\000\010\021\073\022\075\025\u030c" +
    "\001\002\000\040\002\uffc5\003\uffc5\004\uffc5\024\uffc5\050" +
    "\uffc5\061\uffc5\140\uffc5\145\uffc5\203\uffc5\204\uffc5\207\uffc5" +
    "\212\uffc5\213\uffc5\214\uffc5\215\uffc5\001\002\000\010\021" +
    "\073\022\075\106\256\001\002\000\040\002\uffc9\003\uffc9" +
    "\004\uffc9\024\uffc9\050\uffc9\061\uffc9\140\uffc9\145\uffc9\203" +
    "\uffc9\204\uffc9\207\uffc9\212\uffc9\213\uffc9\214\uffc9\215\uffc9" +
    "\001\002\000\006\021\073\022\075\001\002\000\040\002" +
    "\uffcd\003\uffcd\004\uffcd\024\uffcd\050\uffcd\061\uffcd\140\uffcd" +
    "\145\uffcd\203\uffcd\204\uffcd\207\uffcd\212\uffcd\213\uffcd\214" +
    "\uffcd\215\uffcd\001\002\000\040\002\uffc7\003\uffc7\004\uffc7" +
    "\024\uffc7\050\uffc7\061\uffc7\140\uffc7\145\uffc7\203\uffc7\204" +
    "\uffc7\207\uffc7\212\uffc7\213\uffc7\214\uffc7\215\uffc7\001\002" +
    "\000\010\021\073\022\075\106\256\001\002\000\040\002" +
    "\uffcb\003\uffcb\004\uffcb\024\uffcb\050\uffcb\061\uffcb\140\uffcb" +
    "\145\uffcb\203\uffcb\204\uffcb\207\uffcb\212\uffcb\213\uffcb\214" +
    "\uffcb\215\uffcb\001\002\000\006\021\073\022\075\001\002" +
    "\000\040\002\uffcf\003\uffcf\004\uffcf\024\uffcf\050\uffcf\061" +
    "\uffcf\140\uffcf\145\uffcf\203\uffcf\204\uffcf\207\uffcf\212\uffcf" +
    "\213\uffcf\214\uffcf\215\uffcf\001\002\000\014\011\055\013" +
    "\062\036\061\205\060\206\056\001\002\000\012\014\u0432" +
    "\021\073\022\075\025\u030c\001\002\000\010\021\073\022" +
    "\075\025\u030c\001\002\000\040\002\uffc6\003\uffc6\004\uffc6" +
    "\024\uffc6\050\uffc6\061\uffc6\140\uffc6\145\uffc6\203\uffc6\204" +
    "\uffc6\207\uffc6\212\uffc6\213\uffc6\214\uffc6\215\uffc6\001\002" +
    "\000\010\021\073\022\075\106\256\001\002\000\040\002" +
    "\uffca\003\uffca\004\uffca\024\uffca\050\uffca\061\uffca\140\uffca" +
    "\145\uffca\203\uffca\204\uffca\207\uffca\212\uffca\213\uffca\214" +
    "\uffca\215\uffca\001\002\000\006\021\073\022\075\001\002" +
    "\000\040\002\uffce\003\uffce\004\uffce\024\uffce\050\uffce\061" +
    "\uffce\140\uffce\145\uffce\203\uffce\204\uffce\207\uffce\212\uffce" +
    "\213\uffce\214\uffce\215\uffce\001\002\000\040\002\uffc8\003" +
    "\uffc8\004\uffc8\024\uffc8\050\uffc8\061\uffc8\140\uffc8\145\uffc8" +
    "\203\uffc8\204\uffc8\207\uffc8\212\uffc8\213\uffc8\214\uffc8\215" +
    "\uffc8\001\002\000\010\021\073\022\075\106\256\001\002" +
    "\000\040\002\uffcc\003\uffcc\004\uffcc\024\uffcc\050\uffcc\061" +
    "\uffcc\140\uffcc\145\uffcc\203\uffcc\204\uffcc\207\uffcc\212\uffcc" +
    "\213\uffcc\214\uffcc\215\uffcc\001\002\000\006\021\073\022" +
    "\075\001\002\000\040\002\uffd0\003\uffd0\004\uffd0\024\uffd0" +
    "\050\uffd0\061\uffd0\140\uffd0\145\uffd0\203\uffd0\204\uffd0\207" +
    "\uffd0\212\uffd0\213\uffd0\214\uffd0\215\uffd0\001\002\000\004" +
    "\002\ufff8\001\002\000\004\002\uffe9\001\002\000\014\011" +
    "\055\013\062\036\061\205\060\206\056\001\002\000\006" +
    "\021\073\022\075\001\002\000\004\051\u0442\001\002\000" +
    "\014\011\055\013\062\036\061\205\060\206\056\001\002" +
    "\000\014\014\u0444\021\073\022\075\025\u030c\106\256\001" +
    "\002\000\012\021\073\022\075\025\u030c\106\256\001\002" +
    "\000\010\021\073\022\075\106\256\001\002\000\040\002" +
    "\uffb4\003\uffb4\004\uffb4\024\uffb4\050\uffb4\061\uffb4\140\uffb4" +
    "\145\uffb4\203\uffb4\204\uffb4\207\uffb4\212\uffb4\213\uffb4\214" +
    "\uffb4\215\uffb4\001\002\000\006\021\073\022\075\001\002" +
    "\000\040\002\uffb5\003\uffb5\004\uffb5\024\uffb5\050\uffb5\061" +
    "\uffb5\140\uffb5\145\uffb5\203\uffb5\204\uffb5\207\uffb5\212\uffb5" +
    "\213\uffb5\214\uffb5\215\uffb5\001\002\000\040\002\uffbc\003" +
    "\uffbc\004\uffbc\024\uffbc\050\uffbc\061\uffbc\140\uffbc\145\uffbc" +
    "\203\uffbc\204\uffbc\207\uffbc\212\uffbc\213\uffbc\214\uffbc\215" +
    "\uffbc\001\002\000\006\021\073\022\075\001\002\000\040" +
    "\002\uffbd\003\uffbd\004\uffbd\024\uffbd\050\uffbd\061\uffbd\140" +
    "\uffbd\145\uffbd\203\uffbd\204\uffbd\207\uffbd\212\uffbd\213\uffbd" +
    "\214\uffbd\215\uffbd\001\002\000\040\002\uffb8\003\uffb8\004" +
    "\uffb8\024\uffb8\050\uffb8\061\uffb8\140\uffb8\145\uffb8\203\uffb8" +
    "\204\uffb8\207\uffb8\212\uffb8\213\uffb8\214\uffb8\215\uffb8\001" +
    "\002\000\010\021\073\022\075\106\256\001\002\000\006" +
    "\021\073\022\075\001\002\000\040\002\uffb9\003\uffb9\004" +
    "\uffb9\024\uffb9\050\uffb9\061\uffb9\140\uffb9\145\uffb9\203\uffb9" +
    "\204\uffb9\207\uffb9\212\uffb9\213\uffb9\214\uffb9\215\uffb9\001" +
    "\002\000\040\002\uffc0\003\uffc0\004\uffc0\024\uffc0\050\uffc0" +
    "\061\uffc0\140\uffc0\145\uffc0\203\uffc0\204\uffc0\207\uffc0\212" +
    "\uffc0\213\uffc0\214\uffc0\215\uffc0\001\002\000\006\021\073" +
    "\022\075\001\002\000\040\002\uffc1\003\uffc1\004\uffc1\024" +
    "\uffc1\050\uffc1\061\uffc1\140\uffc1\145\uffc1\203\uffc1\204\uffc1" +
    "\207\uffc1\212\uffc1\213\uffc1\214\uffc1\215\uffc1\001\002\000" +
    "\004\037\u0455\001\002\000\014\014\uffb2\021\uffb2\022\uffb2" +
    "\025\uffb2\106\uffb2\001\002\000\030\011\u0459\013\062\015" +
    "\u0458\016\u0457\036\061\057\u024b\060\u024d\205\060\206\056" +
    "\247\u0250\250\u024e\001\002\000\030\014\uffac\020\u046d\021" +
    "\uffac\022\uffac\025\uffac\052\u0461\053\u0460\054\u0463\055\u045e" +
    "\056\u0462\106\uffac\001\002\000\016\014\uffad\020\u046b\021" +
    "\uffad\022\uffad\025\uffad\106\uffad\001\002\000\016\014\uffae" +
    "\020\u0469\021\uffae\022\uffae\025\uffae\106\uffae\001\002\000" +
    "\024\011\u0459\013\062\036\061\057\u024b\060\u024d\205\060" +
    "\206\056\247\u0250\250\u024e\001\002\000\032\012\uffab\014" +
    "\uffab\020\uffab\021\uffab\022\uffab\025\uffab\052\uffab\053\uffab" +
    "\054\uffab\055\uffab\056\uffab\106\uffab\001\002\000\032\012" +
    "\uffaa\014\uffaa\020\uffaa\021\uffaa\022\uffaa\025\uffaa\052\uffaa" +
    "\053\uffaa\054\uffaa\055\uffaa\056\uffaa\106\uffaa\001\002\000" +
    "\016\012\u045f\052\u0461\053\u0460\054\u0463\055\u045e\056\u0462" +
    "\001\002\000\016\012\102\052\uffab\053\uffab\054\uffab\055" +
    "\uffab\056\uffab\001\002\000\024\011\u0459\013\062\036\061" +
    "\057\u024b\060\u024d\205\060\206\056\247\u0250\250\u024e\001" +
    "\002\000\032\012\uffa4\014\uffa4\020\uffa4\021\uffa4\022\uffa4" +
    "\025\uffa4\052\uffa4\053\uffa4\054\uffa4\055\uffa4\056\uffa4\106" +
    "\uffa4\001\002\000\024\011\u0459\013\062\036\061\057\u024b" +
    "\060\u024d\205\060\206\056\247\u0250\250\u024e\001\002\000" +
    "\024\011\u0459\013\062\036\061\057\u024b\060\u024d\205\060" +
    "\206\056\247\u0250\250\u024e\001\002\000\024\011\u0459\013" +
    "\062\036\061\057\u024b\060\u024d\205\060\206\056\247\u0250" +
    "\250\u024e\001\002\000\024\011\u0459\013\062\036\061\057" +
    "\u024b\060\u024d\205\060\206\056\247\u0250\250\u024e\001\002" +
    "\000\032\012\uffa7\014\uffa7\020\uffa7\021\uffa7\022\uffa7\025" +
    "\uffa7\052\uffa7\053\uffa7\054\uffa7\055\uffa7\056\uffa7\106\uffa7" +
    "\001\002\000\032\012\uffa5\014\uffa5\020\uffa5\021\uffa5\022" +
    "\uffa5\025\uffa5\052\uffa5\053\uffa5\054\uffa5\055\uffa5\056\uffa5" +
    "\106\uffa5\001\002\000\032\012\uffa9\014\uffa9\020\uffa9\021" +
    "\uffa9\022\uffa9\025\uffa9\052\uffa9\053\uffa9\054\u0463\055\u045e" +
    "\056\u0462\106\uffa9\001\002\000\032\012\uffa8\014\uffa8\020" +
    "\uffa8\021\uffa8\022\uffa8\025\uffa8\052\uffa8\053\uffa8\054\u0463" +
    "\055\u045e\056\u0462\106\uffa8\001\002\000\032\012\uffa6\014" +
    "\uffa6\020\uffa6\021\uffa6\022\uffa6\025\uffa6\052\uffa6\053\uffa6" +
    "\054\uffa6\055\uffa6\056\uffa6\106\uffa6\001\002\000\014\011" +
    "\055\013\062\036\061\205\060\206\056\001\002\000\014" +
    "\014\uffb1\021\uffb1\022\uffb1\025\uffb1\106\uffb1\001\002\000" +
    "\014\011\055\013\062\036\061\205\060\206\056\001\002" +
    "\000\014\014\uffb0\021\uffb0\022\uffb0\025\uffb0\106\uffb0\001" +
    "\002\000\014\011\055\013\062\036\061\205\060\206\056" +
    "\001\002\000\014\014\uffaf\021\uffaf\022\uffaf\025\uffaf\106" +
    "\uffaf\001\002\000\040\002\uffb3\003\uffb3\004\uffb3\024\uffb3" +
    "\050\uffb3\061\uffb3\140\uffb3\145\uffb3\203\uffb3\204\uffb3\207" +
    "\uffb3\212\uffb3\213\uffb3\214\uffb3\215\uffb3\001\002\000\004" +
    "\051\u0442\001\002\000\014\014\u0472\021\073\022\075\025" +
    "\u030c\106\256\001\002\000\012\021\073\022\075\025\u030c" +
    "\106\256\001\002\000\010\021\073\022\075\106\256\001" +
    "\002\000\040\002\uffb6\003\uffb6\004\uffb6\024\uffb6\050\uffb6" +
    "\061\uffb6\140\uffb6\145\uffb6\203\uffb6\204\uffb6\207\uffb6\212" +
    "\uffb6\213\uffb6\214\uffb6\215\uffb6\001\002\000\006\021\073" +
    "\022\075\001\002\000\040\002\uffb7\003\uffb7\004\uffb7\024" +
    "\uffb7\050\uffb7\061\uffb7\140\uffb7\145\uffb7\203\uffb7\204\uffb7" +
    "\207\uffb7\212\uffb7\213\uffb7\214\uffb7\215\uffb7\001\002\000" +
    "\040\002\uffbe\003\uffbe\004\uffbe\024\uffbe\050\uffbe\061\uffbe" +
    "\140\uffbe\145\uffbe\203\uffbe\204\uffbe\207\uffbe\212\uffbe\213" +
    "\uffbe\214\uffbe\215\uffbe\001\002\000\006\021\073\022\075" +
    "\001\002\000\040\002\uffbf\003\uffbf\004\uffbf\024\uffbf\050" +
    "\uffbf\061\uffbf\140\uffbf\145\uffbf\203\uffbf\204\uffbf\207\uffbf" +
    "\212\uffbf\213\uffbf\214\uffbf\215\uffbf\001\002\000\010\021" +
    "\073\022\075\106\256\001\002\000\040\002\uffba\003\uffba" +
    "\004\uffba\024\uffba\050\uffba\061\uffba\140\uffba\145\uffba\203" +
    "\uffba\204\uffba\207\uffba\212\uffba\213\uffba\214\uffba\215\uffba" +
    "\001\002\000\006\021\073\022\075\001\002\000\040\002" +
    "\uffbb\003\uffbb\004\uffbb\024\uffbb\050\uffbb\061\uffbb\140\uffbb" +
    "\145\uffbb\203\uffbb\204\uffbb\207\uffbb\212\uffbb\213\uffbb\214" +
    "\uffbb\215\uffbb\001\002\000\040\002\uffc2\003\uffc2\004\uffc2" +
    "\024\uffc2\050\uffc2\061\uffc2\140\uffc2\145\uffc2\203\uffc2\204" +
    "\uffc2\207\uffc2\212\uffc2\213\uffc2\214\uffc2\215\uffc2\001\002" +
    "\000\006\021\073\022\075\001\002\000\040\002\uffc3\003" +
    "\uffc3\004\uffc3\024\uffc3\050\uffc3\061\uffc3\140\uffc3\145\uffc3" +
    "\203\uffc3\204\uffc3\207\uffc3\212\uffc3\213\uffc3\214\uffc3\215" +
    "\uffc3\001\002\000\004\002\001\001\002\000\014\011\055" +
    "\013\062\036\061\205\060\206\056\001\002\000\006\021" +
    "\073\022\075\001\002\000\040\002\ufea8\003\ufea8\004\ufea8" +
    "\024\ufea8\050\ufea8\061\ufea8\140\ufea8\145\ufea8\203\ufea8\204" +
    "\ufea8\207\ufea8\212\ufea8\213\ufea8\214\ufea8\215\ufea8\001\002" +
    "\000\004\002\ufffd\001\002\000\004\002\ufffa\001\002\000" +
    "\004\002\ufff9\001\002\000\006\021\073\022\075\001\002" +
    "\000\040\002\ufe5b\003\ufe5b\004\ufe5b\024\ufe5b\050\ufe5b\061" +
    "\ufe5b\140\ufe5b\145\ufe5b\203\ufe5b\204\ufe5b\207\ufe5b\212\ufe5b" +
    "\213\ufe5b\214\ufe5b\215\ufe5b\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0487\000\064\002\010\003\050\004\006\012\030\021" +
    "\043\026\031\027\025\030\005\051\004\125\013\137\026" +
    "\140\044\142\024\145\035\146\022\147\016\150\032\152" +
    "\042\153\020\154\034\155\047\156\045\217\036\220\012" +
    "\221\017\001\001\000\004\011\u0487\001\001\000\062\003" +
    "\050\004\006\012\030\021\043\026\u0486\027\025\030\005" +
    "\051\004\125\013\137\026\140\044\142\024\145\035\146" +
    "\022\147\016\150\032\152\042\153\020\154\034\155\047" +
    "\156\045\217\036\220\012\221\017\001\001\000\062\003" +
    "\050\004\006\012\030\021\043\026\u0485\027\025\030\005" +
    "\051\004\125\013\137\026\140\044\142\024\145\035\146" +
    "\022\147\016\150\032\152\042\153\020\154\034\155\047" +
    "\156\045\217\036\220\012\221\017\001\001\000\062\003" +
    "\050\004\006\012\030\021\043\026\u0484\027\025\030\005" +
    "\051\004\125\013\137\026\140\044\142\024\145\035\146" +
    "\022\147\016\150\032\152\042\153\020\154\034\155\047" +
    "\156\045\217\036\220\012\221\017\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\u043e\011\u0440\001\001" +
    "\000\062\003\050\004\006\012\030\021\043\026\u043d\027" +
    "\025\030\005\051\004\125\013\137\026\140\044\142\024" +
    "\145\035\146\022\147\016\150\032\152\042\153\020\154" +
    "\034\155\047\156\045\217\036\220\012\221\017\001\001" +
    "\000\062\003\050\004\006\012\030\021\043\026\u043c\027" +
    "\025\030\005\051\004\125\013\137\026\140\044\142\024" +
    "\145\035\146\022\147\016\150\032\152\042\153\020\154" +
    "\034\155\047\156\045\217\036\220\012\221\017\001\001" +
    "\000\004\007\u0420\001\001\000\002\001\001\000\062\003" +
    "\050\004\006\012\030\021\043\026\u03bd\027\025\030\005" +
    "\051\004\125\013\137\026\140\044\142\024\145\035\146" +
    "\022\147\016\150\032\152\042\153\020\154\034\155\047" +
    "\156\045\217\036\220\012\221\017\001\001\000\062\003" +
    "\050\004\006\012\030\021\043\026\u03bc\027\025\030\005" +
    "\051\004\125\013\137\026\140\044\142\024\145\035\146" +
    "\022\147\016\150\032\152\042\153\020\154\034\155\047" +
    "\156\045\217\036\220\012\221\017\001\001\000\062\003" +
    "\050\004\006\012\030\021\043\026\u03bb\027\025\030\005" +
    "\051\004\125\013\137\026\140\044\142\024\145\035\146" +
    "\022\147\016\150\032\152\042\153\020\154\034\155\047" +
    "\156\045\217\036\220\012\221\017\001\001\000\004\011" +
    "\u03b2\001\001\000\062\003\050\004\006\012\030\021\043" +
    "\026\u03b1\027\025\030\005\051\004\125\013\137\026\140" +
    "\044\142\024\145\035\146\022\147\016\150\032\152\042" +
    "\153\020\154\034\155\047\156\045\217\036\220\012\221" +
    "\017\001\001\000\014\007\u02dd\011\u02e5\027\u02e0\044\u02d9" +
    "\047\u02e4\001\001\000\062\003\050\004\006\012\030\021" +
    "\043\026\u02d7\027\025\030\005\051\004\125\013\137\026" +
    "\140\044\142\024\145\035\146\022\147\016\150\032\152" +
    "\042\153\020\154\034\155\047\156\045\217\036\220\012" +
    "\221\017\001\001\000\002\001\001\000\062\003\050\004" +
    "\006\012\030\021\043\026\u02d6\027\025\030\005\051\004" +
    "\125\013\137\026\140\044\142\024\145\035\146\022\147" +
    "\016\150\032\152\042\153\020\154\034\155\047\156\045" +
    "\217\036\220\012\221\017\001\001\000\004\006\u02d5\001" +
    "\001\000\062\003\050\004\006\012\030\021\043\026\u02d4" +
    "\027\025\030\005\051\004\125\013\137\026\140\044\142" +
    "\024\145\035\146\022\147\016\150\032\152\042\153\020" +
    "\154\034\155\047\156\045\217\036\220\012\221\017\001" +
    "\001\000\002\001\001\000\062\003\050\004\006\012\030" +
    "\021\043\026\u02d3\027\025\030\005\051\004\125\013\137" +
    "\026\140\044\142\024\145\035\146\022\147\016\150\032" +
    "\152\042\153\020\154\034\155\047\156\045\217\036\220" +
    "\012\221\017\001\001\000\004\011\u02ab\001\001\000\062" +
    "\003\050\004\006\012\030\021\043\026\u02aa\027\025\030" +
    "\005\051\004\125\013\137\026\140\044\142\024\145\035" +
    "\146\022\147\016\150\032\152\042\153\020\154\034\155" +
    "\047\156\045\217\036\220\012\221\017\001\001\000\062" +
    "\003\050\004\006\012\030\021\043\026\u02a9\027\025\030" +
    "\005\051\004\125\013\137\026\140\044\142\024\145\035" +
    "\146\022\147\016\150\032\152\042\153\020\154\034\155" +
    "\047\156\045\217\036\220\012\221\017\001\001\000\062" +
    "\003\050\004\006\012\030\021\043\026\u02a8\027\025\030" +
    "\005\051\004\125\013\137\026\140\044\142\024\145\035" +
    "\146\022\147\016\150\032\152\042\153\020\154\034\155" +
    "\047\156\045\217\036\220\012\221\017\001\001\000\004" +
    "\007\u023b\001\001\000\026\027\227\052\231\053\235\054" +
    "\230\075\221\076\234\077\236\105\222\170\223\171\220" +
    "\001\001\000\002\001\001\000\062\003\050\004\006\012" +
    "\030\021\043\026\121\027\025\030\005\051\004\125\013" +
    "\137\026\140\044\142\024\145\035\146\022\147\016\150" +
    "\032\152\042\153\020\154\034\155\047\156\045\217\036" +
    "\220\012\221\017\001\001\000\062\003\050\004\006\012" +
    "\030\021\043\026\120\027\025\030\005\051\004\125\013" +
    "\137\026\140\044\142\024\145\035\146\022\147\016\150" +
    "\032\152\042\153\020\154\034\155\047\156\045\217\036" +
    "\220\012\221\017\001\001\000\062\003\050\004\006\012" +
    "\030\021\043\026\117\027\025\030\005\051\004\125\013" +
    "\137\026\140\044\142\024\145\035\146\022\147\016\150" +
    "\032\152\042\153\020\154\034\155\047\156\045\217\036" +
    "\220\012\221\017\001\001\000\062\003\050\004\006\012" +
    "\030\021\043\026\116\027\025\030\005\051\004\125\013" +
    "\137\026\140\044\142\024\145\035\146\022\147\016\150" +
    "\032\152\042\153\020\154\034\155\047\156\045\217\036" +
    "\220\012\221\017\001\001\000\004\011\105\001\001\000" +
    "\062\003\050\004\006\012\030\021\043\026\104\027\025" +
    "\030\005\051\004\125\013\137\026\140\044\142\024\145" +
    "\035\146\022\147\016\150\032\152\042\153\020\154\034" +
    "\155\047\156\045\217\036\220\012\221\017\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\011\102\001\001" +
    "\000\004\011\056\001\001\000\004\011\100\001\001\000" +
    "\002\001\001\000\004\006\073\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\067\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\006\103" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\006" +
    "\115\001\001\000\004\011\113\001\001\000\006\006\110" +
    "\011\111\001\001\000\002\001\001\000\004\006\112\001" +
    "\001\000\002\001\001\000\004\006\114\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\011\175" +
    "\151\177\001\001\000\006\011\137\135\166\001\001\000" +
    "\006\011\137\135\156\001\001\000\006\011\137\135\141" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\006" +
    "\131\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\006\136\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\006\142\011\143\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\011\145\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\011\137\135\151\001" +
    "\001\000\006\006\152\011\143\001\001\000\002\001\001" +
    "\000\004\011\154\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\157\011\143\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\011\137\135" +
    "\163\001\001\000\006\006\164\011\143\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\167\011\143\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\011\137\135\173\001\001\000\006\006\174\011" +
    "\143\001\001\000\002\001\001\000\004\006\217\001\001" +
    "\000\002\001\001\000\004\006\207\001\001\000\002\001" +
    "\001\000\004\011\202\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\011\206\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\011\213\151\214\001\001\000\004\006" +
    "\216\001\001\000\004\006\215\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\011\u01ff" +
    "\001\001\000\004\011\u0103\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\027\237\144\242\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\011\246" +
    "\001\001\000\004\100\250\001\001\000\004\101\352\001" +
    "\001\000\006\027\251\103\253\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\014\256\027\254\001\001\000" +
    "\002\001\001\000\022\011\305\027\301\035\272\036\266" +
    "\040\303\041\277\042\276\043\270\001\001\000\006\027" +
    "\257\104\261\001\001\000\002\001\001\000\004\011\262" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\264\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\035\345\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\011\305\036\340\040\303\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\011\331\035\272\036\266\040\303\043" +
    "\330\001\001\000\004\037\310\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\011\305\040\327\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\011\305\035\272\036\266" +
    "\040\303\042\337\043\270\001\001\000\016\011\305\035" +
    "\272\036\266\040\303\042\336\043\270\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\011\305\035\272\036\266\040\303\043\343" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\011" +
    "\305\036\346\040\303\001\001\000\002\001\001\000\004" +
    "\011\350\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\027\354\032\356\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\027\357\102\360\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\027\354\032\363\001\001\000\006\027\357\102" +
    "\364\001\001\000\002\001\001\000\006\034\370\213\372" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\213" +
    "\375\001\001\000\002\001\001\000\006\034\373\213\372" +
    "\001\001\000\004\213\375\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\011\u010d\027\u0106\112\u0109\114\u0108\162\u010c" +
    "\172\u0107\201\u010b\001\001\000\004\011\u01fc\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\027\u01f2\113\u01f4\001\001\000\004\011\u01f1\001\001\000" +
    "\004\173\u01cd\001\001\000\002\001\001\000\004\136\u0120" +
    "\001\001\000\004\136\u01c9\001\001\000\004\136\u01c8\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\136\u01be\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\027\u0131\122\u0133\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\136\u0128\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\u01ac\001\001\000\016\027\u0139\115" +
    "\u0135\116\u0136\117\u0137\202\u013e\203\u013d\001\001\000\006" +
    "\027\u0195\215\u01a8\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\120\u019f\001\001\000\006\027\237\144\u019c" +
    "\001\001\000\002\001\001\000\004\123\u018b\001\001\000" +
    "\004\011\u0184\001\001\000\010\027\u0167\200\u0183\201\u0169" +
    "\001\001\000\002\001\001\000\010\027\u0167\200\u0168\201" +
    "\u0169\001\001\000\006\027\u0149\107\u014b\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\027\237\144\u0145\001\001\000\002\001\001" +
    "\000\004\011\u0147\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\110\u015e\001\001\000\002" +
    "\001\001\000\006\211\u014e\216\u014d\001\001\000\006\027" +
    "\u0152\212\u015c\001\001\000\002\001\001\000\006\211\u0158" +
    "\216\u014d\001\001\000\004\216\u0151\001\001\000\006\027" +
    "\u0152\212\u0155\001\001\000\002\001\001\000\006\211\u0157" +
    "\216\u014d\001\001\000\006\211\u0156\216\u014d\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\027\u0152\212\u015a\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\027\u0161\111" +
    "\u0163\001\001\000\002\001\001\000\006\027\u0164\163\u0165" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\027\u016a\202\u016b\203\u013d\001\001\000\002\001" +
    "\001\000\010\027\u0167\200\u016c\201\u0169\001\001\000\002" +
    "\001\001\000\004\011\u016e\001\001\000\006\027\u016f\204" +
    "\u0171\001\001\000\002\001\001\000\004\011\u0181\001\001" +
    "\000\006\027\u0172\205\u0174\001\001\000\002\001\001\000" +
    "\004\206\u0176\001\001\000\006\027\u0149\107\u0175\001\001" +
    "\000\002\001\001\000\006\027\u0172\205\u0180\001\001\000" +
    "\004\210\u017f\001\001\000\004\210\u0179\001\001\000\002" +
    "\001\001\000\004\207\u017d\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\027\u0186\116\u0185\117\u0137" +
    "\202\u013e\203\u013d\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\027\u018e\124\u018f\001\001\000" +
    "\002\001\001\000\006\027\u0195\215\u0197\001\001\000\002" +
    "\001\001\000\006\027\u0149\107\u0190\001\001\000\006\027" +
    "\u0191\214\u0193\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\027\u0167\200\u0194\201\u0169\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\027\u0191\214\u01a0\001\001\000\010\027" +
    "\u0167\200\u01a1\201\u0169\001\001\000\002\001\001\000\006" +
    "\027\u01a3\121\u01a4\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\027\u0149\107\u01a9\001\001\000\006\027\u0191\214" +
    "\u01aa\001\001\000\010\027\u0167\200\u01ab\201\u0169\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\027\u0149\107\u01ed" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\027\237\144\u01cf\001\001\000\004\174\u01d1" +
    "\001\001\000\004\011\u01d2\001\001\000\002\001\001\000" +
    "\004\213\u01d3\001\001\000\006\027\u01d4\175\u01d5\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\u01d7\001" +
    "\001\000\004\213\u01d8\001\001\000\006\027\u01d4\175\u01d9" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\027" +
    "\237\144\u01dc\001\001\000\004\174\u01dd\001\001\000\002" +
    "\001\001\000\004\176\u01df\001\001\000\002\001\001\000" +
    "\004\011\u01e1\001\001\000\006\027\u01e2\177\u01e3\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\u01e5\001" +
    "\001\000\006\027\u01e2\177\u01e6\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\011\u01e9\001\001\000\006\027" +
    "\u016f\204\u01ea\001\001\000\006\027\u0172\205\u01eb\001\001" +
    "\000\006\027\u0149\107\u01ec\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\211\u01ef\216\u014d\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\011\u010d\027\u0106\112\u01fa\114\u0108\162\u010c" +
    "\172\u0107\201\u010b\001\001\000\002\001\001\000\006\027" +
    "\u01f6\106\u01f7\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\027\u01f2\113" +
    "\u01fb\001\001\000\002\001\001\000\006\027\237\144\u01fd" +
    "\001\001\000\004\174\u01fe\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\030\u0201\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\027\u0204\055\u0207\056\u0205\001" +
    "\001\000\002\001\001\000\006\027\u0237\062\u0239\001\001" +
    "\000\006\027\u0208\057\u020a\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\060\u020b\061\u020d" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\060\u020f\061\u020d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\027\u0217\063\u0218\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\064\u021d\065\u021c\066\u021f\067\u021a\071\u021b" +
    "\073\u021e\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\027\u0217\063\u0235\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\070\u0226" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\072\u022b" +
    "\001\001\000\002\001\001\000\004\070\u022e\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\027\u0231\070\u0232\074\u0234\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\011\u023e\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\011\u0242" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\005\u024b" +
    "\010\u0248\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\005" +
    "\u0252\010\u0248\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\005\u0254\010\u0248\001\001\000\002\001\001\000" +
    "\004\006\u0256\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\u0259\001\001\000\002\001\001\000\006\005" +
    "\u025b\010\u0248\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\005\u025f\010\u0248\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\006\u0261\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\006\u0264\001\001\000\002\001" +
    "\001\000\004\006\u0266\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\005\u026a\010\u0248\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\006\u026c\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\006\u026f\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\005\u0272\010\u0248" +
    "\001\001\000\002\001\001\000\004\006\u0274\001\001\000" +
    "\002\001\001\000\004\006\u0276\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\011\u027e\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\011\u0282\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\005\u0288\010\u0248\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\006\u028a\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\006\u028d\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\005\u0291\010\u0248\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\006\u0293\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\006\u0296\001" +
    "\001\000\002\001\001\000\006\005\u0299\010\u0248\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\006\u029b\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\006\u029e" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\005" +
    "\u02a2\010\u0248\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\u02a4\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\006\u02a7\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\027\u02ad\157\u02b0\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\027\u02b2\160" +
    "\u02b3\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\027\u02b5\161\u02b8\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\027\u02bb" +
    "\222\u02bc\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\027\u02c0\223\u02c1\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\030\u02c4" +
    "\001\001\000\006\027\u02c5\164\u02c6\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\027\u02c9" +
    "\165\u02ca\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\166\u02cc\001\001\000\002\001\001\000\006\027\u02ce" +
    "\167\u02cf\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\027\u02ce\167\u02d2\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\013\u03a5\001\001\000\014\007\u038d\011\u02e5\027" +
    "\u02e0\044\u038c\047\u02e4\001\001\000\002\001\001\000\014" +
    "\007\u0370\011\u02e5\027\u02e0\044\u036f\047\u02e4\001\001\000" +
    "\012\011\u02e5\027\u02e0\044\u030a\047\u02e4\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\025\u02e9\001\001\000\002\001\001\000\012\011" +
    "\u02e5\027\u02e0\044\u02ec\047\u02e4\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\011\u02e5\027\u02e0\044\u02eb\047" +
    "\u02e4\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\011\u02e5\027\u02e0\044\u02ef\047\u02e4\001" +
    "\001\000\002\001\001\000\006\027\u02f2\050\u02f4\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\u02fb\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\025\u02f8\001\001\000\002\001\001\000\004\025" +
    "\u02fa\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\025\u02fd\001\001\000\002\001\001\000\004\011\u02ff\001" +
    "\001\000\002\001\001\000\004\025\u0301\001\001\000\002" +
    "\001\001\000\004\011\u0303\001\001\000\002\001\001\000" +
    "\004\025\u0305\001\001\000\002\001\001\000\004\011\u0307" +
    "\001\001\000\002\001\001\000\004\025\u0309\001\001\000" +
    "\002\001\001\000\004\013\u030c\001\001\000\006\011\u0325" +
    "\020\u0326\001\001\000\006\014\u0321\027\254\001\001\000" +
    "\004\013\u030e\001\001\000\006\014\u030f\027\254\001\001" +
    "\000\006\027\u0310\045\u0311\001\001\000\002\001\001\000" +
    "\006\027\354\032\u031f\001\001\000\002\001\001\000\004" +
    "\011\u0314\001\001\000\006\027\u0315\031\u0316\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\011\u0319\033\u0318" +
    "\001\001\000\002\001\001\000\004\046\u031c\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\010\u031e\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\006\u0320\001" +
    "\001\000\002\001\001\000\006\027\u0310\045\u0322\001\001" +
    "\000\006\027\354\032\u0323\001\001\000\004\006\u0324\001" +
    "\001\000\002\001\001\000\010\015\u032f\016\u032e\025\u0330" +
    "\001\001\000\004\025\u0327\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\025" +
    "\u0340\001\001\000\002\001\001\000\006\015\u0331\016\u032e" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\u0334\001\001\000\002\001\001\000\004\011\u0336\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\011\u033c\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\025\u033f\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\011\u0342" +
    "\001\001\000\002\001\001\000\004\011\u0344\001\001\000" +
    "\006\015\u0345\016\u032e\001\001\000\002\001\001\000\004" +
    "\017\u0348\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\011\u034d\001\001\000\002\001\001\000\004\011\u034f\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\u0355\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\025\u0358" +
    "\001\001\000\002\001\001\000\004\011\u035a\001\001\000" +
    "\002\001\001\000\004\011\u035c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\011\u0362\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\025\u0365\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\017\u0368\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\017\u036b\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\017\u036e\001\001" +
    "\000\002\001\001\000\004\013\u037d\001\001\000\012\011" +
    "\u02e5\027\u02e0\044\u0371\047\u02e4\001\001\000\004\013\u0372" +
    "\001\001\000\006\014\u0379\027\254\001\001\000\004\013" +
    "\u0374\001\001\000\006\014\u0375\027\254\001\001\000\006" +
    "\027\u0310\045\u0376\001\001\000\006\027\354\032\u0377\001" +
    "\001\000\004\006\u0378\001\001\000\002\001\001\000\006" +
    "\027\u0310\045\u037a\001\001\000\006\027\354\032\u037b\001" +
    "\001\000\004\006\u037c\001\001\000\002\001\001\000\006" +
    "\014\u0384\027\254\001\001\000\004\013\u037f\001\001\000" +
    "\006\014\u0380\027\254\001\001\000\006\027\u0310\045\u0381" +
    "\001\001\000\006\027\354\032\u0382\001\001\000\004\006" +
    "\u0383\001\001\000\002\001\001\000\006\027\u0310\045\u0385" +
    "\001\001\000\006\027\354\032\u0386\001\001\000\004\006" +
    "\u0387\001\001\000\002\001\001\000\004\011\u0389\001\001" +
    "\000\002\001\001\000\004\025\u038b\001\001\000\002\001" +
    "\001\000\004\013\u039a\001\001\000\012\011\u02e5\027\u02e0" +
    "\044\u038e\047\u02e4\001\001\000\004\013\u038f\001\001\000" +
    "\006\014\u0396\027\254\001\001\000\004\013\u0391\001\001" +
    "\000\006\014\u0392\027\254\001\001\000\006\027\u0310\045" +
    "\u0393\001\001\000\006\027\354\032\u0394\001\001\000\004" +
    "\006\u0395\001\001\000\002\001\001\000\006\027\u0310\045" +
    "\u0397\001\001\000\006\027\354\032\u0398\001\001\000\004" +
    "\006\u0399\001\001\000\002\001\001\000\006\014\u03a1\027" +
    "\254\001\001\000\004\013\u039c\001\001\000\006\014\u039d" +
    "\027\254\001\001\000\006\027\u0310\045\u039e\001\001\000" +
    "\006\027\354\032\u039f\001\001\000\004\006\u03a0\001\001" +
    "\000\002\001\001\000\006\027\u0310\045\u03a2\001\001\000" +
    "\006\027\354\032\u03a3\001\001\000\004\006\u03a4\001\001" +
    "\000\002\001\001\000\006\014\u03ac\027\254\001\001\000" +
    "\004\013\u03a7\001\001\000\006\014\u03a8\027\254\001\001" +
    "\000\006\027\u0310\045\u03a9\001\001\000\006\027\354\032" +
    "\u03aa\001\001\000\004\006\u03ab\001\001\000\002\001\001" +
    "\000\006\027\u0310\045\u03ad\001\001\000\006\027\354\032" +
    "\u03ae\001\001\000\004\006\u03af\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\006\u03ba\001" +
    "\001\000\004\011\u03b8\001\001\000\006\006\u03b5\011\u03b6" +
    "\001\001\000\002\001\001\000\004\006\u03b7\001\001\000" +
    "\002\001\001\000\004\006\u03b9\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\141\u041b\001\001\000\004\126\u040f" +
    "\001\001\000\004\011\u0404\001\001\000\004\011\u03c5\001" +
    "\001\000\002\001\001\000\004\006\u03c4\001\001\000\002" +
    "\001\001\000\006\006\u03c9\130\u03c6\001\001\000\010\006" +
    "\u03f7\131\u03f4\136\u03f5\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\006\u03ce\001\001\000\002" +
    "\001\001\000\004\006\u03d0\001\001\000\002\001\001\000" +
    "\004\006\u03d2\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\136\u03d5\001\001\000\004\133\u03d7\001\001\000" +
    "\002\001\001\000\004\006\u03da\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\132\u03de\134" +
    "\u03e0\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\u03e3\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\006\u03ee\132\u03ed\134\u03e0\001" +
    "\001\000\004\006\u03ef\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\006\u03fe\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\143\u0406\001\001\000" +
    "\004\030\u040d\001\001\000\002\001\001\000\004\130\u0408" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\030" +
    "\u040b\001\001\000\004\006\u040c\001\001\000\002\001\001" +
    "\000\004\006\u040e\001\001\000\002\001\001\000\004\127" +
    "\u0413\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\006\u0418\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\011\u041e\001\001\000\004" +
    "\006\u041f\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\011\u0423\001\001\000\006\006\u0425" +
    "\013\u0426\001\001\000\006\006\u042a\013\u042b\001\001\000" +
    "\002\001\001\000\010\006\u0427\014\u0428\027\254\001\001" +
    "\000\002\001\001\000\004\006\u0429\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\006\u042c\014\u042d\027\254" +
    "\001\001\000\002\001\001\000\004\006\u042e\001\001\000" +
    "\002\001\001\000\004\011\u0430\001\001\000\006\006\u0432" +
    "\013\u0433\001\001\000\006\006\u0437\013\u0438\001\001\000" +
    "\002\001\001\000\010\006\u0434\014\u0435\027\254\001\001" +
    "\000\002\001\001\000\004\006\u0436\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\006\u0439\014\u043a\027\254" +
    "\001\001\000\002\001\001\000\004\006\u043b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\011\u046f\001\001\000\004\006\u046e\001\001\000\004\022" +
    "\u0442\001\001\000\006\011\u0452\024\u0453\001\001\000\012" +
    "\006\u0445\013\u0444\014\u0446\027\254\001\001\000\012\006" +
    "\u044b\013\u044c\014\u044d\027\254\001\001\000\010\006\u0448" +
    "\014\u0449\027\254\001\001\000\002\001\001\000\004\006" +
    "\u0447\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\u044a\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\006\u044f\014\u0450\027\254\001\001\000\004\006\u044e" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\006" +
    "\u0451\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\010\u045a\011\u0459\023\u0455\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\010\u045a\011\u045c\023\u045b\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\010\u045a\011\u0459\023\u0467\001\001\000\002\001\001\000" +
    "\010\010\u045a\011\u0459\023\u0466\001\001\000\010\010\u045a" +
    "\011\u0459\023\u0465\001\001\000\010\010\u045a\011\u0459\023" +
    "\u0464\001\001\000\010\010\u045a\011\u0459\023\u0463\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\011\u0452\024\u0469" +
    "\001\001\000\002\001\001\000\006\011\u0452\024\u046b\001" +
    "\001\000\002\001\001\000\006\011\u0452\024\u046d\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\022\u0470\001" +
    "\001\000\012\006\u0473\013\u0472\014\u0474\027\254\001\001" +
    "\000\012\006\u047a\013\u0479\014\u047b\027\254\001\001\000" +
    "\010\006\u0476\014\u0477\027\254\001\001\000\002\001\001" +
    "\000\004\006\u0475\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\006\u0478\001\001\000\002\001\001\000\010" +
    "\006\u047d\014\u047e\027\254\001\001\000\002\001\001\000" +
    "\004\006\u047c\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\u047f\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\011\u0482\001\001\000\004\006\u0483\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\006\u0488\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    
    public ArrayList<ErrorJ> error = new ArrayList<ErrorJ>();

    public Symbol gets(){
        return this.s;
    }
    public void syntax_error(Symbol s){
    this.s = s;
    int linea = this.s.right;
    int columna = this.s.left;
    String value = (String)this.s.value;
    ErrorJ Sintax_E = new ErrorJ(linea,columna,value);
    error.add(Sintax_E);
}
    protected int error_sync_size () {
        //System.out.println("error_sync_size was called.");
        return 1; // not recommended by the CUP manual

     // but we need recovery after the next successful shift
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$sintax$actions {
  private final sintax parser;

  /** Constructor */
  CUP$sintax$actions(sintax parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$sintax$do_action_part00000000(
    int                        CUP$sintax$act_num,
    java_cup.runtime.lr_parser CUP$sintax$parser,
    java.util.Stack            CUP$sintax$stack,
    int                        CUP$sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$sintax$result;

      /* select the action based on the action number */
      switch (CUP$sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INIT EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$sintax$stack.elementAt(CUP$sintax$top-1)).value;
		RESULT = start_val;
              CUP$sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$sintax$parser.done_parsing();
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INIT ::= START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INIT",0, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // START ::= EXPRESIONES 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("START",20, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // START ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("START",20, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // EXPRESIONES ::= INSERT_F START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // EXPRESIONES ::= DELETE_F START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // EXPRESIONES ::= UPDATE_F START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // EXPRESIONES ::= SELECT_F START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // EXPRESIONES ::= CREATE_F START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // EXPRESIONES ::= ALTERDATABASE START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // EXPRESIONES ::= ALTERTABLE START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // EXPRESIONES ::= ALTERUSER START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // EXPRESIONES ::= ALTERVIEW START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // EXPRESIONES ::= ALTERINDEX START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // EXPRESIONES ::= DROPDATABASE START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // EXPRESIONES ::= DROPTABLE START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // EXPRESIONES ::= DROPUSER START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // EXPRESIONES ::= DROPINDEX START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // EXPRESIONES ::= DROPVIEW START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // EXPRESIONES ::= TRUNCATETABLE START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // EXPRESIONES ::= BEGINTRANSACTION START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // EXPRESIONES ::= CursorDeclare START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // EXPRESIONES ::= ROLLBACKTCL START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // EXPRESIONES ::= COMMITTCL START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // EXPRESIONES ::= SAVEPOINTTCL START 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRESIONES",1, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // INSERT_F ::= INSERT TOP_F INTO OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre OUTPUT VALUES Parentesis_de_apertura VALORES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-12)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // INSERT_F ::= INSERT TOP_F INTO OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre OUTPUT VALUES Parentesis_de_apertura DEFAULT VALUES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-13)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // INSERT_F ::= INSERT TOP_F INTO OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre VALUES Parentesis_de_apertura VALORES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-11)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // INSERT_F ::= INSERT TOP_F INTO OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre VALUES Parentesis_de_apertura DEFAULT VALUES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-12)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // INSERT_F ::= INSERT INTO OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre OUTPUT VALUES Parentesis_de_apertura VALORES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-11)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // INSERT_F ::= INSERT INTO OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre OUTPUT VALUES Parentesis_de_apertura DEFAULT VALUES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-12)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // INSERT_F ::= INSERT INTO OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre VALUES Parentesis_de_apertura VALORES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-10)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // INSERT_F ::= INSERT INTO OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre VALUES Parentesis_de_apertura DEFAULT VALUES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-11)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // INSERT_F ::= INSERT INTO OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre DEFAULT VALUES FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-8)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // INSERT_F ::= INSERT TOP_F INTO OBJECT_F OUTPUT VALUES Parentesis_de_apertura VALORES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-9)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // INSERT_F ::= INSERT TOP_F INTO OBJECT_F OUTPUT VALUES Parentesis_de_apertura DEFAULT VALUES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-10)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // INSERT_F ::= INSERT TOP_F INTO OBJECT_F VALUES Parentesis_de_apertura VALORES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-8)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // INSERT_F ::= INSERT TOP_F INTO OBJECT_F VALUES Parentesis_de_apertura DEFAULT VALUES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-9)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // INSERT_F ::= INSERT INTO OBJECT_F OUTPUT VALUES Parentesis_de_apertura VALORES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-8)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // INSERT_F ::= INSERT INTO OBJECT_F OUTPUT VALUES Parentesis_de_apertura DEFAULT VALUES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-9)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // INSERT_F ::= INSERT INTO OBJECT_F VALUES Parentesis_de_apertura VALORES Parentesis_de_cierre FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // INSERT_F ::= INSERT INTO OBJECT_F VALUES DEFAULT VALUES FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // INSERT_F ::= error FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("INSERT_F",2, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // VALORES ::= DEFAULT Coma VALORES 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("VALORES",3, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // VALORES ::= NULL Coma VALORES 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("VALORES",3, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // VALORES ::= CONST Coma VALORES 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("VALORES",3, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // VALORES ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("VALORES",3, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // VALORES ::= NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("VALORES",3, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // VALORES ::= CONST 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("VALORES",3, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // DELETE_F ::= DELETE TOP_F FROM OBJECT_F OUTPUT FROM_F WHERE_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // DELETE_F ::= DELETE FROM OBJECT_F OUTPUT FROM_F WHERE_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // DELETE_F ::= DELETE TOP_F FROM OBJECT_F FROM_F WHERE_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // DELETE_F ::= DELETE FROM OBJECT_F FROM_F WHERE_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // DELETE_F ::= DELETE TOP_F FROM OBJECT_F OUTPUT FROM_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // DELETE_F ::= DELETE FROM OBJECT_F OUTPUT FROM_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // DELETE_F ::= DELETE TOP_F FROM OBJECT_F FROM_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // DELETE_F ::= DELETE FROM OBJECT_F FROM_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // DELETE_F ::= DELETE TOP_F FROM OBJECT_F OUTPUT FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // DELETE_F ::= DELETE FROM OBJECT_F OUTPUT FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // DELETE_F ::= DELETE TOP_F FROM OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // DELETE_F ::= DELETE FROM OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // DELETE_F ::= DELETE error 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DELETE_F",8, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // UPDATE_F ::= UPDATE TOP_F OBJECT_F SET_F OUTPUT FROM_F WHERE_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // UPDATE_F ::= UPDATE TOP_F OBJECT_F SET_F OUTPUT FROM_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // UPDATE_F ::= UPDATE OBJECT_F SET_F OUTPUT FROM_F WHERE_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // UPDATE_F ::= UPDATE OBJECT_F SET_F OUTPUT FROM_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // UPDATE_F ::= UPDATE TOP_F OBJECT_F SET_F FROM_F WHERE_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // UPDATE_F ::= UPDATE TOP_F OBJECT_F SET_F FROM_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // UPDATE_F ::= UPDATE OBJECT_F SET_F FROM_F WHERE_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // UPDATE_F ::= UPDATE OBJECT_F SET_F FROM_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // UPDATE_F ::= UPDATE TOP_F OBJECT_F SET_F OUTPUT WHERE_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // UPDATE_F ::= UPDATE TOP_F OBJECT_F SET_F OUTPUT FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // UPDATE_F ::= UPDATE OBJECT_F SET_F OUTPUT WHERE_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // UPDATE_F ::= UPDATE OBJECT_F SET_F OUTPUT FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // UPDATE_F ::= UPDATE TOP_F OBJECT_F SET_F WHERE_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // UPDATE_F ::= UPDATE TOP_F OBJECT_F SET_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // UPDATE_F ::= UPDATE OBJECT_F SET_F WHERE_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // UPDATE_F ::= UPDATE OBJECT_F SET_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // UPDATE_F ::= UPDATE error FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("UPDATE_F",15, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // SET_F ::= SET SET_EXP 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SET_F",16, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // SET_EXP ::= OBJECT_F Igual DEFAULT Coma SET_EXP 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SET_EXP",18, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // SET_EXP ::= OBJECT_F Igual NULL Coma SET_EXP 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SET_EXP",18, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // SET_EXP ::= OBJECT_F Igual EXP_F Coma SET_EXP 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SET_EXP",18, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // SET_EXP ::= OBJECT_F Igual DEFAULT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SET_EXP",18, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // SET_EXP ::= OBJECT_F Igual NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SET_EXP",18, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // SET_EXP ::= OBJECT_F Igual EXP_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SET_EXP",18, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // EXP_F ::= OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXP_F",17, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // EXP_F ::= CONST 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXP_F",17, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // EXP_F ::= EXP_F Suma EXP_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXP_F",17, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // EXP_F ::= EXP_F Resta EXP_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXP_F",17, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // EXP_F ::= EXP_F Multiplicacion EXP_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXP_F",17, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // EXP_F ::= EXP_F Division EXP_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXP_F",17, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // EXP_F ::= EXP_F Porcentaje EXP_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXP_F",17, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // EXP_F ::= Parentesis_de_apertura EXP_F Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXP_F",17, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // SELECT_F ::= SELECT ALL TOP_F SELECT_FILES INTO FROM_F WHERE_F GROUP_F ORDER_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_F",22, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-9)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // SELECT_F ::= SELECT DISTINCT TOP_F SELECT_FILES INTO FROM_F WHERE_F GROUP_F ORDER_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_F",22, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-9)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // SELECT_F ::= SELECT TOP_F SELECT_FILES INTO FROM_F WHERE_F GROUP_F ORDER_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_F",22, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-8)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // SELECT_F ::= SELECT ALL SELECT_FILES INTO FROM_F WHERE_F GROUP_F ORDER_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_F",22, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-8)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // SELECT_F ::= SELECT DISTINCT SELECT_FILES INTO FROM_F WHERE_F GROUP_F ORDER_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_F",22, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-8)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // SELECT_F ::= SELECT SELECT_FILES INTO FROM_F WHERE_F GROUP_F ORDER_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_F",22, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // SELECT_F ::= SELECT ALL TOP_F SELECT_FILES FROM_F WHERE_F GROUP_F ORDER_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_F",22, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-8)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // SELECT_F ::= SELECT DISTINCT TOP_F SELECT_FILES FROM_F WHERE_F GROUP_F ORDER_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_F",22, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-8)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // SELECT_F ::= SELECT TOP_F SELECT_FILES FROM_F WHERE_F GROUP_F ORDER_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_F",22, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // SELECT_F ::= SELECT ALL SELECT_FILES FROM_F WHERE_F GROUP_F ORDER_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_F",22, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // SELECT_F ::= SELECT DISTINCT SELECT_FILES FROM_F WHERE_F GROUP_F ORDER_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_F",22, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // SELECT_F ::= SELECT SELECT_FILES FROM_F WHERE_F GROUP_F ORDER_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_F",22, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // SELECT_FILES ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FILES",34, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // SELECT_FILES ::= OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FILES",34, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // SELECT_FILES ::= OBJECT_F AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FILES",34, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // SELECT_FILES ::= SELECT_FUNCTIONS 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FILES",34, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // SELECT_FILES ::= OBJECT_F Coma SELECT_FILES 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FILES",34, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // SELECT_FILES ::= OBJECT_F AS_F Coma SELECT_FILES 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FILES",34, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // SELECT_FILES ::= SELECT_FUNCTIONS Coma SELECT_FILES 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FILES",34, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // SELECT_FILES ::= SELECT error 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FILES",34, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // SELECT_FUNCTIONS ::= AVG Parentesis_de_apertura OBJECT_F Parentesis_de_cierre AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // SELECT_FUNCTIONS ::= AVG Parentesis_de_apertura OBJECT_F Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // SELECT_FUNCTIONS ::= COUNT Parentesis_de_apertura DISTINCT_F OBJECT_F Parentesis_de_cierre AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // SELECT_FUNCTIONS ::= COUNT Parentesis_de_apertura DISTINCT_F OBJECT_F Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // SELECT_FUNCTIONS ::= COUNT Parentesis_de_apertura Multiplicacion Parentesis_de_cierre AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // SELECT_FUNCTIONS ::= COUNT Parentesis_de_apertura Multiplicacion Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // SELECT_FUNCTIONS ::= COUNT Parentesis_de_apertura Int Parentesis_de_cierre AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // SELECT_FUNCTIONS ::= COUNT Parentesis_de_apertura Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // SELECT_FUNCTIONS ::= MIN Parentesis_de_apertura OBJECT_F Parentesis_de_cierre AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // SELECT_FUNCTIONS ::= MIN Parentesis_de_apertura OBJECT_F Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // SELECT_FUNCTIONS ::= MAX Parentesis_de_apertura OBJECT_F Parentesis_de_cierre AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // SELECT_FUNCTIONS ::= MAX Parentesis_de_apertura OBJECT_F Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // SELECT_FUNCTIONS ::= SUM Parentesis_de_apertura OBJECT_F Parentesis_de_cierre AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // SELECT_FUNCTIONS ::= SUM Parentesis_de_apertura OBJECT_F Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // SELECT_FUNCTIONS ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SELECT_FUNCTIONS",37, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // DISTINCT_F ::= ALL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DISTINCT_F",38, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // DISTINCT_F ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DISTINCT_F",38, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // DISTINCT_F ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DISTINCT_F",38, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // GROUP_F ::= GROUP BY OBJECT_F HAVING_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("GROUP_F",35, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // GROUP_F ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("GROUP_F",35, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // HAVING_F ::= HAVING EXPRE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("HAVING_F",23, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // HAVING_F ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("HAVING_F",23, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // EXPRE ::= OBJECT_F COMP CONST 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EXPRE",25, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // COMP ::= Mayor 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("COMP",36, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // COMP ::= Menor 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("COMP",36, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // COMP ::= Igual 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("COMP",36, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // ORDER_F ::= ORDER BY ORDER_FUNC 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ORDER_F",24, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // ORDER_F ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ORDER_F",24, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // ORDER_FUNC ::= OrderB ORDER_FUNC 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ORDER_FUNC",26, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // ORDER_FUNC ::= ORDER_FUNC OrderB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ORDER_FUNC",26, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // ORDER_FUNC ::= Identificador Punto Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ORDER_FUNC",26, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // ORDER_FUNC ::= Identificador Punto Identificador Punto Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ORDER_FUNC",26, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // ORDER_FUNC ::= ORDER_FUNC Coma 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ORDER_FUNC",26, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // ORDER_FUNC ::= Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ORDER_FUNC",26, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // OrderB ::= ASC 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OrderB",137, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // OrderB ::= DESC 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OrderB",137, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // CREATE_F ::= CREATE CreateA 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CREATE_F",39, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // CreateA ::= CreateTable 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateA",40, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // CreateA ::= CreateDB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateA",40, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // CreateA ::= CreateIndex 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateA",40, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // CreateA ::= CreateUser 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateA",40, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // CreateA ::= CreateView 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateA",40, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // CreateA ::= Procedure 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateA",40, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // CreateA ::= Function 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateA",40, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // CreateUser ::= USER Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateUser",41, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // CreateDB ::= DATABASE Identificador CreateDBA 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateDB",42, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // CreateDBA ::= CreateDBB COLLATEDB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateDBA",43, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // CreateDBB ::= ON Primary FileSpecs 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateDBB",44, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // CreateDBB ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateDBB",44, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // Primary ::= PRIMARY 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Primary",45, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // Primary ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Primary",45, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // FileSpecs ::= FileSpec Coma FileSpecs 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FileSpecs",46, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // FileSpecs ::= FileSpec 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FileSpecs",46, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // FileSpec ::= Parentesis_de_apertura NAME Igual String Coma FILENAME Igual String Optionals Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FileSpec",47, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-9)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // COLLATEDB ::= COLLATE Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("COLLATEDB",48, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // COLLATEDB ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("COLLATEDB",48, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // Optionals ::= Coma Optional Optionals 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Optionals",49, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // Optionals ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Optionals",49, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // Optional ::= Size 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Optional",50, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // Optional ::= Maxsize 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Optional",50, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // Optional ::= Filegrowth 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Optional",50, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // Size ::= Sizew 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Size",51, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // Size ::= Sizenw 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Size",51, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // Sizew ::= SIZE Igual Int Size_A 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Sizew",52, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // Sizenw ::= SIZE Igual Int 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Sizenw",53, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // Size_A ::= KB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Size_A",54, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // Size_A ::= MB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Size_A",54, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // Size_A ::= GB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Size_A",54, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // Size_A ::= TB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Size_A",54, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // Maxsize ::= MAXSIZE Igual Maxsize_A 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Maxsize",55, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // Maxsize_A ::= Int Size_A 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Maxsize_A",56, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // Maxsize_A ::= UNLIMITED 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Maxsize_A",56, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // Filegrowth ::= FILEGROWTH Igual Int Filegrowth_A 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Filegrowth",57, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // Filegrowth_A ::= Size_A 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Filegrowth_A",58, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // Filegrowth_A ::= MODULAR 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Filegrowth_A",58, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // Filegrowth_A ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("Filegrowth_A",58, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // CreateView ::= VIEW OBJECT_F AS SELECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateView",59, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // CreateIndex ::= CreateIndexA ColumnConstrC INDEX Identificador ON OBJECT_F ColumnIndex IncludeIndex WHERE_F OptionalOn 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateIndex",60, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-9)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // CreateIndexA ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateIndexA",61, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // CreateIndexA ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateIndexA",61, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // ColumnIndex ::= Parentesis_de_apertura ColumnIndexA Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnIndex",62, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // ColumnIndexA ::= Identificador ORDER_F ColumnIndexB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnIndexA",63, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // ColumnIndexB ::= Coma Identificador ORDER_F ColumnIndexB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnIndexB",64, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // ColumnIndexB ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnIndexB",64, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // IncludeIndex ::= INCLUDE Parentesis_de_apertura OBJECT_F Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("IncludeIndex",65, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // IncludeIndex ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("IncludeIndex",65, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // OptionalOn ::= ON OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OptionalOn",66, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // OptionalOn ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OptionalOn",66, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // CreateTable ::= TABLE OBJECT_F Parentesis_de_apertura CNC CNCA Parentesis_de_cierre FileGroup 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CreateTable",67, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // FileGroup ::= ON PRIMARY 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FileGroup",68, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // FileGroup ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FileGroup",68, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // NFR ::= NOT NFR1 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("NFR",69, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // NFR ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("NFR",69, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // NFR1 ::= FOR REPLICATION NFR2 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("NFR1",70, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // NFR1 ::= NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("NFR1",70, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // NFR2 ::= NOT ColumnDefG 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("NFR2",71, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // NFR2 ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("NFR2",71, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // CNC ::= ColumnDef 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CNC",72, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // CNC ::= TableConstr 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CNC",72, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // CNC ::= TableIndex 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CNC",72, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // CNCA ::= Coma CNC CNCA 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CNCA",73, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // CNCA ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CNCA",73, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // TableConstr ::= ColumnConstrA TableConstrA 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TableConstr",120, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // TableConstrA ::= PRIMARY KEY ColumnConstrC TableConstrB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TableConstrA",121, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // TableConstrA ::= UNIQUE ColumnConstrC TableConstrB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TableConstrA",121, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // TableConstrA ::= FOREIGN KEY TableConstrD REFERENCES OBJECT_F ColumnConstrE ColumnConstrF NFR 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TableConstrA",121, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // TableConstrA ::= CHECK NFR Parentesis_de_apertura SearchCondition Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TableConstrA",121, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // TableConstrB ::= Parentesis_de_apertura OBJECT_F OrderB TableConstrC Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TableConstrB",122, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // TableConstrC ::= Coma OBJECT_F OrderB TableConstrC 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TableConstrC",123, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // TableConstrC ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TableConstrC",123, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // TableConstrD ::= Parentesis_de_apertura OBJECT_F TableConstrE Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TableConstrD",124, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // TableConstrE ::= Coma OBJECT_F TableConstrE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TableConstrE",125, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // TableConstrE ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TableConstrE",125, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // TableIndex ::= INDEX OBJECT_F ColumnConstrC TableConstrB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TableIndex",112, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // ColumnDef ::= OBJECT_F TIPODATO ColumnDefA ColumnDefZ 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDef",74, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // ColumnDefZ ::= CONSTRAINT OBJECT_F ColumnDefY 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefZ",75, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // ColumnDefZ ::= ColumnDefY 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefZ",75, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // ColumnDefZ ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefZ",75, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // ColumnDefY ::= DEFAULT ColumnDefD ColumnDefE NFR ColumnDefH ColumnConstr 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefY",76, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // ColumnDefY ::= IDENTITY ColumnDefF NFR ColumnDefH ColumnConstr 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefY",76, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // ColumnDefY ::= ColumnDefX ColumnDefW ColumnDefH ColumnConstr 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefY",76, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // ColumnDefY ::= ROWGUIDCOL ColumnConstr 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefY",76, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // ColumnDefY ::= ColumnConstrB ColumnConstr 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefY",76, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // ColumnDefX ::= NOT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefX",77, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // ColumnDefX ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefX",77, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // ColumnDefF ::= Parentesis_de_apertura Int Coma Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefF",139, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // ColumnDefF ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefF",139, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // ColumnDefW ::= NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefW",78, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // ColumnDefW ::= FOR REPLICATION ColumnDefV 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefW",78, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // ColumnDefV ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefV",79, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // ColumnDefV ::= NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefV",79, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // ColumnDefV ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefV",79, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // ColumnDefG ::= NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefG",113, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // ColumnDefG ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefG",113, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // ColumnDefH ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefH",138, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // ColumnDefH ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefH",138, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // ColumnDefA ::= COLLATE OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefA",80, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // ColumnDefA ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefA",80, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // ColumnDefD ::= Int 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefD",81, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // ColumnDefD ::= Float 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefD",81, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // ColumnDefD ::= String 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefD",81, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // ColumnDefD ::= Bit 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefD",81, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // ColumnDefD ::= NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefD",81, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // ColumnDefE ::= IDENTITY ColumnDefF 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefE",82, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // ColumnDefE ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnDefE",82, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // ColumnConstr ::= ColumnConstrA ColumnConstrB ColumnConstr 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstr",126, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // ColumnConstr ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstr",126, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // ColumnConstrA ::= CONSTRAINT OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrA",127, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // ColumnConstrA ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrA",127, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // ColumnConstrB ::= PRIMARY KEY ColumnConstrC 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrB",128, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // ColumnConstrB ::= PRIMARY KEY ColumnConstrC Parentesis_de_apertura OBJECT_F Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrB",128, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // ColumnConstrB ::= UNIQUE ColumnConstrC 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrB",128, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // ColumnConstrB ::= ColumnConstrD REFERENCES OBJECT_F ColumnConstrE ColumnConstrF NFR 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrB",128, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // ColumnConstrB ::= CHECK NFR Parentesis_de_apertura SearchCondition Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrB",128, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // ColumnConstrC ::= CLUSTERED 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrC",98, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // ColumnConstrC ::= NONCLUSTERED 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrC",98, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // ColumnConstrC ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrC",98, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // ColumnConstrD ::= FOREIGN KEY 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrD",129, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // ColumnConstrD ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrD",129, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // ColumnConstrE ::= Parentesis_de_apertura OBJECT_F Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrE",130, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // ColumnConstrE ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrE",130, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // ColumnConstrF ::= ON ColumnConstrG ColumnConstrF 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrF",131, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // ColumnConstrF ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrF",131, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // ColumnConstrG ::= DELETE ColumnConstrI 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrG",132, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // ColumnConstrG ::= UPDATE ColumnConstrI 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrG",132, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // ColumnConstrH ::= NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrH",133, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // ColumnConstrH ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrH",133, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // ColumnConstrI ::= CASCADE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrI",134, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // ColumnConstrI ::= SET ColumnConstrH 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnConstrI",134, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // SearchCondition ::= NOT Predicate SearchConditionA 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SearchCondition",135, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // SearchCondition ::= Predicate SearchConditionA 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SearchCondition",135, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // SearchCondition ::= Parentesis_de_apertura SearchCondition Parentesis_de_cierre SearchConditionA 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SearchCondition",135, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // SearchConditionA ::= AND SearchCondition 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SearchConditionA",136, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // SearchConditionA ::= OR SearchCondition 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SearchConditionA",136, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // SearchConditionA ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SearchConditionA",136, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // ALTERDATABASE ::= ALTER DATABASE database_name alter_database_sentencia FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERDATABASE",83, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // database_name ::= Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("database_name",84, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // database_name ::= CURRENT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("database_name",84, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // alter_database_sentencia ::= MODIFY NAME Igual Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_database_sentencia",85, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // alter_database_sentencia ::= COLLATE Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_database_sentencia",85, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // ALTERTABLE ::= ALTER TABLE OBJECT_F alter_column alter_column_sentencia FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERTABLE",93, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // ALTERTABLE ::= ALTER TABLE OBJECT_F alter_column FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERTABLE",93, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // ALTERTABLE ::= ALTER TABLE OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERTABLE",93, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // ALTERTABLE ::= ALTER TABLE OBJECT_F ADD Identificador TIPODATO null_notnull FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERTABLE",93, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // ALTERTABLE ::= ALTER TABLE OBJECT_F ADD Identificador TIPODATO null_notnull CONSTRAINT Identificador constraint_type FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERTABLE",93, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-10)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // ALTERTABLE ::= ALTER TABLE OBJECT_F ADD CONSTRAINT Identificador FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERTABLE",93, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$sintax$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$sintax$do_action_part00000001(
    int                        CUP$sintax$act_num,
    java_cup.runtime.lr_parser CUP$sintax$parser,
    java.util.Stack            CUP$sintax$stack,
    int                        CUP$sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$sintax$result;

      /* select the action based on the action number */
      switch (CUP$sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // ALTERTABLE ::= ALTER TABLE OBJECT_F ADD CONSTRAINT Identificador constraint_type FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERTABLE",93, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // ALTERTABLE ::= ALTER TABLE OBJECT_F DROP COLUMN Identificador FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERTABLE",93, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // ALTERTABLE ::= ALTER TABLE OBJECT_F DROP Identificador FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERTABLE",93, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // ALTERTABLE ::= ALTER TABLE OBJECT_F DROP CONSTRAINT Identificador FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERTABLE",93, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // alter_column ::= ALTER COLUMN Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_column",86, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // alter_column_sentencia ::= TIPODATO Identificador COLLATE Identificador NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_column_sentencia",87, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // alter_column_sentencia ::= TIPODATO Identificador COLLATE Identificador NOT NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_column_sentencia",87, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // alter_column_sentencia ::= TIPODATO Identificador COLLATE Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_column_sentencia",87, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // alter_column_sentencia ::= COLLATE Identificador NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_column_sentencia",87, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // alter_column_sentencia ::= COLLATE Identificador NOT NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_column_sentencia",87, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // alter_column_sentencia ::= COLLATE Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_column_sentencia",87, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // alter_column_sentencia ::= TIPODATO Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_column_sentencia",87, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // alter_column_sentencia ::= NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_column_sentencia",87, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // alter_column_sentencia ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_column_sentencia",87, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // constraint_type ::= PRIMARY KEY 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("constraint_type",88, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // constraint_type ::= UNIQUE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("constraint_type",88, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // constraint_type ::= PRIMARY KEY CLUSTERED 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("constraint_type",88, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // constraint_type ::= PRIMARY KEY NONCLUSTERED 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("constraint_type",88, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // constraint_type ::= UNIQUE CLUSTERED 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("constraint_type",88, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // constraint_type ::= UNIQUE NONCLUSTERED 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("constraint_type",88, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // constraint_type ::= foreign_key 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("constraint_type",88, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // null_notnull ::= NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("null_notnull",89, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // null_notnull ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("null_notnull",89, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // foreign_key ::= FOREIGN KEY Parentesis_de_apertura Identificador Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("foreign_key",90, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // ALTERUSER ::= ALTER USER Identificador FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERUSER",94, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // ALTERINDEX ::= ALTER INDEX alter_index ON OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERINDEX",106, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // alter_index ::= Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_index",95, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // alter_index ::= ALL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_index",95, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // ALTERVIEW ::= ALTER VIEW OBJECT_F AS SELECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERVIEW",96, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // ALTERVIEW ::= ALTER VIEW OBJECT_F alter_view AS SELECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ALTERVIEW",96, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // alter_view ::= Parentesis_de_apertura alter_column Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("alter_view",97, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // DROPDATABASE ::= DROP DATABASE OBJECT_FDROP FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DROPDATABASE",99, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // DROPDATABASE ::= DROP DATABASE Corchete_de_apertura IF EXISTS Corchete_de_cierre OBJECT_FDROP FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DROPDATABASE",99, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // DROPTABLE ::= DROP TABLE OBJECT_FDROP FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DROPTABLE",100, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // DROPTABLE ::= DROP TABLE Corchete_de_apertura IF EXISTS Corchete_de_cierre OBJECT_FDROP FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DROPTABLE",100, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // DROPUSER ::= DROP USER Identificador FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DROPUSER",101, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // DROPUSER ::= DROP USER Corchete_de_apertura IF EXISTS Corchete_de_cierre Identificador FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DROPUSER",101, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // DROPINDEX ::= DROP INDEX drop_relational_or_xml_or_spatial_index FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DROPINDEX",102, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // DROPINDEX ::= DROP INDEX Corchete_de_apertura IF EXISTS Corchete_de_cierre drop_relational_or_xml_or_spatial_index FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DROPINDEX",102, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // DROPINDEX ::= DROP INDEX OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DROPINDEX",102, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // DROPINDEX ::= DROP INDEX Corchete_de_apertura IF EXISTS Corchete_de_cierre OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DROPINDEX",102, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // drop_relational_or_xml_or_spatial_index ::= Identificador ON OBJECT_F Coma Identificador ON OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("drop_relational_or_xml_or_spatial_index",103, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // drop_relational_or_xml_or_spatial_index ::= Identificador ON OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("drop_relational_or_xml_or_spatial_index",103, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // DROPVIEW ::= DROP VIEW OBJECT_FDROP FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DROPVIEW",104, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // DROPVIEW ::= DROP VIEW Corchete_de_apertura IF EXISTS Corchete_de_cierre OBJECT_FDROP FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("DROPVIEW",104, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-7)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // TRUNCATETABLE ::= TRUNCATE TABLE OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TRUNCATETABLE",105, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // FROM_F ::= FROM OBJECT_F AS_F JOIN_F1 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FROM_F",9, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // FROM_F ::= FROM OBJECT_F AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FROM_F",9, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // FROM_F ::= FROM OBJECT_F JOIN_F1 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FROM_F",9, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // FROM_F ::= FROM OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FROM_F",9, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // FROM_F ::= FROM PIVOT_F AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FROM_F",9, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // FROM_F ::= FROM PIVOT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FROM_F",9, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // PIVOT_F ::= OBJECT_F AS_F PIVOT Parentesis_de_apertura OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre FOR Identificador IN Parentesis_de_apertura OBJECT_F Parentesis_de_cierre Parentesis_de_cierre AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("PIVOT_F",14, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-15)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // PIVOT_F ::= OBJECT_F PIVOT Parentesis_de_apertura OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre FOR Identificador IN Parentesis_de_apertura OBJECT_F Parentesis_de_cierre Parentesis_de_cierre AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("PIVOT_F",14, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-14)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // PIVOT_F ::= OBJECT_F AS_F PIVOT Parentesis_de_apertura OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre FOR Identificador IN Parentesis_de_apertura OBJECT_F Parentesis_de_cierre Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("PIVOT_F",14, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-14)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // PIVOT_F ::= OBJECT_F PIVOT Parentesis_de_apertura OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre FOR Identificador IN Parentesis_de_apertura OBJECT_F Parentesis_de_cierre Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("PIVOT_F",14, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-13)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // PIVOT_F ::= OBJECT_F UNPIVOT Parentesis_de_apertura OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre FOR Identificador IN Parentesis_de_apertura OBJECT_F Parentesis_de_cierre Parentesis_de_cierre AS_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("PIVOT_F",14, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-14)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // PIVOT_F ::= OBJECT_F UNPIVOT Parentesis_de_apertura OBJECT_F Parentesis_de_apertura OBJECT_F Parentesis_de_cierre FOR Identificador IN Parentesis_de_apertura OBJECT_F Parentesis_de_cierre Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("PIVOT_F",14, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-13)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // AS_F ::= AS Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("AS_F",19, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // AS_F ::= Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("AS_F",19, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // JOIN_F1 ::= JOIN_F2 AS_F ON OBJECT_F Igual OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JOIN_F1",11, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-5)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // JOIN_F1 ::= JOIN_F2 AS_F ON OBJECT_F Igual OBJECT_F JOIN_F1 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JOIN_F1",11, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-6)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // JOIN_F2 ::= INNER JOIN JHINT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JOIN_F2",12, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // JOIN_F2 ::= FULL OUTER JOIN JHINT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JOIN_F2",12, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // JOIN_F2 ::= LEFT OUTER JOIN JHINT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JOIN_F2",12, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // JOIN_F2 ::= RIGHT OUTER JOIN JHINT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JOIN_F2",12, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // JOIN_F2 ::= INNER JOIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JOIN_F2",12, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // JOIN_F2 ::= FULL OUTER JOIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JOIN_F2",12, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // JOIN_F2 ::= LEFT OUTER JOIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JOIN_F2",12, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // JOIN_F2 ::= RIGHT OUTER JOIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JOIN_F2",12, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // JHINT_F ::= LOOP 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JHINT_F",13, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // JHINT_F ::= HASH 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JHINT_F",13, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // JHINT_F ::= MERGE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JHINT_F",13, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // JHINT_F ::= REMOTE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("JHINT_F",13, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // WHERE_F ::= WHERE search_condition 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("WHERE_F",10, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // WHERE_F ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("WHERE_F",10, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // search_condition ::= search_condition_without_match 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("search_condition",31, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // search_condition ::= search_condition_without_match AND search_condition_without_match 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("search_condition",31, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // search_condition ::= search_condition_without_match OR search_condition_without_match 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("search_condition",31, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // search_condition ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("search_condition",31, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // search_condition_without_match ::= Parentesis_de_apertura search_condition_without_match_2 Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("search_condition_without_match",32, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // search_condition_without_match ::= search_condition_without_match_2 Coma search_condition_without_match_2 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("search_condition_without_match",32, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // search_condition_without_match ::= search_condition_without_match_2 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("search_condition_without_match",32, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // search_condition_without_match_2 ::= and_or_not predicate 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("search_condition_without_match_2",33, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // search_condition_without_match_2 ::= predicate and_or_not predicate 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("search_condition_without_match_2",33, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // search_condition_without_match_2 ::= predicate 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("search_condition_without_match_2",33, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // predicate ::= predicate_expression signos predicate_expression 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("predicate",28, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // predicate ::= ESCAPE String 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("predicate",28, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // predicate ::= predicate_expression signos 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("predicate",28, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // predicate_expression ::= OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("predicate_expression",30, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // predicate_expression ::= Int 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("predicate_expression",30, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // predicate_expression ::= Float 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("predicate_expression",30, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // predicate_expression ::= String 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("predicate_expression",30, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // signos ::= IS NOT NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // signos ::= Igual 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // signos ::= Mayor 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // signos ::= Menor 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // signos ::= Diferente 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // signos ::= Menor_o_igual 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // signos ::= Mayor_o_igual 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // signos ::= NOT LIKE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // signos ::= LIKE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // signos ::= BETWEEN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // signos ::= NOT BETWEEN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // signos ::= NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // signos ::= IS NULL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // signos ::= IS 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // signos ::= IS NOT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // signos ::= NOT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("signos",29, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // and_or_not ::= AND 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("and_or_not",27, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // and_or_not ::= OR 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("and_or_not",27, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // and_or_not ::= NOT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("and_or_not",27, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // and_or_not ::= AND NOT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("and_or_not",27, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // and_or_not ::= OR NOT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("and_or_not",27, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // BEGINTRANSACTION ::= BEGIN TRANSACTION OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("BEGINTRANSACTION",107, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // BEGINTRANSACTION ::= BEGIN TRAN OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("BEGINTRANSACTION",107, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // BEGINTRANSACTION ::= BEGIN OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("BEGINTRANSACTION",107, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // BEGINTRANSACTION ::= BEGIN TRAN FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("BEGINTRANSACTION",107, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // COMMITTCL ::= COMMIT TRANSACTION OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("COMMITTCL",141, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // COMMITTCL ::= COMMIT TRAN OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("COMMITTCL",141, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // COMMITTCL ::= COMMIT OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("COMMITTCL",141, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // COMMITTCL ::= COMMIT TRAN FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("COMMITTCL",141, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // SAVEPOINTTCL ::= SAVEPOINT OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("SAVEPOINTTCL",142, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // ROLLBACKTCL ::= ROLLBACK TRANSACTION OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ROLLBACKTCL",143, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // ROLLBACKTCL ::= ROLLBACK TRAN OBJECT_F FIN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ROLLBACKTCL",143, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // CursorDeclare ::= DECLARE OBJECT_F CURSOR CursorDeclarea CursorDeclareb CursorDeclarec CursorDeclared CursorDeclaree FOR SELECT_F CursorDeclaref 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclare",108, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-10)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // CursorDeclarea ::= LOCAL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclarea",109, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // CursorDeclarea ::= GLOBAL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclarea",109, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // CursorDeclarea ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclarea",109, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // CursorDeclareb ::= SCROLL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclareb",110, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // CursorDeclareb ::= FORWARD_ONLY 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclareb",110, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // CursorDeclareb ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclareb",110, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // CursorDeclarec ::= STATIC 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclarec",111, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // CursorDeclarec ::= KEYSET 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclarec",111, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // CursorDeclarec ::= DYNAMIC 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclarec",111, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // CursorDeclarec ::= FAST_FORWARD 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclarec",111, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // CursorDeclarec ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclarec",111, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // CursorDeclared ::= READ_ONLY 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclared",144, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // CursorDeclared ::= SCROLL_LOCKS 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclared",144, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // CursorDeclared ::= OPTIMISTIC 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclared",144, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // CursorDeclared ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclared",144, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // CursorDeclaree ::= TYPE_WARNING 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclaree",145, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // CursorDeclaree ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclaree",145, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // CursorDeclaref ::= FOR UPDATE CursorDeclareg 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclaref",114, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // CursorDeclaref ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclaref",114, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // CursorDeclareg ::= OF ColumnListA 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclareg",115, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // CursorDeclareg ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CursorDeclareg",115, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // ColumnListA ::= Identificador ColumnListB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnListA",116, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // ColumnListB ::= Coma Identificador ColumnListB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnListB",117, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // ColumnListB ::= EMPTY_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("ColumnListB",117, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // TOP_F ::= TOP Parentesis_de_apertura Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TOP_F",5, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // TOP_F ::= TOP Parentesis_de_apertura Int Parentesis_de_cierre PERCENT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TOP_F",5, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // TOP_F ::= TOP Int 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TOP_F",5, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // TOP_F ::= TOP Int PERCENT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TOP_F",5, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // TIPODATO ::= CHAR 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // TIPODATO ::= CHAR Parentesis_de_apertura Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // TIPODATO ::= BINARY 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // TIPODATO ::= BINARY Parentesis_de_apertura Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // TIPODATO ::= BLOB 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // TIPODATO ::= BLOB Parentesis_de_apertura Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // TIPODATO ::= BIT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // TIPODATO ::= BIT Parentesis_de_apertura Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // TIPODATO ::= SMALLINT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // TIPODATO ::= SMALLINT Parentesis_de_apertura Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // TIPODATO ::= INT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // TIPODATO ::= INT Parentesis_de_apertura Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // TIPODATO ::= INTEGER 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // TIPODATO ::= INTEGER Parentesis_de_apertura Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // TIPODATO ::= VARCHAR 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // TIPODATO ::= VARCHAR Parentesis_de_apertura Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // TIPODATO ::= VARCHAR Parentesis_de_apertura MAX Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // TIPODATO ::= FLOAT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // TIPODATO ::= FLOAT Parentesis_de_apertura Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // TIPODATO ::= BOOLEAN 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // TIPODATO ::= DATE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // TIPODATO ::= YEAR 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // TIPODATO ::= IMAGE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // TIPODATO ::= REAL 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // TIPODATO ::= TIME 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // TIPODATO ::= TIMESTAMP 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // TIPODATO ::= CURSOR 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // TIPODATO ::= TABLE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // TIPODATO ::= TEXT 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // TIPODATO ::= BYTE 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // TIPODATO ::= LONG TIPODATO 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // TIPODATO ::= DOUBLE TIPODATO 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // TIPODATO ::= NCHAR TIPODATO 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // TIPODATO ::= IDENTITY TIPODATO 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // TIPODATO ::= NVARCHAR 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // TIPODATO ::= NVARCHAR Parentesis_de_apertura Int Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // TIPODATO ::= NVARCHAR Parentesis_de_apertura MAX Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("TIPODATO",92, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // OBJECT_FDROP ::= OBJECT_FDROP OBJECT_F Coma OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OBJECT_FDROP",91, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-3)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // OBJECT_FDROP ::= OBJECT_F Coma OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OBJECT_FDROP",91, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // OBJECT_FDROP ::= OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OBJECT_FDROP",91, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // OBJECT_F ::= Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OBJECT_F",7, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // OBJECT_F ::= Identificador Punto Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OBJECT_F",7, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // OBJECT_F ::= Identificador Punto Identificador Punto Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OBJECT_F",7, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-4)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // OBJECT_F ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OBJECT_F",7, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // OBJECT_F ::= Numeral Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OBJECT_F",7, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // OBJECT_F ::= Doble_numeral Identificador 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OBJECT_F",7, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // OBJECT_F ::= Identificador Coma OBJECT_F 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OBJECT_F",7, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // OBJECT_F ::= Parentesis_de_apertura OBJECT_F Parentesis_de_cierre 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("OBJECT_F",7, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-2)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // CONST ::= Int 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CONST",6, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // CONST ::= String 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CONST",6, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // CONST ::= Bit 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CONST",6, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // CONST ::= Float 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("CONST",6, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // EMPTY_F ::= 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("EMPTY_F",21, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()),((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // FIN ::= Punto_y_coma 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FIN",4, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // FIN ::= GO 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FIN",4, ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // FIN ::= GO Punto_y_coma 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FIN",4, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // FIN ::= Punto_y_coma GO 
            {
              Object RESULT =null;

              CUP$sintax$result = parser.getSymbolFactory().newSymbol("FIN",4, ((java_cup.runtime.Symbol)CUP$sintax$stack.elementAt(CUP$sintax$top-1)), ((java_cup.runtime.Symbol)CUP$sintax$stack.peek()), RESULT);
            }
          return CUP$sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$sintax$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$sintax$do_action(
    int                        CUP$sintax$act_num,
    java_cup.runtime.lr_parser CUP$sintax$parser,
    java.util.Stack            CUP$sintax$stack,
    int                        CUP$sintax$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$sintax$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$sintax$do_action_part00000000(
                               CUP$sintax$act_num,
                               CUP$sintax$parser,
                               CUP$sintax$stack,
                               CUP$sintax$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$sintax$do_action_part00000001(
                               CUP$sintax$act_num,
                               CUP$sintax$parser,
                               CUP$sintax$stack,
                               CUP$sintax$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
